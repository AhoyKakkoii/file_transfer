{"version":3,"sources":["components/tools/ToolbarTools.js","components/controller/KeyboardController.js","config.js","store/database/HomeScreenHandler.js","store/actions/actionCreators.js","components/home/LoginScreen.js","components/home/RegisterScreen.js","components/tools/Dropdown.js","components/tools/TopNavbar.js","components/tools/Searchbar.js","components/controller/ImageController.js","components/tools/Card.js","components/tools/Dialog.js","graphql/Mutation.js","components/dashboard/RenameDialog.js","components/dashboard/TeamDialog.js","components/dashboard/DeleteDialog.js","components/dashboard/InviteDialog.js","graphql/Query.js","components/dashboard/DuplicateDialog.js","components/dashboard/PublishDialog.js","components/dashboard/DownloadDialog.js","components/dashboard/Dialogs.js","components/dashboard/ItemList.js","components/tools/Pagination.js","components/dashboard/Sidebar.js","components/dashboard/AddProjectDialog.js","components/dashboard/AddTilesetDialog.js","components/dashboard/Dashboard.js","store/database/WorkScreenHandler.js","components/tools/Collapsible.js","components/controller/PropertyTransaction.js","components/work/property/PropertyList.js","components/controller/MapGridController.js","components/controller/MapImageController.js","components/controller/TilesetImageController.js","components/controller/LayerTransaction.js","components/work/map/MapDisplay.js","components/work/property/MiniMap.js","components/tools/Titlebar.js","components/work/property/PropertyWindow.js","components/controller/LayerRenameTransaction.js","components/work/layer/LayerList.js","components/work/layer/LayerWindow.js","components/work/tileset/SelectedBoxes.js","components/work/tileset/TilesetDisplay.js","components/work/tileset/TilesetList.js","components/controller/TilesetTransaction.js","components/work/tileset/SelectTilesetDialog.js","components/work/tileset/TilesetWindow.js","components/tools/Toolbar.js","components/work/map/MapWindow.js","components/controller/JSTPS.js","components/work/SaveDialog.js","components/work/WorkScreen.js","components/draw/ColorPicker.js","components/draw/PropertyBar.js","components/draw/CanvasController.js","components/controller/DrawTransaction.js","components/controller/GridController.js","components/controller/CopyController.js","components/draw/SelectedBoxes.js","components/draw/DisplayPlace.js","components/draw/Dialogs.js","components/draw/ChatBox.js","components/draw/Draw.js","components/draw/ViewerDisplay.js","components/draw/TilesetViewer.js","components/test/ProjectManager.js","components/test/TilesetManager.js","components/test/MapManager.js","components/test/LayerManager.js","components/test/TestScreen.js","App.js","store/reducers/authReducer.js","store/reducers/backendReducer.js","store/reducers/tilesetReducer.js","store/reducers/propertyReducer.js","store/reducers/mapReducer.js","store/reducers/layerReducer.js","store/reducers/toolbarReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","UNDO","REDO","UPLOAD","DOWNLOAD","EXPORT_JSON","SAVE","COPY","PASTE","PENCIL","STAMP","ERASER","FILL","CROP","LINE","SQUARE","CIRCLE","ZOOM_IN","ZOOM_OUT","triggerLeftControll","e","code","KEYS","CONTROLLEFT","triggerLeftShift","SHIFTLEFT","triggerLeftCtrlC","KEY_C","ctrlKey","triggerLeftCtrlV","KEY_V","triggerLeftCtrlZ","KEY_Z","triggerLeftCtrlY","KEY_Y","API_URL","loginSuccessHandler","user","dispatch","getState","type","loginErrorHandler","errmsg","LoginScreen","state","err","openPopup","left","window","innerWidth","width","top","innerHeight","height","url","open","checkPopup","check","setInterval","popup","closed","clearInterval","startAuth","console","log","process","this","props","socket","on","data","msg","auth","close","handleLoginSuccess","history","push","handleLoginError","setState","axios","get","id","then","res","className","Grid","container","direction","onClick","bind","justify","alignItems","href","React","Component","connect","ownProps","backend","handler","RegisterScreen","username","inputErr","inputErrMsg","handleChange","target","value","emit","getError","getSignUpButtonStyle","TextField","error","label","variant","size","helperText","onChange","style","marginTop","Dropdown","handleMouseEnter","refs","wrapper","handleCloseDropDown","title","toLowerCase","handleClick","show","childRef","items","maxHeight","length","outline","wrapperStyle","ref","onMouseEnter","map","item","TopNavbar","picture","file","edit","view","createRef","onclick","location","hash","site","propertyOpen","layerOpen","mapOpen","tilesetOpen","handleWindowOpen","Navbar","bg","expand","Brand","handleSidebarOpen","cursor","fileTypes","key","handleFiles","handleImport","base64","v1","handleExport","handleSave","handleDuplicate","handleUndoTransaction","handleDoTransaction","handleCopy","handlePaste","paddingLeft","Checkbox","checked","inputProps","Collapse","Nav","src","alt","Searchbar","ImageController","ctx","gridWidth","gridHeight","imgWidth","imgHeight","initHelper","helper","helperctx","getContext","drawToGrid","gridPositions","callback","drawImageHelper","imageData","getImageDataFromHelper","i","putImageData","dx","dy","sx","sy","drawImage","img","Image","onload","helperImageData","getImageData","handleHorizontalFlip","imgSrc","canvas","toDataURL","scale","translate","handleVerticalFlip","handleSelectedHorizontalFlip","dimension","handleSelectedVerticalFlip","GetDataFromGrids","grids","x","y","imgData","getImageFromGrid","imageDimension","drawImageFromGrid","document","createElement","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","Card","handleOpen","name","refetch","handleSetItem","imageId","imageStr","newRes","showEditeBts","handleCheckboxClick","showPublishBt","downloadBtn","owner","ownerInfo","CircularProgress","_id","BetterDialog","maxWidth","fullWidth","header","content","actions","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","action","ADD_PROJECT","gql","REMOVE_PROJECT","UPDATE_PROJECT","CLEAR_PROJECTS","INVITE_2PROJECT","DUPLICATE_PROJECT","ADD_TILESET","CLEAR_TILESETS","REMOVE_TILESET","INVITE_2TILESET","UPDATE_TILESET","DUPLICATE_TILESET","ADD_MAP","CLEAR_MAPS","ADD_LAYER","CLEAR_LAYERS","CREATE_PROJECT_PACK","REMOVE_PROJECT_PACK","PUBLISH_TILESET","RenameDialog","handleOnChange","handleSubmit","variables","handleClose","disabled","mutation","MutationList","refetchQueries","updateItem","Button","defaultValue","TeamDialog","members","teamInfo","waves","member","DeleteDialog","removeItem","var","totalTextbox","InviteDialog","input1","text","able","input2","input3","input4","input5","input","toEdit","getMore","handleDelete","getTextField","getTextFields","handleAddMore","usernames","getSingleSubmit","users","getMutation","selected","req","teammates","forEach","includes","more","inviteUser","EMPTY_QUERY","graphql","GET_PROJECTS","GET_MY_OWNED_PROJECTS","GET_MY_RELATED_PROJECTS","GET_MY_SHARED_PROJECTS","GET_ALL_TILESETS","GET_TILESET","GET_TILESETS","GET_MY_OWNED_TILESETS","GET_MY_SHARED_TILESETS","GET_SELECTABLE_TILESETS","GET_ALL_MAPS","GET_MAP","GET_ALL_LAYERS","GET_LAYER","GET_PROJECT","GET_LAYER_FROM_PROJECT","GET_PUBLISHED_TILESETS","DuplicateDialog","newRefetch","query","QueryList","onCompleted","setTimeout","handleSelectSide","duplicateProject","PublishDialog","published","htmlFor","defaultChecked","DownloadDialog","handleDownload","dataJson","imageheight","imagewidth","margin","properties","spacing","tileheight","tileHeight","tilewidth","tileWidth","tilecount","require","JSON","stringify","tileset","downloadKey","fetchPolicy","loading","Dialogs","team","invite","rename","remove","duplicate","publish","download","ItemList","delete","handleDialogsOpen","handleDialogsClose","handleGoEdit","numItem","index","col","row","Math","floor","cardStyle","BetterPagination","pagination","getBoundingClientRect","marginLeft","defaultPage","color","handlePagination","count","Pagination","siblingCount","Sidebar","getClassName","showSidebar","handleSelect","whiteSpace","handleProjectDialogOpen","handleTilesetDialogOpen","AddDialog","parseInt","disableBt","itemName","handleAddProject","userId","awaitRefetchQueries","addItem","toString","message","Dashboard","projectDialogOpen","tilesetDialogOpen","page","search","sortBy","lastUpdate","handleSearchChange","handleSortBy","handleSortOrder","order","handleProjectDialogClose","handleTilesetDialogClose","getQuery","getProjects","projectsRelated","amount","projectsRelatedAmount","projectsOwned","projectsOwnedAmount","projectsShared","projectsSharedAmount","tilesets","tilesetsAmount","tilesetsOwned","tilesetsOwnedAmount","tilesetsShared","tilesetsSharedAmount","getSelected","getSortOrder","displayStyle","pageSkip","sortOrder","pageAmount","AddProjectDialog","AddTilesetDialog","propertySelectDisplay","restoreLayers","layerList","updateTilesetsHandler","passSelectedTileset","selectedItem","restoreTileset","Collapsible","handleAddProperty","resizing","d","transition","tabIndex","onMouseDown","stopPropagation","PropertyTransaction","custom","doCallback","undoCallback","doTransaction","undefined","undoTransaction","PropertyList","transactions","addTransaction","restoreCustomProperty","nothing","getRows","names","Object","keys","toReturn","flexShrink","Table","striped","bordered","hover","property","innerRef","nref","html","MapGridController","buildTilesets","buildLayers","buildMap","buildProperties","MapImageController","setTilesets","getMapNumGrids","numColumn","numRow","getCanvasDimension","canvasWidth","canvasHeight","drawBackGround","save","fillStyle","backgroundColor","fillRect","restore","drawGridBorder","gridColor","gridThickness","buildGridPositions","o","getGridPositions","setBackgroundColor","getTilesetByGridId","firstgid","getTilesetIdByGridId","canvasId","getTilesetIndexByGridId","getGridPositionByGridIndex","drawLayerGridByGridIndex","tileData","gridPosition","clearLayerCanvas","clearRect","getGridPositionFromMouseXY","getMoveSelectedTileData","selectedGrids","sort","a","b","gid","columns","gridIndexes","gridDiff","storeLayerState","layerCanvas","storedImageData","restoreLayerState","getIndexByColRow","changeSameAdjacentData","old_value","getMoveFillData","returnData","getMoveEraserData","TilesetImageController","getGridIndexByGridId","getTileDataByGridId","getMinMaxGridPositionsFromGridPositions","minX","Infinity","maxX","minY","maxY","min","max","getBoxedGridPositionsFromGridPositions","grid","returnGrids","handleConvertIndexToGID","imageWidth","imageHeight","LayerDeleteTransaction","ImageWrapper","scrollbar","mouseGridPosition","mouseDown","layerRefs","getToolName","selectedTool","TOOLS","handleZoomEffect","factor","nscale","getElementById","rect","clientX","clientY","ddy","ddx","transform","currX","getScrollLeft","currY","getScrollTop","scrollLeft","scrollTop","getSelectedTools","handleDrawLayers","imageController","layersRefName","layerRefName","handleDrawLayerByLayerData","handleMouseDown","selectedLayer","layerRef","locked","handleMouseMove","handleFixPosition","newMouseGridPosition","layer","handleMouseMoveDrawLayer","MapTransaction","mapFillClick","mapStampClick","handleMouseLeave","handleMouseClick","srcCanvas","scrollX","scrollY","backgroundCanvas","gridController","tilesetLoaded","totalStyle","renderThumbHorizontal","renderThumbVertical","onMouseMove","onMouseLeave","onMouseUp","visible","opacity","toolbar","loaded","MiniMap","tileMap","MapDisplay","Titlebar","controls","onCloseClick","onMinimizeClick","handleResetWindow","onMaximizeClick","handleMaxWindow","onResizeClick","PropertyWindow","customOpen","collapsible","handleOnResize","delta","position","handleStopResize","onlyNumber","obj","replace","display","handleToTop","onResizeStart","onResize","onResizeStop","handleUnselect","minWidth","minHeight","onDragStop","handleOnDragStop","zIndex","LayerRenameTransaction","LayerWindow","handleRename","LayerTransaction","handleVisibilityClick","handleLockClick","handleMoveUp","handleMoveDown","handleOnMouseDown","handleSelectProperty","handleAddLayer","layerToAdd","numWidth","mongoose","Types","ObjectId","handleOnMouseUp","handlePassOpacity","handleOpacityOnChange","LayerList","Slider","getAriaValueText","valueLabelDisplay","marks","onChangeCommitted","selectedBoxes","handleOnClick","shiftSelecting","TilesetDisplay","ctrlSelecting","handleDrawImgToGrid","handleSelectGrid","handleGridStateChange","tilesetSelectGrids","propertySelectTile","handleClearGrid","tilesetIdApplier","handleTilesetLoaded","onkeydown","Keyboard","onkeyup","SelectedBoxes","parent","TilesetList","handleGoView","forceUpdate","TilesetTransaction","oldValue","newValue","SelectTilesetDialog","selectedTilesets","filter","handleSubmitButton","oldTilesets","parse","newTilesets","concat","handleUpdateTilesets","tilesetIds","Set","publishedTilesets","TilesetWindow","handleZoomIn","handleZoomOut","handleUnselectZoom","handleOpenSelectTilesetDialog","selectTilesetDialogOpen","handleCloseSelectTilesetDialog","handleCheckAllTilesetLoaded","allLoaded","handleOnDeleteTileset","handleDeleteTileset","getCollapsibleList","updateFirstgid","CollapsibleHeight","li","zoom_in_btn","zoom_out_btn","Toolbar","disable","selectCallback","childElementCount","firstChild","click","parentNode","classList","add","secondaryContent","rightContent","c","MapWindow","handleOnResizeStop","fontSize","handleTest","test","JSTPS","isPerformingDo","performingDo","isPerformingUndo","performingUndo","transaction","mostRecentTransaction","splice","hasTransactionToRedo","peekDo","hasTransactionToUndo","peekUndo","clearAllTransactions","getSize","getRedoSize","getUndoSize","SaveDialog","saving","savemsg","saveConfirmed","handleSaveDialogClose","WorkScreen","saveDialogOpen","Transactions","targetZIndex","propertyZIndex","mapZIndex","tilesetZIndex","layerZIndex","getScreen","handleSaveDialogOpen","handleFormatMapJson","layers","tiledversion","compressionlevel","layersToReturn","tilesetsToReturn","image","project","html2canvas","body","render","match","params","tilesetsInfo","formatProjectPack","onresize","compose","ColorPicker","displayColorPicker","hex","styles","reactCSS","borderRadius","background","r","g","swatch","padding","boxShadow","popover","right","cover","bottom","PropertyBar","sliderValue","sliderOnChange","borderColor","borderColorOnChange","fillColor","fillColorOnChange","handleClear","CanvasController","setDimension","initDraw","tool","lineWidth","strokeStyle","startDraw","drawing","oldImg","onDraw","endDraw","startData","sendSocketNewOperation","newImg","addNewTransaction","beginPath","moveTo","lineTo","lineCap","stroke","startX","startY","fill","centerX","centerY","radiusX","abs","radiusY","ellipse","PI","GridController","fillGridFromMouseXY","setLineDash","strokeRect","DrawTransaction","new_value","DrawGridController","visialWidth","visialHeight","drawGrid","drawGridBackground","drawCopiedGrid","DrawGridsByRegion","startGrids","clearGridsByRegion","setGridThickness","getGridThickness","setGridColor","getGridColor","getBackGroundColor","buildModel","setCanvasDimension","mouseXYisInGrid","mouseX","mouseY","gridLeft","gridTop","getGridIndexFromMouseXY","getGridIndexFromPosition","getGridPositionFromIndex","gridIndex","getGridImageDataFromPosition","putGridImageDataToPosition","getHorizontalSymetricalPosition","newGridIndex","getVerticalSymetricalPosition","getGridPositionsFromCropMouse","cropDimension","startPosition","start","endPosition","end","getGridPositionsFromCropPositions","positions","getCropPositionFromGridPositions","leftMax","topMax","mouseXYisInGrids","handleShiftSelectedGrids","handleShift2Grids","getGridsPositionFromMouseGrids","startGridPosition","getPositionsForNoGridsImage","getMinRegionGridPositionsFromGridsAndGrid","getGridDiffFrom2Grids","currentGrids","startRegion","currentRegion","drawGridsByGridsDiff","gridsDiff","getGridsFromGridsDiffandGrids","Error","CopyController","startImgData","pastGrids","getStartGrids","getStartImageData","lastX","lastY","selectedGrid","lastGrid","startImg","handleMoveStart","handleStopCopying","handleMove","gridsToDraw","handleMoveEnd","handleMoveLeave","handleToolMove","DisplayPlace","DisplayBoxWidth","DisplayBoxHeight","copying","dialogOpen","handleToolStart","borderThic","painter","handleToolEnd","handleCropSelect","posistions","found","getImageDataWithGrid","handleUnselectGrid","handleGetImageNoGrid","handleDrawImageNoGrid","startCopyGrid","getTileset","getTilesetId","getTilesetJson","pasteCopiedGrid","newGrids","userIsTeammember","room","old_img","canvasDimension","DisplayBoxDimension","painterBox","paddingBottom","confirmSave","saved","saveErrorMsg","handleGoBack","handleDuplicateDialogOpen","handleStartDialogClose","handleDuplicateDialogClose","handleConfirmSaveDialogClose","class","handleRefreshAfterPublished","updateTileset","handlePublishDialogClose","ChatBox","inputText","chatHistory","userPicture","currentUser","textAlign","Draw","saveOpen","duplicaOpen","startAuthOpen","confirmSaveOpen","publishOpen","showChatBox","handleChat","handleChatClose","handleExportJson","handleConfirmSaveDialogOpen","handleStartDialogOpen","handlePublishDialogOpen","rgb","handleClearNoneToolOperation","tilesetId","ViewerDisplay","TilesetViewer","handleDialogOpen","handleDialogClose","ProjectManager","dataToAdd","p","editors","mapId","tilesetFirstgid","layerId","projectsRes","projects","addProjects","addProjectRes","clearProjects","clearProjectsRes","TilesetManager","t","tilesetsRes","btn_disable","addTilesets","clearTilesets","MapManager","handleAddMap","m","infinite","nextlayerid","nextobjectid","orientation","renderorder","version","mapsRes","maps","addMaps","clearMaps","layersRes","addLayers","clearLayers","TestScreen","projectJson","projectToDisplay","projectsInJson","mapsInJson","tilesetsInJson","layersInJson","projectToReduer","side","LayerManager","App","createSocket","exact","path","component","DrawScreen","initState","authReducer","backendReducer","io","imgs","tilesetReducer","propertyReducer","mapInfo","layersInfo","customPropertyName","customPropertyValue","formateMap","formateTilesets","formateLayers","formateProperty","mapReducer","layerReducer","layerFormat","getFormatData","data1","data2","toolbarReducer","projectReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","client","ApolloClient","uri","ReactDOM"],"mappings":"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","file":"static/js/main.f21a8c53.chunk.js","sourcesContent":["module.exports = {\r\n    UNDO: \"UNDO\",\r\n    REDO: \"REDO\",\r\n    UPLOAD: \"UPLOAD\",\r\n    DOWNLOAD: \"DOWNLOAD\",\r\n    EXPORT_JSON:\"EXPORT_JSON\",\r\n    SAVE: \"SAVE\",\r\n    COPY: \"COPY\",\r\n    PASTE: \"PASTE\",\r\n\r\n    PENCIL: \"PENCIL\",\r\n    STAMP: \"STAMP\",\r\n    ERASER: \"ERASER\",\r\n    FILL: \"FILL\",\r\n    CROP: \"CROP\",\r\n    LINE: 'LINE',\r\n    SQUARE: 'SQUARE',\r\n    CIRCLE: 'CIRCLE',\r\n\r\n    ZOOM_IN: \"ZOOM_IN\",\r\n    ZOOM_OUT: \"ZOOM_OUT\",\r\n}","module.exports = {\r\n\r\n    triggerLeftControll: e => {\r\n        return e.code === KEYS.CONTROLLEFT\r\n    },\r\n\r\n    triggerLeftShift: e => {\r\n        return e.code === KEYS.SHIFTLEFT\r\n    },\r\n\r\n    triggerLeftCtrlC: e => {\r\n        return e.code === KEYS.KEY_C && e.ctrlKey\r\n    },\r\n\r\n    triggerLeftCtrlV: e => {\r\n        return e.code === KEYS.KEY_V && e.ctrlKey\r\n    },\r\n\r\n    triggerLeftCtrlZ: e => {\r\n        return e.code === KEYS.KEY_Z && e.ctrlKey\r\n    },\r\n    triggerLeftCtrlY: e => {\r\n        return e.code === KEYS.KEY_Y && e.ctrlKey\r\n    }\r\n}\r\n\r\nconst KEYS = {\r\n    CONTROLLEFT: 'ControlLeft',\r\n    SHIFTLEFT: 'ShiftLeft',\r\n    KEY_C: 'KeyC',\r\n    KEY_V: 'KeyV',\r\n    KEY_Z: 'KeyZ',\r\n    KEY_Y: 'KeyY',\r\n}\r\n","export const API_URL = 'http://localhost:5000'\r\n// process.env.NODE_ENV === 'production'\r\n//     ? 'https://delit.herokuapp.com'\r\n//     : 'http://localhost:5000'","import * as actionCreators from '../actions/actionCreators.js'\r\n\r\n\r\nexport const createSocketHandler = () => (dispatch, getState) => {\r\n  dispatch({ type: 'CREATE_SOCKET' })\r\n}\r\n\r\nexport const loginSuccessHandler = (user) => (dispatch, getState) => {\r\n  dispatch({ type: actionCreators.LOGIN_SUCCESS, user })\r\n};\r\n\r\nexport const loginErrorHandler = (errmsg) => (dispatch, getState) => {\r\n  dispatch({ type: actionCreators.LOGIN_ERROR, errmsg })\r\n};\r\n\r\nexport const logoutHandler = () => (dispatch, getState) => {\r\n  dispatch({ type: actionCreators.LOGOUT_SUCCESS })\r\n};","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\r\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\r\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\r\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\r\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\r\n// REDUCER, WHICH ADVANCES STATE\r\n\r\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const PASS_PROJECT_ID = 'PASS_PROJECT_ID';\r\nexport const TILESET_UNSELECT = 'TILESET_UNSELECT';\r\nexport const TILESET_SELECT = 'TILESET_SELECT';\r\nexport const TILESET_IMG_INIT = 'TILESET_IMG_INI';\r\nexport const TILESETS_UPDATE = 'TILESETS_UPDATE';\r\nexport const PASS_SELECTED_TILESET = 'PASS_SELECTED_TILESET';\r\nexport const TILESET_DELETE = 'TILESET_DELETE';\r\nexport const TILESET_RESTORE = 'TILESET_RESTORE';\r\n\r\nexport const WINDOW_SELECT = 'WINDOW_SELECT';\r\nexport const WINDOW_INIT = 'WINDOW_INIT';\r\nexport const WINDOW_MOVE = 'WINDOW_MOVE';\r\nexport const WINDOW_RESIZE = 'WINDOW_RESIZE';\r\nexport const MAP_SELECT_TOOL = \"SELECT_TOOL\";\r\nexport const PROPERTY_SELECT = 'PROPERTY_SELECT';\r\nexport const PROPERTY_UNSELECT = 'PROPERTY_UNSELECT';\r\nexport const PROPERTY_CHANGE = 'PROPERTY_CHANGE';\r\nexport const PROPERTY_DELETE = 'PROPERTY_DELETE';\r\n\r\nexport const LAYER_SELECT = 'LAYER_SELECT';\r\nexport const LAYER_UNSELECT = 'LAYER_UNSELECT';\r\nexport const LAYER_RENAME = 'LAYER_RENAME';\r\nexport const LAYER_DELETE = 'LAYER_DELETE';\r\nexport const LAYER_MOVE_UP = 'LAYER_MOVE_UP';\r\nexport const LAYER_MOVE_DOWN = 'LAYER_MOVE_DOWN';\r\nexport const LAYER_VISIBILITY_TOGGLE = 'LAYER_VISIBILITY_TOGGLE';\r\nexport const LAYER_LOCK_TOGGLE = 'LAYER_LOCK_TOGGLE';\r\nexport const LAYER_PASS_OPACITY = 'LAYER_PASS_OPACITY';\r\nexport const TOOLBAR_SELECT = 'TOOLBAR_SELECT';\r\nexport const TOOLBAR_UNSELECT = 'TOOLBAR_UNSELECT';\r\n\r\nexport const SCROLL_X = 'SCROLL_X';\r\nexport const SCROLL_Y = 'SCROLL_Y';\r\n\r\n\r\nexport const TEST_PROJECT_ADD = 'TEST_PROJECT_ADD';\r\nexport const TEST_MAP_ADD = 'TEST_MAP_ADD';\r\nexport const TEST_TILESET_ADD = 'TEST_TILESET_ADD';\r\nexport const TEST_CLEAR = 'TEST_CLEAR';\r\n\r\nexport const TEST_LAYER_ADD = 'TEST_LAYER_ADD';\r\n\r\nexport const FORMAT_PROJECT = 'FORMAT_PROJECT'\r\nexport const SELECT_PROPERTY_WINDOW = 'SELECT_PROPERTY_WINDOW'\r\nexport const TILESET_LOADED = 'TILESET_LOADED'\r\nexport const TILESET_ID_APPLIER = 'TILESET_ID_APPLIER'\r\nexport const ADD_LAYER = 'ADD_LAYER'\r\nexport const SELECT_TILESET_GRIDS = 'SELECT_TILESET_GRIDS'\r\nexport const SELECT_PROPERTY_TILE = 'SELECT_PROPERTY_TILE'\r\nexport const MAP_STAMP_CLICK = 'MAP_STAMP_CLICK'\r\nexport const MAP_FILL_CLICK = 'MAP_FILL_CLICK'\r\nexport const LAYER_RESTORE = 'LAYER_RESTORE'\r\nexport const ADD_PROPERTY = 'ADD_PROPERTY'\r\nexport const RESTORE_CUSTOM_PROPERTY = 'RESTORE_CUSTOM_PROPERTY'","import React from 'react';\r\nimport './home_page.css'\r\nimport { Grid } from '@material-ui/core'\r\nimport { connect } from 'react-redux';\r\nimport { API_URL } from '../../config'\r\nimport axios from 'axios'\r\nimport * as handler from '../../store/database/HomeScreenHandler';\r\n\r\nclass LoginScreen extends React.Component {\r\n\r\n    state = {\r\n        err: null,\r\n    }\r\n\r\n    openPopup = (type) => {\r\n        const width = 900, height = 600\r\n        const left = (window.innerWidth / 2) - (width / 2)\r\n        const top = (window.innerHeight / 2) - (height / 2)\r\n        const url = `${API_URL}/auth/${type}`\r\n\r\n        return window.open(url, '',\r\n            `toolbar=no, location=no, directories=no, status=no, menubar=no, \r\n        scrollbars=no, resizable=no, copyhistory=no, width=${width}, \r\n        height=${height}, top=${top}, left=${left}`\r\n        )\r\n    }\r\n\r\n    checkPopup = () => {\r\n        const check = setInterval(() => {\r\n            if (this.popup.closed) {\r\n                clearInterval(check)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    startAuth = (type) => {\r\n        this.popup = this.openPopup(type)\r\n        this.checkPopup()\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(process.env)\r\n        console.log('running on:', API_URL)\r\n        this.props.socket.on('authBack', data => {\r\n            const { err, msg, auth } = data\r\n            if (err === false && this.popup) {\r\n                this.popup.close()\r\n                this.props.handleLoginSuccess(auth)\r\n                this.props.history.push('/dashboard')\r\n            }\r\n            else {\r\n                this.popup.close()\r\n                this.props.handleLoginError(msg)\r\n                this.setState({ err: msg })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const { socket } = this.props\r\n        socket.on('connect', () => {\r\n            axios.get(`/auth/init?socketId=${socket.id}&type=login`).then(res => {\r\n                console.log('set socket id:', res.data)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { err } = this.state\r\n        return (\r\n\r\n            <div className=\"home-page\">\r\n                <div className=\"login-form\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                    >\r\n                        <Grid>\r\n                            <div className=\"grey-text text-darken-3\">\r\n                                <div className=\"loginHeader1\">Delit</div>\r\n                            </div>\r\n                            <div className=\"loginHeader2\">Account Login</div>\r\n                        </Grid>\r\n                        <Grid>\r\n                            <div className=\"login-btn-box google-enabled-btn\" onClick={this.startAuth.bind(this, 'google')}>\r\n                                <div className='login-btn-img'><i className=\"fab fa-google-plus-square login-btn-icon\"></i></div>\r\n                                <div className='login-btn-context'>Sign In With Google</div>\r\n                            </div>\r\n                            <div className=\"login-btn-box facebook-enabled-btn\" onClick={this.startAuth.bind(this, 'facebook')}>\r\n                                <div className='login-btn-img'><i className=\"fab fa-facebook login-btn-icon\"></i></div>\r\n                                <div className='login-btn-context'>Sign In With Facebook</div>\r\n                            </div>\r\n                            <p className=\"login-err\">{err}</p>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n\r\n                            <a href='/register' className=\"login-register-switch-text\">New to Delit? Sign Up</a>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { history } = ownProps\r\n    const { auth } = state\r\n    return {\r\n        history, auth,\r\n        socket: state.backend.socket\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoginSuccess: (user) => dispatch(handler.loginSuccessHandler(user)),\r\n    handleLoginError: (errmsg) => dispatch(handler.loginErrorHandler(errmsg)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);;","import React from 'react';\r\nimport './home_page.css'\r\nimport { Grid } from '@material-ui/core'\r\nimport { connect } from 'react-redux';\r\nimport { API_URL } from '../../config'\r\nimport axios from 'axios'\r\nimport * as handler from '../../store/database/HomeScreenHandler';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass RegisterScreen extends React.Component {\r\n\r\n    state = {\r\n        err: null,\r\n        username: '',\r\n        inputErr: true,\r\n        inputErrMsg: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ username: e.target.value })\r\n        this.props.socket.emit('username_register', e.target.value)\r\n    }\r\n\r\n    openPopup = (type) => {\r\n        const width = 900, height = 600\r\n        const left = (window.innerWidth / 2) - (width / 2)\r\n        const top = (window.innerHeight / 2) - (height / 2)\r\n        const { username } = this.state\r\n        const url = `${API_URL}/auth/${type}?username=${username}`\r\n\r\n        return window.open(url, '',\r\n            `toolbar=no, location=no, directories=no, status=no, menubar=no, \r\n        scrollbars=no, resizable=no, copyhistory=no, width=${width}, \r\n        height=${height}, top=${top}, left=${left}`\r\n        )\r\n    }\r\n\r\n    checkPopup = () => {\r\n        const check = setInterval(() => {\r\n            if (this.popup.closed) {\r\n                clearInterval(check)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    startAuth = (type) => {\r\n        this.popup = this.openPopup(type)\r\n        this.checkPopup()\r\n    }\r\n\r\n    getError = () => {\r\n        const { inputErr, inputErrMsg } = this.state;\r\n        if (inputErr === true && inputErrMsg === '')\r\n            return ''\r\n        if (inputErr === false && inputErrMsg === 'Good')\r\n            return '👍 Username Available'\r\n        if (inputErr === true)\r\n            return '👎 ' + inputErrMsg\r\n    }\r\n\r\n    getSignUpButtonStyle = (type) => {\r\n        const { inputErr } = this.state\r\n        if (type === 'google')\r\n            return inputErr ? 'disabled-btn' : 'google-enabled-btn'\r\n        else\r\n            return inputErr ? 'disabled-btn' : 'facebook-enabled-btn'\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.socket.on('authBack', data => {\r\n            const { err, msg, auth } = data\r\n            if (err === false && this.popup) {\r\n                this.popup.close()\r\n                this.props.handleLoginSuccess(auth)\r\n                this.props.history.push('/dashboard')\r\n            }\r\n            else {\r\n                this.popup.close()\r\n                this.props.handleLoginError(msg)\r\n                this.setState({ err: msg })\r\n            }\r\n        })\r\n        this.props.socket.on('username_register_back', data => {\r\n            const { err, msg } = data\r\n            this.setState({ inputErr: err, inputErrMsg: msg })\r\n        })\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const { socket } = this.props\r\n        socket.on('connect', () => {\r\n            axios.get(`/auth/init?socketId=${socket.id}&type=register`)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { err, username, inputErr } = this.state\r\n\r\n        return (\r\n\r\n            <div className=\"home-page\">\r\n                <div className=\"login-form\">\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                    >\r\n                        <Grid>\r\n                            <div className=\"grey-text text-darken-3\">\r\n                                <div className=\"loginHeader1\">Delit</div>\r\n                            </div>\r\n                            <div className=\"loginHeader2\">Account Sign Up</div>\r\n                            <TextField error={inputErr}\r\n                                id=\"outlined-basic\"\r\n                                className=\"username-entry-input\"\r\n                                label=\"Enter Your Prefered Username\"\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                helperText={this.getError()}\r\n                                value={username}\r\n                                onChange={this.handleChange} />\r\n                        </Grid>\r\n                        <Grid style={{ marginTop: 32 }}>\r\n                            <div className={\"login-btn-box \" + this.getSignUpButtonStyle('google')} onClick={inputErr ? null : this.startAuth.bind(this, 'google')}>\r\n                                <div className='login-btn-img'><i className=\"fab fa-google-plus-square login-btn-icon\"></i></div>\r\n                                <div className='login-btn-context'>Sign Up With Google</div>\r\n                            </div>\r\n                            <div className={\"login-btn-box \" + this.getSignUpButtonStyle('facebook')} onClick={inputErr ? null : this.startAuth.bind(this, 'facebook')} >\r\n                                <div className='login-btn-img'><i className=\"fab fa-facebook login-btn-icon\"></i></div>\r\n                                <div className='login-btn-context'>Sign Up With Facebook</div>\r\n                            </div>\r\n                            <p className=\"login-err\">{err}</p>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <a href='/' className=\"login-register-switch-text\">Already Signed Up? Login</a>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { history } = ownProps\r\n    return {\r\n        history,\r\n        socket: state.backend.socket\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoginSuccess: (user) => dispatch(handler.loginSuccessHandler(user)),\r\n    handleLoginError: (errmsg) => dispatch(handler.loginErrorHandler(errmsg)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterScreen);;","import React from 'react'\r\nimport './tools.css'\r\n\r\nclass Dropdown extends React.Component {\r\n\r\n\r\n    // handleMouseLeave = e => {\r\n    //     const { open } = this.props\r\n    //     if (open) {\r\n    //         this.setState({ show: false })\r\n    //     }\r\n    // }\r\n\r\n    handleMouseEnter = e => {\r\n        const { target } = e\r\n        if (target === this.refs.wrapper) {\r\n            this.props.handleCloseDropDown(this.props.title.toLowerCase())\r\n        }\r\n    }\r\n\r\n    handleClick = e => {\r\n        this.setState({ show: true })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.childRef(this.refs.wrapper)\r\n    }\r\n\r\n    render() {\r\n        const { title, items, width, open } = this.props;\r\n        const style = {\r\n            maxHeight: items.length * 32,\r\n            outline: '2px solid gray',\r\n        }\r\n        const wrapperStyle = {\r\n            outline: '2px solid gray',\r\n            width,\r\n        }\r\n\r\n        return (\r\n            <div className={\"dropdown-wrapper\"}\r\n                style={wrapperStyle}\r\n                ref='wrapper'\r\n                onMouseEnter={this.handleMouseEnter}\r\n            >\r\n                {title} <i className=\"fas fa-chevron-down dropdown-icon\"></i>\r\n                <div className='dropdown-item-box' style={open ? style : null}>\r\n                    {items && items.map(item => {\r\n                        return item\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dropdown","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport Dropdown from './Dropdown'\r\nimport { v1 } from 'uuid'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport * as handler from '../../store/database/HomeScreenHandler';\r\nimport './tools.css'\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../config'\r\nimport ReactFileReader from 'react-file-reader';\r\n\r\nclass TopNavbar extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        picture: '',\r\n        file: false,\r\n        edit: false,\r\n        view: false\r\n    };\r\n\r\n    file = React.createRef()\r\n    edit = React.createRef()\r\n    view = React.createRef()\r\n\r\n    handleCloseDropDown = (type) => {\r\n        const { file, edit, view } = this.state\r\n        if (type === 'all')\r\n            this.setState({\r\n                file: false,\r\n                edit: false,\r\n                view: false\r\n            })\r\n        else {\r\n            if (!file && !edit && !view) return\r\n            this.setState({\r\n                file: false,\r\n                edit: false,\r\n                view: false,\r\n                [type]: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/auth/current').then(res => {\r\n            const { username, picture } = res.data;\r\n            if (!username || !picture)\r\n                this.props.history.push('/');\r\n            else {\r\n                this.setState({ username, picture });\r\n                this.props.handleLoginSuccess(res.data);\r\n            }\r\n        })\r\n\r\n        window.onclick = e => {\r\n            const { target } = e\r\n            const { file, edit, view } = this.state\r\n            if (file || edit || view) {\r\n                this.handleCloseDropDown('all')\r\n            } else if (target === this.file) {\r\n                this.setState({ file: true })\r\n            } else if (target === this.edit) {\r\n                this.setState({ edit: true })\r\n            } else if (target === this.view) {\r\n                this.setState({ view: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const { hash } = this.props.history.location;\r\n        if (hash === \"#_=_\")\r\n            this.props.history.push('/dashboard')\r\n    }\r\n\r\n    render() {\r\n        const { site, propertyOpen, layerOpen, mapOpen, tilesetOpen, handleWindowOpen } = this.props;\r\n        const { username, picture, file, edit, view } = this.state;\r\n        return (\r\n            <div>\r\n                <Navbar className=\"dashboard-top-navbar\" bg=\"white\" expand=\"lg\">\r\n                    {site === 'dashboard' ? <Navbar.Brand onClick={this.props.handleSidebarOpen} style={{ cursor: \"pointer\" }}><i className=\"fas fa-list\" /></Navbar.Brand> : null}\r\n                    <Navbar.Brand href=\"/dashboard\"> <div className=\"logo\" >Delit</div></Navbar.Brand>\r\n                    {site === 'workspace' || site === 'tileset' ? <>\r\n                        <Dropdown title=\"FILE\" width={96} childRef={ref => this.file = ref} open={file} handleCloseDropDown={this.handleCloseDropDown}\r\n                            items={[\r\n                                site === 'workspace' ? null : <ReactFileReader fileTypes={[\".jpeg\"]} key='o' ref='fileUploader' handleFiles={this.props.handleImport} base64={true}>\r\n                                    <div className=\"better-dropdown-item\">Import</div>\r\n                                </ReactFileReader>,\r\n                                <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handleExport}>Export</div>,\r\n                                <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handleSave}>Save</div>,\r\n                                site === 'workspace' ? null : <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handleDuplicate}>Duplicate</div>,\r\n                            ]} />\r\n                        <Dropdown title=\"EDIT\" width={128} childRef={ref => this.edit = ref} open={edit} handleCloseDropDown={this.handleCloseDropDown}\r\n                            items={[\r\n                                <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handleUndoTransaction}>{\"Undo   CTRL+Z\"}</div>,\r\n                                <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handleDoTransaction}>{\"Redo   CTRL+Y\"}</div>,\r\n                                site === 'workspace' ? null : <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handleCopy}>{\"Copy   CTRL+C\"}</div>,\r\n                                site === 'workspace' ? null : <div className=\"better-dropdown-item\" key={v1()} onClick={this.props.handlePaste}>{\"Paste  CTRL+V\"}</div>,\r\n                            ]} />\r\n                        {site === 'workspace' ? <Dropdown title=\"VIEW\" width={196} childRef={ref => this.view = ref} open={view} handleCloseDropDown={this.handleCloseDropDown}\r\n                            items={[\r\n                                <div className=\"better-dropdown-item\" key={v1()} style={{ paddingLeft: 0 }} onClick={e => handleWindowOpen(e, 'mapOpen')}>\r\n                                    <Checkbox\r\n                                        checked={mapOpen}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                Show Map Window\r\n                            </div>,\r\n                                <div className=\"better-dropdown-item\" key={v1()} style={{ paddingLeft: 0 }} onClick={e => handleWindowOpen(e, 'propertyOpen')}>\r\n                                    <Checkbox\r\n                                        checked={propertyOpen}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                Show Property Window\r\n                            </div>,\r\n                                <div className=\"better-dropdown-item\" key={v1()} style={{ paddingLeft: 0 }} onClick={e => handleWindowOpen(e, 'layerOpen')}>\r\n                                    <Checkbox\r\n                                        checked={layerOpen}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                Show Layer Window\r\n                            </div>,\r\n                                <div className=\"better-dropdown-item\" key={v1()} style={{ paddingLeft: 0 }} onClick={e => handleWindowOpen(e, 'tilesetOpen')}>\r\n                                    <Checkbox\r\n                                        checked={tilesetOpen}\r\n                                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                    />\r\n                                Show Tileset Window\r\n                            </div>,\r\n                            ]} /> : null}\r\n                    </> : null}\r\n\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                        </Nav>\r\n                        {/* <Navbar.Brand><a href='/test'>Test</a></Navbar.Brand> */}\r\n                        <Navbar.Brand><img src={picture} className=\"profile-img\" alt=\"logo\" /></Navbar.Brand>\r\n                        <Navbar.Brand>{username}</Navbar.Brand>\r\n                        <Navbar.Brand href={`${API_URL}/auth/logout`} >Log Out</Navbar.Brand>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoginSuccess: (user) => dispatch(handler.loginSuccessHandler(user)),\r\n    handleLoginError: (errmsg) => dispatch(handler.loginErrorHandler(errmsg)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavbar)\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n\r\n    render() {\r\n        const { onChange, value } = this.props\r\n        return (\r\n            <div>\r\n                <div className=\"dashboard-search\">\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        className=\"dashboard-input\"\r\n                        label=\"Enter Item Name to Search\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={value}\r\n                        onChange={onChange} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Searchbar;\r\n","export default class ImageController {\r\n    constructor(ctx, width, height, gridWidth, gridHeight, imgWidth, imgHeight) {\r\n        this.ctx = ctx\r\n        this.width = width\r\n        this.height = height\r\n        this.gridWidth = gridWidth\r\n        this.gridHeight = gridHeight\r\n        this.helper = document.createElement(\"CANVAS\");\r\n        this.initHelper(imgWidth, imgHeight)\r\n    }\r\n\r\n    initHelper = (width, height) => {\r\n        this.helper.width = width\r\n        this.helper.height = height\r\n        this.helperctx = this.helper.getContext('2d')\r\n    }\r\n\r\n\r\n    drawToGrid = (src, gridPositions, callback) => {\r\n\r\n        this.drawImageHelper(src, () => {\r\n            const imageData = this.getImageDataFromHelper()\r\n            for (let i = 0; i < gridPositions.length; i++)\r\n                this.ctx.putImageData(\r\n                    imageData,\r\n                    gridPositions[i].dx,\r\n                    gridPositions[i].dy,\r\n                    gridPositions[i].sx,\r\n                    gridPositions[i].sy,\r\n                    this.gridWidth,\r\n                    this.gridHeight\r\n                )\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n\r\n    drawImage = (src, callback) => {\r\n        let img = new Image()\r\n        img.src = src\r\n        img.onload = () => {\r\n            this.ctx.drawImage(img, 0, 0)\r\n            if (callback) callback()\r\n        }\r\n    }\r\n\r\n    drawImageHelper = (src, callback) => {\r\n        let img = new Image()\r\n        img.src = src\r\n        img.onload = () => {\r\n            this.helperctx.drawImage(img, 0, 0)\r\n            this.helperImageData = this.helperctx.getImageData(0, 0, img.width, img.height)\r\n            if (callback) callback()\r\n        }\r\n    }\r\n\r\n    getImageDataFromHelper = () => {\r\n        return this.helperImageData\r\n    }\r\n\r\n    handleHorizontalFlip = (callback) => {\r\n        const imgSrc = this.ctx.canvas.toDataURL('image/jpeg', 1)\r\n        this.ctx.scale(-1, 1)\r\n        this.ctx.translate(-this.width, 0);\r\n        this.drawImage(imgSrc, () => {\r\n            this.ctx.scale(-1, 1)\r\n            this.ctx.translate(-this.width, 0);\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n    handleVerticalFlip = (callback) => {\r\n        const imgSrc = this.ctx.canvas.toDataURL('image/jpeg', 1)\r\n        this.ctx.scale(1, -1)\r\n        this.ctx.translate(0, -this.height);\r\n        this.drawImage(imgSrc, () => {\r\n            this.ctx.scale(1, -1)\r\n            this.ctx.translate(0, -this.height);\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n    handleSelectedHorizontalFlip = (dimension, callback) => {\r\n        const { left, top, width, height } = dimension\r\n        this.initHelper(width, height)\r\n\r\n        const imageData = this.ctx.getImageData(left, top, width, height)\r\n        this.helperctx.putImageData(imageData, 0, 0)\r\n\r\n        const imgSrc = this.helperctx.canvas.toDataURL('image/jpeg', 1)\r\n        this.helperctx.scale(-1, 1)\r\n        this.helperctx.translate(-width, 0)\r\n        this.drawImageHelper(imgSrc, () => {\r\n            this.helperctx.scale(-1, 1)\r\n            this.helperctx.translate(-width, 0)\r\n            this.ctx.putImageData(this.helperImageData, left, top)\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n    handleSelectedVerticalFlip = (dimension, callback) => {\r\n        const { left, top, width, height } = dimension\r\n        this.initHelper(width, height)\r\n\r\n        const imageData = this.ctx.getImageData(left, top, width, height)\r\n        this.helperctx.putImageData(imageData, 0, 0)\r\n\r\n        const imgSrc = this.helperctx.canvas.toDataURL('image/jpeg', 1)\r\n        this.helperctx.scale(1, -1)\r\n        this.helperctx.translate(0, -height)\r\n        this.drawImageHelper(imgSrc, () => {\r\n            this.helperctx.scale(1, -1)\r\n            this.helperctx.translate(0, -height)\r\n            this.ctx.putImageData(this.helperImageData, left, top)\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n    GetDataFromGrids = (grids) => {\r\n        for (let i = 0; i < grids.length; i++) {\r\n            const { x, y } = grids[i]\r\n            const imgData = this.ctx.getImageData(x, y, this.gridWidth, this.gridHeight)\r\n            grids[i].imgData = imgData\r\n        }\r\n        return grids\r\n\r\n    }\r\n\r\n    getImageFromGrid = (gridPositions, imageDimension) => {\r\n        const imageData = this.ctx.getImageData(0, 0, this.width, this.height)\r\n        this.initHelper(imageDimension.width, imageDimension.height)\r\n        for (let i = 0; i < gridPositions.length; i++) {\r\n            this.helperctx.putImageData(\r\n                imageData,\r\n                -gridPositions[i].dx,\r\n                -gridPositions[i].dy,\r\n                gridPositions[i].x,\r\n                gridPositions[i].y,\r\n                this.gridWidth,\r\n                this.gridHeight\r\n            )\r\n        }\r\n        return this.helperctx.canvas.toDataURL('image/jpeg', 1)\r\n    }\r\n\r\n    drawImageFromGrid = (gridPositions, imageDimension) => {\r\n        const imageData = this.ctx.getImageData(0, 0, this.width, this.height)\r\n        this.initHelper(imageDimension.width, imageDimension.height)\r\n        for (let i = 0; i < gridPositions.length; i++) {\r\n            this.helperctx.putImageData(\r\n                imageData,\r\n                -gridPositions[i].dx,\r\n                -gridPositions[i].dy,\r\n                gridPositions[i].x,\r\n                gridPositions[i].y,\r\n                this.gridWidth,\r\n                this.gridHeight\r\n            )\r\n        }\r\n        const img = this.helperctx.canvas.toDataURL('image/jpeg', 1)\r\n        this.drawImage(img)\r\n    }\r\n}\r\n\r\n\r\nexport const arrayBufferToBase64 = (buffer) => {\r\n    let binary = '';\r\n    const bytes = new Uint8Array(buffer);\r\n    const len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n        binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n}","import React from 'react'\r\nimport './tools.css'\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { arrayBufferToBase64 } from '../controller/ImageController'\r\nclass Card extends React.Component {\r\n\r\n    state = {\r\n        imageData: ''\r\n    };\r\n\r\n    handleOpen = (name, item, refetch) => {\r\n        this.props.handleSetItem(item, refetch);\r\n        this.props.handleOpen(name);\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { imageId } = this.props.item;\r\n        if (imageId !== '')\r\n            axios.get(`/data/image?imageId=${imageId}`).then(res => {\r\n                const { err, msg, data } = res.data;\r\n                if (err)\r\n                    console.log(msg);\r\n                else if (!data) {\r\n                    axios.get(`/data/image?imageId=5ec6f35e3e2ef01724dd7c3b`).then(newRes => {\r\n                        const { err, msg, data } = newRes.data;\r\n                        if (err)\r\n                            console.log(msg)\r\n                        else {\r\n                            const base64Flag = 'data:image/jpeg;base64,';\r\n                            const imageStr = arrayBufferToBase64(data.data);\r\n                            this.setState({ imageData: base64Flag + imageStr })\r\n                        }\r\n\r\n                    })\r\n                }\r\n                else {\r\n                    const base64Flag = 'data:image/jpeg;base64,';\r\n                    const imageStr = arrayBufferToBase64(data.data);\r\n                    this.setState({ imageData: base64Flag + imageStr })\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { imageData } = this.state;\r\n        const { className, style, onClick, item, refetch, showEditeBts, handleCheckboxClick, showPublishBt, downloadBtn } = this.props;\r\n        const { name, ownerInfo } = item;\r\n        const owner = ownerInfo.username;\r\n        return (\r\n            <div>\r\n                <div className={className} style={style} onClick={onClick.bind(this, item)}>\r\n                    {\r\n                        imageData === '' ?\r\n                            <div className='card-preview-img'><CircularProgress className=\"image-loading\" /></div> :\r\n                            <img src={imageData} className='card-preview-img' alt='Loading' />\r\n                    }\r\n                    <div className=\"card-info-box\">\r\n                        <span className=\"card-info-name\"><b>Name:</b> {name}</span>\r\n                        <span className=\"card-owner\"><b>Owner:</b> {owner}</span>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    showEditeBts ?\r\n                        <div className=\"card-check-box-group\" style={style}>\r\n                            <input type=\"checkbox\" className={\"card-check-box\"} id={item._id} onChange={handleCheckboxClick.bind(this, item)} />\r\n                        </div>\r\n                        :\r\n                        showPublishBt ?\r\n                            <div className=\"card-info-btn-box\" style={style}>\r\n                                <div className=\"card-info-btn-tl card-info-btn\" onClick={this.handleOpen.bind(this, 'rename', item, refetch)}>Rename</div>\r\n                                <div className=\"card-info-btn-tr card-info-btn\" onClick={this.handleOpen.bind(this, 'duplicate', item, refetch)}>Duplicate</div>\r\n                                <div className=\"card-info-btn-bl card-info-btn\" onClick={this.handleOpen.bind(this, 'team', item, refetch)}>Team</div>\r\n                                <div className=\"card-info-btn-br card-info-btn\" onClick={this.handleOpen.bind(this, 'remove', item, refetch)}>Delete</div>\r\n                                <div className=\"card-info-btn-center card-info-btn\" onClick={this.handleOpen.bind(this, 'publish', item, refetch)}><span className=\"card-info-edit-btn-center\">Edit</span><span className=\"card-info-publish-btn-center\">Publish</span></div>\r\n                            </div>\r\n                            :\r\n                            downloadBtn ?\r\n                                <div className=\"card-info-btn-box\" style={style}>\r\n                                    <div className=\"card-info-btn-tl card-info-btn\" onClick={this.handleOpen.bind(this, 'rename', item, refetch)}>Rename</div>\r\n                                    <div className=\"card-info-btn-tr card-info-btn\" onClick={this.handleOpen.bind(this, 'duplicate', item, refetch)}>Duplicate</div>\r\n                                    <div className=\"card-info-btn-bl card-info-btn\" onClick={this.handleOpen.bind(this, 'team', item, refetch)}>Team</div>\r\n                                    <div className=\"card-info-btn-br card-info-btn\" onClick={this.handleOpen.bind(this, 'remove', item, refetch)}>Delete</div>\r\n                                    <div className=\"card-info-btn-center card-info-btn\" onClick={this.handleOpen.bind(this, 'download', item, refetch)}><span className=\"card-info-edit-btn-center\">Edit</span><span className=\"card-info-download-btn-center\">Download</span></div>\r\n                                </div>\r\n                                :\r\n                                <div className=\"card-info-btn-box\" style={style}>\r\n                                    <div className=\"card-info-btn-tl card-info-btn\" onClick={this.handleOpen.bind(this, 'rename', item, refetch)}>Rename</div>\r\n                                    <div className=\"card-info-btn-tr card-info-btn\" onClick={this.handleOpen.bind(this, 'duplicate', item, refetch)}>Duplicate</div>\r\n                                    <div className=\"card-info-btn-bl card-info-btn\" onClick={this.handleOpen.bind(this, 'team', item, refetch)}>Team</div>\r\n                                    <div className=\"card-info-btn-br card-info-btn\" onClick={this.handleOpen.bind(this, 'remove', item, refetch)}>Delete</div>\r\n                                    <div className=\"card-info-btn-center card-info-btn\" >Edit</div>\r\n                                </div>\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        socket: state.backend.socket\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nclass BetterDialog extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { open, maxWidth, fullWidth, style, header, content, actions } = this.props\r\n\r\n        return (\r\n            <Dialog\r\n                open={open}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                maxWidth={maxWidth}\r\n                fullWidth={fullWidth}\r\n                style={style}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {header}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {content}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {\r\n                        actions && actions.map(action => {\r\n                            return action\r\n                        })\r\n                    }\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BetterDialog;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport default {\r\n    ADD_PROJECT: gql`\r\n    mutation addProject(\r\n            $name: String!,\r\n            $owner: String!,\r\n            $editors: [String],\r\n            $imageId: String!,\r\n            $mapId:String!,\r\n            $tilesetId:[String],\r\n            $tilesetFirstgid:[Int],\r\n            $layerId:[String]\r\n        ){\r\n            addProject(\r\n                name: $name,\r\n                owner: $owner,\r\n                editors: $editors\r\n                imageId: $imageId\r\n                mapId:$mapId\r\n                tilesetId:$tilesetId\r\n                tilesetFirstgid:$tilesetFirstgid\r\n                layerId:$layerId\r\n                ){\r\n                name\r\n                owner\r\n                editors\r\n            }\r\n        }\r\n    `,\r\n    REMOVE_PROJECT: gql`\r\n    mutation removeProject(\r\n            $id: String!\r\n        ){\r\n            removeProject(id: $id){\r\n                name\r\n                owner\r\n                editors\r\n                ownerInfo{\r\n                    username\r\n                }\r\n            }\r\n        }\r\n    `,\r\n    UPDATE_PROJECT: gql`\r\n    mutation updateProject(\r\n            $id: String!,\r\n            $name: String!,\r\n        ){\r\n            updateProject(id: $id, name: $name){\r\n                name\r\n                owner\r\n                editors\r\n                ownerInfo{\r\n                    username\r\n                }\r\n            }\r\n        \r\n        }\r\n    `,\r\n\r\n    CLEAR_PROJECTS: gql`\r\n    mutation {\r\n        clearProjects\r\n    }\r\n    `,\r\n\r\n    INVITE_2PROJECT: gql`\r\n    mutation invite2Project(\r\n        $id:String!\r\n        $users:[String]!,\r\n    ){\r\n        invite2Project(id: $id, invites:$users){\r\n            name\r\n            owner\r\n            editors\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    }\r\n    `,\r\n\r\n    DUPLICATE_PROJECT: gql`\r\n    mutation duplicateProject(\r\n        $id:String!\r\n        $name:String!\r\n        $owner:String!\r\n    ){\r\n        duplicateProject(id: $id, name:$name, owner:$owner){\r\n            name\r\n            owner\r\n            editors\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    }\r\n    `,\r\n\r\n    ADD_TILESET: gql`\r\n    mutation addTileset(\r\n        $id:String\r\n        $name:String!\r\n        $owner:String!\r\n        $editors:[String]\r\n        $imageId:String!\r\n        $tileWidth:Int!\r\n        $tileHeight:Int!\r\n        $width: Int!\r\n        $height:Int!\r\n        \r\n        $columns:Int\r\n        $margin:Int\r\n        $spacing:Int\r\n        $tilecount:Int\r\n        $published: Boolean\r\n    ){\r\n        addTileset(\r\n            _id:$id\r\n            name:$name\r\n            owner:$owner\r\n            editors:$editors\r\n            imageId:$imageId\r\n            tileWidth:$tileWidth\r\n            tileHeight:$tileHeight\r\n            width:$width\r\n            height:$height\r\n            \r\n            columns:$columns\r\n            margin:$margin\r\n            spacing:$spacing\r\n            tilecount:$tilecount\r\n            published: $published   \r\n        ){\r\n            _id\r\n            name\r\n            owner\r\n        }\r\n    }`,\r\n\r\n    CLEAR_TILESETS: gql`\r\n    mutation {\r\n        clearTilesets\r\n    }\r\n    `,\r\n\r\n    REMOVE_TILESET: gql`\r\n    mutation removeTileset(\r\n            $id: String!\r\n        ){\r\n            removeTileset(id: $id){\r\n                name\r\n                owner\r\n                editors\r\n                ownerInfo{\r\n                    username\r\n                }\r\n            }\r\n        }\r\n    `,\r\n\r\n\r\n    INVITE_2TILESET: gql`\r\n    mutation invite2Tileset(\r\n        $id:String!\r\n        $users:[String]!,\r\n    ){\r\n        invite2Tileset(id: $id, invites:$users){\r\n            name\r\n            owner\r\n            editors\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    }\r\n    `,\r\n\r\n    UPDATE_TILESET: gql`\r\n    mutation updateTileset(\r\n        $id: String!,\r\n        $name: String!,\r\n    ){\r\n        updateTileset(id: $id, name: $name){\r\n            name\r\n            owner\r\n            editors\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    \r\n    }`,\r\n\r\n    DUPLICATE_TILESET: gql`\r\n    mutation duplicateTileset(\r\n        $id:String!\r\n        $name:String!\r\n        $owner:String!\r\n    ){\r\n        duplicateTileset(id: $id, name:$name, owner:$owner){\r\n            name\r\n            owner\r\n            editors\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    }\r\n    `,\r\n\r\n    ADD_MAP: gql`\r\n    mutation addMap(\r\n        $id: String\r\n        $width: Int!\r\n        $height: Int!\r\n        $infinite: Boolean\r\n        $nextlayerid: Int\r\n        $nextobjectid: Int\r\n        $orientation: String\r\n        $renderorder: String\r\n        $tiledversion: String\r\n        $tileHeight: Int!\r\n        $tileWidth: Int!\r\n        $type: String\r\n        $version: Float\r\n    ){\r\n        addMap(\r\n            _id:$id\r\n            width: $width\r\n            height: $height\r\n            infinite: $infinite\r\n            nextlayerid: $nextlayerid\r\n            nextobjectid: $nextobjectid\r\n            orientation: $orientation\r\n            renderorder: $renderorder\r\n            tiledversion: $tiledversion\r\n            tileHeight: $tileHeight\r\n            tileWidth: $tileWidth\r\n            type: $type\r\n            version: $version\r\n        ){\r\n            _id\r\n            width\r\n            height\r\n            tileWidth\r\n            tileHeight\r\n        }\r\n    }`\r\n    ,\r\n\r\n\r\n    CLEAR_MAPS: gql`\r\n    mutation clearMaps{\r\n        clearMaps\r\n    }\r\n    `,\r\n\r\n    ADD_LAYER: gql`\r\n    mutation addLayer(\r\n        $_id: String\r\n        $data: [Int]\r\n        $width: Int!\r\n        $height: Int!\r\n        $name: String!,\r\n        $opacity: Int!,\r\n        $type: String,\r\n        $visible: Boolean,\r\n        $x: Int,\r\n        $y: Int,\r\n    ){\r\n        addLayer(\r\n            _id:$_id\r\n            data: $data\r\n            width: $width\r\n            height: $height\r\n            name: $name\r\n            opacity: $opacity\r\n            type: $type\r\n            visible: $visible\r\n            x: $x\r\n            y: $y\r\n        ){\r\n            _id\r\n            data\r\n            height\r\n            name\r\n            opacity\r\n            type\r\n            visible\r\n            width\r\n            x\r\n            y\r\n        }\r\n    }\r\n    `,\r\n    CLEAR_LAYERS: gql`\r\n    mutation clearLayers{\r\n        clearLayers\r\n    }\r\n    `,\r\n\r\n    CREATE_PROJECT_PACK: gql`\r\n    mutation createProjectPack(\r\n        $name: String!\r\n        $owner: String!\r\n        $editors: [String]\r\n        $imageId: String!\r\n        $width: Int!\r\n        $height: Int!\r\n        $tileWidth: Int!\r\n        $tileHeight: Int!\r\n    ){\r\n        createProjectPack(\r\n            name:$name\r\n            owner:$owner\r\n            editors:$editors\r\n            imageId:$imageId\r\n            width:$width\r\n            height:$height\r\n            tileWidth:$tileWidth\r\n            tileHeight:$tileHeight\r\n        )\r\n    }\r\n    `,\r\n\r\n    REMOVE_PROJECT_PACK: gql`\r\n    mutation removeProjectPack(\r\n        $id:String!\r\n    ){\r\n        removeProjectPack(\r\n            id:$id\r\n        )\r\n    }\r\n    `,\r\n\r\n    PUBLISH_TILESET: gql`\r\n    mutation publishTileset(\r\n        $id:String!\r\n        $published: Boolean!\r\n    ){\r\n        publishTileset(\r\n            id:$id\r\n            published:$published\r\n        ){\r\n            _id\r\n            name\r\n            owner\r\n            editors\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    }\r\n    `,\r\n}","import Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from 'react'\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\n\r\nclass RenameDialog extends React.Component {\r\n    state = {\r\n        name: ''\r\n    };\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({ name: e.target.value })\r\n    };\r\n\r\n    handleSubmit = (callback) => {\r\n        callback({\r\n            variables: {\r\n                id: this.props.item._id,\r\n                name: this.state.name === '' ? this.props.item.name : this.state.name\r\n            }\r\n        });\r\n        this.props.handleClose('rename')\r\n    };\r\n\r\n\r\n    render() {\r\n        const { open, item, user, refetch, handleClose, type } = this.props;\r\n        if (!item) return null;\r\n        const header = type === 'tileset'? \"Rename Tileset\" :\"Rename Project\";\r\n        const label = type === 'tileset'? \"Enter Tileset Name\" :\"Enter Project Name\";\r\n        const disabled = item.ownerInfo.username !== user.username;\r\n        const mutation = type === 'tileset' ? MutationList.UPDATE_TILESET : MutationList.UPDATE_PROJECT;\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[refetch]}>\r\n                {(updateItem, res) => (\r\n                    <Dialog\r\n                        header={header}\r\n                        open={open}\r\n                        actions={[\r\n                            <Button key='1' onClick={this.handleSubmit.bind(this, updateItem)} disabled={disabled}>Enter</Button>,\r\n                            <Button key='2' onClick={handleClose.bind(this, 'rename')}>Cancel</Button>,\r\n                        ]}\r\n                        content={\r\n                            <>\r\n                                {disabled ? <p className='red'>You are not the Owner, You cannot Rename</p> : null}\r\n                                <TextField\r\n                                    className=\"form-control\"\r\n                                    label={label}\r\n                                    type=\"name\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    defaultValue={item.name}\r\n                                    onChange={this.handleOnChange}\r\n                                />\r\n                            </>\r\n                        } />\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RenameDialog","import React from 'react'\r\nimport Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport { v1 } from 'uuid'\r\n\r\n\r\nclass TeamDialog extends React.Component {\r\n\r\n    handleOpen = (name, item, refetch) => {\r\n        this.props.handleSetItem(item, refetch)\r\n        this.props.handleOpen(name)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { open, handleClose, item, refetch } = this.props\r\n        if (!item) return null\r\n        const members = item.teamInfo\r\n        return (\r\n            <Dialog\r\n                header={item.name}\r\n                open={open}\r\n                fullWidth={true}\r\n                maxWidth=\"xs\"\r\n                actions={[\r\n                    <Button key='1' waves=\"orange\" onClick={this.handleOpen.bind(this, 'invite', item, refetch)}>invite</Button>,\r\n                    <Button key='2' waves=\"orange\" onClick={handleClose.bind(this, 'team')}>Close</Button>\r\n                ]}\r\n                content={<div className=\"teamlist-wrapper\">\r\n                    {\r\n                        members && members.map(member => {\r\n                            const { username, picture } = member\r\n                            return (\r\n                                <div className=\"member-box\" key={v1()}>\r\n                                    <img src={picture} className=\"member-picture\" alt='member'></img>\r\n                                    <div className=\"member-name\">{username}</div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                } />\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeamDialog","import React from 'react'\r\nimport Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\n\r\nclass DeleteDialog extends React.Component {\r\n\r\n\r\n    handleClose = () => {\r\n        this.props.handleClose('remove')\r\n    };\r\n\r\n    handleSubmit = (callback) => {\r\n        const { item } = this.props;\r\n        callback({\r\n            variables: {\r\n                id: item._id\r\n            }\r\n        });\r\n        this.handleClose()\r\n    };\r\n\r\n    render() {\r\n        const { open, item, user, refetch, type } = this.props;\r\n        if (!item) return null;\r\n        const mutation = type === 'tileset' ? MutationList.REMOVE_TILESET : MutationList.REMOVE_PROJECT_PACK;\r\n        const header = type === 'tileset' ? \"Delete Tileset\" : \"Delete Project\";\r\n        const name = type === 'tileset' ? \"Tileset\" : \"Project\";\r\n        const disabled = item.ownerInfo.username !== user.username\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[refetch]}>\r\n                {(removeItem, res) => (\r\n                    <Dialog\r\n                        header={header}\r\n                        open={open}\r\n                        actions={[\r\n                            <Button key='1' disabled={disabled} onClick={this.handleSubmit.bind(this, removeItem)}>Confirm</Button>,\r\n                            <Button key='2' onClick={this.handleClose}>Cancel</Button>,\r\n                        ]}\r\n                        var totalTextbox='1'\r\n                        content={\r\n                            <section className=\"dialog_content\" id=\"textBoxes\">\r\n                                <h3>Are You Sure to Delete This {name}?</h3>\r\n                                <h3>This Can not be Undo, No Backup!</h3>\r\n                                {disabled ? <p className='red'>You Are not the Owner. You cannot delete it!</p> : null}\r\n                            </section>\r\n                        } />\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteDialog","import React from 'react'\r\nimport Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\n\r\nclass InviteDialog extends React.Component {\r\n\r\n    state = {\r\n        input1: { text: '', able: true, err: false, msg: '', id: '' },\r\n        input2: { text: '', able: false, err: false, msg: '', id: '' },\r\n        input3: { text: '', able: false, err: false, msg: '', id: '' },\r\n        input4: { text: '', able: false, err: false, msg: '', id: '' },\r\n        input5: { text: '', able: false, err: false, msg: '', id: '' },\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.handleClose('invite')\r\n    }\r\n\r\n    handleOnChange = (e, input) => {\r\n        let toEdit = this.state[input]\r\n        toEdit.text = e.target.value\r\n        this.setState({ [input]: toEdit })\r\n        this.props.socket.emit('invite', {\r\n            name: input,\r\n            data: toEdit\r\n        })\r\n    }\r\n\r\n    getMore = () => {\r\n        const { input1, input2, input3, input4, input5 } = this.state\r\n        if (input1.able && input2.able && input3.able && input4.able && input5.able)\r\n            return true\r\n        return false\r\n    }\r\n\r\n    handleDelete = (input) => {\r\n        let toEdit = this.state[input]\r\n        toEdit.text = ''\r\n        toEdit.able = false;\r\n        this.setState({ [input]: toEdit })\r\n    }\r\n\r\n    getTextField = (input) => {\r\n        const { able, text, msg, err } = input\r\n        if (!able) return null\r\n        return (\r\n            <div className='input-wrapper'>\r\n                <TextField\r\n                    error={err}\r\n                    className=\"team-input\"\r\n                    label=\"Enter Username of Your Teamate\"\r\n                    name=\"projectName\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={text}\r\n                    helperText={msg}\r\n                    onChange={e => this.handleOnChange(e, 'input1')}\r\n                />\r\n                <i className=\"team-input-delete fas fa-trash-alt\"\r\n                    onClick={e => this.handleDelete('input1')}\r\n                />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    getTextFields = () => {\r\n        const { input1, input2, input3, input4, input5 } = this.state\r\n        const { item, user } = this.props\r\n        const disabled = item.ownerInfo.username === user.username ? false : true\r\n        if (disabled) return null\r\n\r\n        return (\r\n            <div className='inputs-wrapper'>\r\n                {this.getTextField(input1)}\r\n                {this.getTextField(input2)}\r\n                {this.getTextField(input3)}\r\n                {this.getTextField(input4)}\r\n                {this.getTextField(input5)}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    handleAddMore = () => {\r\n        let { input1, input2, input3, input4, input5 } = this.state\r\n        if (!input1.able) {\r\n            input1.able = true\r\n            this.setState({ input1 })\r\n            return\r\n        }\r\n        if (!input2.able) {\r\n            input2.able = true\r\n            this.setState({ input2 })\r\n            return\r\n        }\r\n        if (!input3.able) {\r\n            input3.able = true\r\n            this.setState({ input3 })\r\n            return\r\n        }\r\n        if (!input4.able) {\r\n            input4.able = true\r\n            this.setState({ input4 })\r\n            return\r\n        }\r\n        if (!input5.able) {\r\n            input5.able = true\r\n            this.setState({ input5 })\r\n            return\r\n        }\r\n    }\r\n\r\n    handleSubmit = (callback) => {\r\n        const { input1, input2, input3, input4, input5 } = this.state\r\n        const { _id } = this.props.item\r\n        let usernames = []\r\n        if (this.getSingleSubmit(input1)) usernames.push(this.getSingleSubmit(input1))\r\n        if (this.getSingleSubmit(input2)) usernames.push(this.getSingleSubmit(input2))\r\n        if (this.getSingleSubmit(input3)) usernames.push(this.getSingleSubmit(input3))\r\n        if (this.getSingleSubmit(input4)) usernames.push(this.getSingleSubmit(input4))\r\n        if (this.getSingleSubmit(input5)) usernames.push(this.getSingleSubmit(input5))\r\n        callback({\r\n            variables: {\r\n                id: _id,\r\n                users: usernames\r\n            }\r\n        })\r\n        this.handleClose();\r\n        this.props.handleClose('team')\r\n    }\r\n\r\n    getSingleSubmit = (input) => {\r\n        const { id } = input\r\n        if (id === '') return null\r\n        return id\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { username } = this.props.user\r\n        this.props.socket.on('inviteBack', res => {\r\n            let { name, err, msg, req, id } = res\r\n            let toEdit = this.state[name]\r\n            const { teamInfo } = this.props.item\r\n            let teammates = []\r\n            teamInfo.forEach(e => {\r\n                teammates.push(e.username)\r\n            })\r\n            if (teammates.includes(req)) {\r\n                toEdit.err = true\r\n                toEdit.msg = '👎 This User is already Your teammate'\r\n                this.setState({ [name]: toEdit })\r\n            }\r\n            else if (username === req) {\r\n                toEdit.err = true\r\n                toEdit.msg = '👎 You can not invite Yourself'\r\n                this.setState({ [name]: toEdit })\r\n            } else {\r\n                toEdit.err = err\r\n                toEdit.msg = msg\r\n                toEdit.id = id\r\n                this.setState({ [name]: toEdit })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    getMutation = () => {\r\n        const { selected } = this.props;\r\n        if (selected === 'all')\r\n            return MutationList.INVITE_2PROJECT\r\n        if (selected === 'create')\r\n            return MutationList.INVITE_2PROJECT\r\n        if (selected === 'share')\r\n            return MutationList.INVITE_2PROJECT\r\n        if (selected === 'tilesets')\r\n            return MutationList.INVITE_2TILESET\r\n        if (selected === 'tilesetsOwned')\r\n            return MutationList.INVITE_2TILESET\r\n        if (selected === 'tilesetsShared')\r\n            return MutationList.INVITE_2TILESET\r\n        return MutationList.INVITE_2PROJECT\r\n    };\r\n\r\n\r\n    render() {\r\n        const { open, item, user, refetch } = this.props\r\n        if (!item) return null\r\n        const disabled = item.ownerInfo.username === user.username ? false : true\r\n        const more = this.getMore()\r\n        const mutation = this.getMutation()\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[refetch]}>\r\n                {(inviteUser, res) => (\r\n                    <Dialog\r\n                        header=\"Invite Teammate\"\r\n                        open={open}\r\n                        actions={[\r\n                            <Button key='1' disabled={disabled} onClick={this.handleSubmit.bind(this, inviteUser)}>Submit</Button>,\r\n                            <Button key='2' disabled={more || disabled} onClick={this.handleAddMore}>Add More</Button>,\r\n                            <Button key='3' onClick={this.handleClose}>Close</Button>\r\n                        ]}\r\n                        content={\r\n                            <section className=\"dialog_content\" id=\"textBoxes\">\r\n                                <p><strong>Invite Your friend to work together</strong></p>\r\n                                <p>they can view and edit, but not delete</p>\r\n                                {disabled ? <p className='err-msg'>You are not the Owner, You cannot invite</p> : null}\r\n                                {this.getTextFields()}\r\n                            </section>\r\n                        } />\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        socket: state.backend.socket\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteDialog);;","import graphql from 'graphql-tag'\r\nexport default {\r\n\r\n    EMPTY_QUERY: graphql`{\r\n        empty\r\n    }`,\r\n    GET_PROJECTS: graphql`\r\n    {\r\n        projects{\r\n            _id\r\n            name\r\n            editors\r\n            owner\r\n            ownerInfo{\r\n                username\r\n            }\r\n        }\r\n    }`,\r\n    GET_MY_OWNED_PROJECTS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            projectsOwned(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n                ){\r\n                name\r\n                _id\r\n                imageId\r\n                ownerInfo{\r\n                    username\r\n                }\r\n                teamInfo{\r\n                    _id\r\n                    username\r\n                    picture\r\n                }\r\n            }\r\n            projectsOwnedAmount(searchName: $search)\r\n        }\r\n    }`,\r\n    GET_MY_RELATED_PROJECTS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            projectsRelated(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n                ){\r\n                name\r\n                _id\r\n                imageId\r\n                ownerInfo{\r\n                    username\r\n                }\r\n                teamInfo{\r\n                    _id\r\n                    username\r\n                    picture\r\n                }\r\n            }\r\n            projectsRelatedAmount(searchName: $search)\r\n        }\r\n    }`,\r\n    GET_MY_SHARED_PROJECTS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            projectsShared(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n                ){\r\n                name\r\n                _id\r\n                imageId\r\n                ownerInfo{\r\n                    username\r\n                }\r\n                teamInfo{\r\n                    _id\r\n                    username\r\n                    picture\r\n                }\r\n            }\r\n            projectsSharedAmount(searchName: $search)\r\n        }\r\n    }`,\r\n\r\n    GET_ALL_TILESETS: graphql`\r\n    {\r\n        tilesets{\r\n            _id\r\n            name\r\n            owner\r\n            imageId\r\n            width\r\n            height\r\n            tileWidth\r\n            tileHeight\r\n            columns\r\n            margin\r\n            spacing\r\n            tilecount\r\n        }\r\n    }\r\n    `,\r\n    GET_TILESET: graphql`\r\n    query tileset($id: String!){\r\n        tileset(id:$id){\r\n            _id\r\n            name\r\n            ownerInfo{\r\n                username\r\n            }\r\n            teamInfo{\r\n                _id\r\n                username\r\n            }\r\n            imageId\r\n            width\r\n            height\r\n            tileWidth\r\n            tileHeight\r\n            columns\r\n            margin\r\n            spacing\r\n            tilecount\r\n            published\r\n        }\r\n    }\r\n    `,\r\n    GET_TILESETS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            tilesets(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n            ){\r\n                name\r\n                _id\r\n                imageId\r\n                ownerInfo{\r\n                    username\r\n                }\r\n                teamInfo{\r\n                    _id\r\n                    username\r\n                    picture\r\n                }\r\n                published\r\n            }\r\n            tilesetsAmount(searchName: $search)\r\n        }\r\n    }\r\n    `,\r\n    GET_MY_OWNED_TILESETS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            tilesetsOwned(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n                ){\r\n                name\r\n                _id\r\n                imageId\r\n                ownerInfo{\r\n                    username\r\n                }\r\n                teamInfo{\r\n                    _id\r\n                    username\r\n                    picture\r\n                }\r\n                published\r\n            }\r\n            tilesetsOwnedAmount(searchName: $search)\r\n        }\r\n    }`,\r\n    GET_MY_SHARED_TILESETS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            tilesetsShared(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n                ){\r\n                name\r\n                _id\r\n                imageId\r\n                ownerInfo{\r\n                    username\r\n                }\r\n                teamInfo{\r\n                    _id\r\n                    username\r\n                    picture\r\n                }\r\n                published\r\n            }\r\n            tilesetsSharedAmount(searchName: $search)\r\n        }\r\n    }`,\r\n    GET_SELECTABLE_TILESETS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            tilesetsSelectable(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n                ){\r\n               _id\r\n                name\r\n                owner\r\n                editors\r\n                ownerInfo{\r\n                    username\r\n                    _id\r\n                }\r\n                teamInfo{\r\n                    username\r\n                    _id\r\n                }\r\n                columns\r\n                imageId\r\n                width\r\n                height\r\n                margin\r\n                spacing\r\n                tilecount\r\n                tileHeight\r\n                tileWidth\r\n                published\r\n            }\r\n            tilesetsSelectableAmount(\r\n                searchName: $search\r\n            )\r\n        }\r\n    }`,\r\n    GET_ALL_MAPS: graphql`\r\n    {\r\n        maps{\r\n            _id\r\n            width\r\n            height\r\n            infinite\r\n            nextlayerid\r\n            nextobjectid\r\n            orientation\r\n            renderorder\r\n            tiledversion\r\n            tileHeight\r\n            tileWidth\r\n            type\r\n            version\r\n        }\r\n    }`,\r\n    GET_MAP: graphql`\r\n    query map($id: String!){\r\n        map(id:$id){\r\n            _id\r\n            width\r\n            height\r\n            infinite\r\n            nextlayerid\r\n            nextobjectid\r\n            orientation\r\n            renderorder\r\n            tiledversion\r\n            tileHeight\r\n            tileWidth\r\n            type\r\n            version\r\n        }\r\n    }\r\n    `,\r\n\r\n    GET_ALL_LAYERS: graphql`\r\n    {\r\n        layers{\r\n            _id\r\n            data\r\n            height\r\n            name\r\n            opacity\r\n            type\r\n            visible\r\n            width\r\n            x\r\n            y\r\n        }\r\n    }\r\n    `,\r\n    GET_LAYER: graphql`\r\n    query layer($id: String!){\r\n        layer(id:$id){\r\n            _id\r\n            idNumber\r\n            data\r\n            height\r\n            name\r\n            opacity\r\n            type\r\n            visible\r\n            width\r\n            x\r\n            y\r\n        }\r\n    }\r\n    `,\r\n    GET_PROJECT: graphql`\r\n    query project($id: String!){\r\n        project(id:$id){\r\n            _id\r\n            name\r\n            owner\r\n            editors\r\n            imageId\r\n            mapId\r\n            tilesetId\r\n            tilesetFirstgid\r\n            layerId\r\n            editors\r\n            customPropertyName\r\n            customPropertyValue\r\n            lastUpdate\r\n            ownerInfo{\r\n                username\r\n                _id\r\n            }\r\n            teamInfo{\r\n                username\r\n                _id\r\n            }\r\n            layersInfo{\r\n                _id\r\n                data\r\n                width\r\n                height\r\n                name\r\n                opacity\r\n                type\r\n                visible\r\n                x\r\n                y\r\n            }\r\n            tilesetsInfo{\r\n                _id\r\n                name\r\n                owner\r\n                editors\r\n                ownerInfo{\r\n                    username\r\n                    _id\r\n                }\r\n                teamInfo{\r\n                    username\r\n                    _id\r\n                }\r\n                columns\r\n                imageId\r\n                width\r\n                height\r\n                margin\r\n                spacing\r\n                tilecount\r\n                tileHeight\r\n                tileWidth\r\n                published\r\n            }\r\n            mapInfo{\r\n                _id\r\n                width\r\n                height\r\n                infinite\r\n                nextlayerid\r\n                nextobjectid\r\n                orientation\r\n                renderorder\r\n                tiledversion\r\n                tileHeight\r\n                tileWidth\r\n                type\r\n                version\r\n            }\r\n        }\r\n    }\r\n    `,\r\n\r\n\r\n    GET_LAYER_FROM_PROJECT: graphql`\r\n    query project(\r\n        $id: String!\r\n        $searchId: String!\r\n    ){\r\n        project(\r\n            id:$id\r\n            ){\r\n            getLayer(\r\n                searchId: $searchId\r\n            ){\r\n                _id\r\n                idNumber\r\n                data\r\n                height\r\n                name\r\n                opacity\r\n                type\r\n                visible\r\n                width\r\n                x\r\n                y\r\n            }\r\n        }\r\n    }\r\n    `,\r\n\r\n    GET_PUBLISHED_TILESETS: graphql`\r\n    query user(\r\n        $userId: String!\r\n        $pageSkip: Int!\r\n        $search: String!\r\n        $sortBy: String!\r\n        $sortOrder: Int!\r\n    ){\r\n        user(\r\n            id:$userId\r\n        ){\r\n            publishedTilesets(\r\n                searchName: $search\r\n                skip: $pageSkip\r\n                sortBy: $sortBy\r\n                sortOrder: $sortOrder\r\n            ){\r\n                _id\r\n                name\r\n                owner\r\n                editors\r\n                ownerInfo{\r\n                    username\r\n                    _id\r\n                }\r\n                teamInfo{\r\n                    username\r\n                    _id\r\n                }\r\n                columns\r\n                imageId\r\n                width\r\n                height\r\n                margin\r\n                spacing\r\n                tilecount\r\n                tileHeight\r\n                tileWidth\r\n                published\r\n            }\r\n            tilesetsAmount(searchName: $search)\r\n        }\r\n    }\r\n    `,\r\n\r\n\r\n}\r\n","import Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from 'react'\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\nimport QueryList from '../../graphql/Query'\r\n\r\n\r\nclass DuplicateDialog extends React.Component {\r\n\r\n    state = {\r\n        name: this.props.item.name\r\n    };\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({ name: e.target.value })\r\n    };\r\n\r\n    handleSubmit = (callback) => {\r\n        callback({\r\n            variables: {\r\n                id: this.props.item._id,\r\n                name: this.state.name,\r\n                owner: this.props.user._id\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const { open, item, refetch, handleClose, type } = this.props;\r\n        if (!item) return null;\r\n        const mutation = type === 'tileset' ? MutationList.DUPLICATE_TILESET : MutationList.DUPLICATE_PROJECT;\r\n        const label = type === 'tileset' ? \"Enter Tileset Name\" : \"Enter Project Name\";\r\n        const newRefetch = {\r\n            ...refetch,\r\n            query: type === 'tileset' ? QueryList.GET_MY_OWNED_TILESETS : QueryList.GET_MY_OWNED_PROJECTS\r\n        }\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[newRefetch]} onCompleted={() => {\r\n                setTimeout(() => {\r\n                    this.props.handleClose('duplicate')\r\n\r\n                }, 200);\r\n                setTimeout(() => {\r\n                    this.props.handleSelectSide(type === 'tileset' ? 'tilesetsOwned' : 'create')\r\n                }, 200);\r\n\r\n            }\r\n            }>\r\n                {(duplicateProject, res) => (\r\n                    <Dialog\r\n                        header=\"Duplicate Project\"\r\n                        open={open}\r\n                        actions={[\r\n                            <Button key='1' onClick={this.handleSubmit.bind(this, duplicateProject)}>Enter</Button>,\r\n                            <Button key='2' onClick={handleClose.bind(this, 'duplicate')}>Cancel</Button>,\r\n                        ]}\r\n                        content={\r\n                            <>\r\n                                <p>Everything will be copied</p>\r\n                                <TextField\r\n                                    className=\"form-control\"\r\n                                    label={label}\r\n                                    type=\"name\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    defaultValue={item.name}\r\n                                    onChange={this.handleOnChange}\r\n                                />\r\n                            </>\r\n                        } />\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DuplicateDialog","import Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport React from 'react'\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\n\r\nclass PublishDialog extends React.Component {\r\n    state = {\r\n        checked: this.props.item.published,\r\n    };\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({ checked: e.target.checked })\r\n    };\r\n\r\n    handleSubmit = (callback) => {\r\n        callback({\r\n            variables: {\r\n                id: this.props.item._id,\r\n                published: this.state.checked\r\n            }\r\n        })\r\n        this.props.handleClose('publish')\r\n    };\r\n\r\n\r\n    render() {\r\n        const { open, item, user, refetch,  handleClose } = this.props;\r\n        const { checked } = this.state;\r\n        if (!item) return null;\r\n        const disabled = item.ownerInfo.username !== user.username;\r\n        const mutation = MutationList.PUBLISH_TILESET;\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[refetch]}>\r\n                {(updateItem, res) => (\r\n                    <Dialog\r\n                        header={<>Publish <span className={\"header-item-name\"} >{item.name}</span> Tileset</>}\r\n                        open={open}\r\n                        maxWidth={'xl'}\r\n                        actions={[\r\n                            <Button key='1' onClick={this.handleSubmit.bind(this, updateItem)} disabled={disabled}>Enter</Button>,\r\n                            <Button key='2' onClick={handleClose.bind(this, 'publish')}>Cancel</Button>,\r\n                        ]}\r\n                        content={\r\n                            <>\r\n                                <label className=\"switch-btn-wrapper\">\r\n                                    {checked ?\r\n                                        <label htmlFor=\"switch-btn\" className={\"switch-btn-label publish\"}>Yes</label>\r\n                                        :\r\n                                        <label htmlFor=\"switch-btn\" className={\"switch-btn-label not-to-publish\"}>No</label>\r\n                                    }\r\n                                    <input type=\"checkbox\" className=\"switch-btn\" id=\"switch-btn\" defaultChecked={item.published} onChange={this.handleOnChange}/>\r\n                                    <span className=\"switch-btn-slider round\"/>\r\n                                </label>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PublishDialog;","import Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport React from 'react'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Query } from 'react-apollo'\r\n\r\nclass DownloadDialog extends React.Component {\r\n    state = {\r\n        checked: true,\r\n    };\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({ checked: e.target.checked })\r\n    };\r\n\r\n    handleDownload = (e) => {\r\n        const dataJson = {}\r\n        dataJson.firstgid = 1\r\n        dataJson.image = \"./tileset@DELIT.jpeg\"\r\n        dataJson.imageheight = e.height\r\n        dataJson.imagewidth = e.width\r\n        dataJson.margin = e.margin\r\n        dataJson.name = e.name\r\n        dataJson.properties = {}\r\n        dataJson.spacing = e.spacing\r\n        dataJson.tileheight = e.tileHeight\r\n        dataJson.tilewidth = e.tileWidth\r\n        dataJson.tilecount = e.tilecount\r\n\r\n\r\n        require(\"downloadjs\")(JSON.stringify(dataJson).toLowerCase(), `${dataJson.name}.json`, \"json\");\r\n\r\n    }\r\n\r\n    handleSubmit = (tileset) => {\r\n        this.handleDownload(tileset)\r\n        this.props.handleClose('download')\r\n    };\r\n\r\n\r\n    render() {\r\n        const { open, item, handleClose } = this.props;\r\n        if (!item) return null;\r\n        const downloadKey = item._id\r\n\r\n        return (\r\n            <Query query={QueryList.GET_TILESET} variables={{ id: downloadKey }} fetchPolicy={'network-only'}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return 'loading'\r\n                    if (error) return 'error'\r\n                    if (!data) return 'error'\r\n                    const { tileset } = data\r\n                    return (\r\n                        <Dialog\r\n                            header={<>Download</>}\r\n                            open={open}\r\n                            maxWidth={'xl'}\r\n                            actions={[\r\n                                <Button key='1' onClick={this.handleSubmit.bind(this, tileset)} >Download Now!</Button>,\r\n                                <Button key='2' onClick={handleClose.bind(this, 'download')}>Nah!</Button>,\r\n                            ]}\r\n                            content={\r\n                                <p>Do you want to download <span className={\"header-item-name\"} >{item.name}</span> e.</p>\r\n                            }\r\n                        />\r\n                    )\r\n                }}\r\n\r\n            </Query>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DownloadDialog;","import React from 'react'\r\nimport RenameDialog from './RenameDialog'\r\nimport TeamDialog from './TeamDialog'\r\nimport DeleteDialog from './DeleteDialog'\r\nimport InviteDialog from './InviteDialog';\r\nimport DuplicateDialog from './DuplicateDialog';\r\nimport PublishDialog from \"./PublishDialog\";\r\nimport DownloadDialog from \"./DownloadDialog\";\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n    render() {\r\n        const { team, invite, rename, remove, duplicate, publish, download } = this.props;\r\n        return (\r\n            <>\r\n                <TeamDialog {...this.props} open={team} />\r\n\r\n                <InviteDialog {...this.props} open={invite} />\r\n\r\n                <RenameDialog\r\n                    {...this.props}\r\n                    open={rename}\r\n                />\r\n\r\n                <DuplicateDialog\r\n                    {...this.props}\r\n                    open={duplicate}\r\n                />\r\n\r\n                <DeleteDialog\r\n                    {...this.props}\r\n                    open={remove}\r\n                />\r\n\r\n                <PublishDialog\r\n                    {...this.props}\r\n                    open={publish}\r\n                />\r\n\r\n                <DownloadDialog\r\n                    {...this.props}\r\n                    open={download}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Card from '../tools/Card'\r\n\r\nimport '../tools/tools.css'\r\nimport Dialogs from './Dialogs'\r\n\r\n\r\nclass ItemList extends React.Component {\r\n\r\n    state = {\r\n        rename: false,\r\n        delete: false,\r\n        team: false,\r\n        invite: false,\r\n        duplicate: false,\r\n        remove: false,\r\n        publish: false,\r\n        item: null,\r\n        refetch: null,\r\n        download: false,\r\n\r\n    };\r\n\r\n    handleSetItem = (item, refetch) => {\r\n        this.setState({ item, refetch })\r\n    }\r\n\r\n    handleDialogsOpen = (type) => {\r\n        this.setState({ [type]: true });\r\n    };\r\n\r\n    handleDialogsClose = (type) => {\r\n        this.setState({ [type]: false, item: null, refetch: null })\r\n    };\r\n\r\n    handleGoEdit = (item) => {\r\n        if (!item || !this.props.type) return;\r\n        const { _id } = item;\r\n        const type = this.props.type === 'project' ? 'project' : item.published ? 'tilesetviewer' : 'tileseteditor'\r\n        this.props.history.push(`/${type}/${_id}`)\r\n    };\r\n\r\n    handleDelete = (callback, _id) => {\r\n        callback({\r\n            variables: {\r\n                id: _id\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { items, refetch, user, type, selected } = this.props;\r\n        const numItem = items.length;\r\n        const style = {\r\n            height: numItem > 3 ? 600 : 300\r\n        };\r\n        const showPublishBt = selected === 'tilesetsOwned';\r\n        const downloadBtn = selected === 'tilesets';\r\n\r\n        return (\r\n            <div className=\"dashboard-itemlist\">\r\n                <div className=\"dashboard-itemlist-wrapper\" style={style}>\r\n                    {\r\n                        items && items.map((item, index) => {\r\n                            const col = index % 3;\r\n                            const row = Math.floor(index / 3);\r\n                            const left1s = 'calc(25% - 135px)';\r\n                            const left2s = 'calc(50% - 90px)';\r\n                            const left3s = 'calc(75% - 45px)';\r\n                            const top1s1 = 50;\r\n                            const top1s2 = 200 / 3;\r\n                            const top2s2 = top1s2 * 2 + 200;\r\n                            const cardStyle = {\r\n                                top: numItem > 3 ? row === 0 ? top1s2 : top2s2 : top1s1,\r\n                                left: col === 0 ? left1s : col === 1 ? left2s : left3s,\r\n                            };\r\n                            const { _id } = item;\r\n                            return (\r\n\r\n                                <Card\r\n                                    className='item-card'\r\n                                    item={item}\r\n                                    style={cardStyle}\r\n                                    handleOpen={this.handleDialogsOpen}\r\n                                    onClick={this.handleGoEdit}\r\n                                    key={_id}\r\n                                    handleSetItem={this.handleSetItem}\r\n                                    refetch={refetch}\r\n                                    showPublishBt={showPublishBt}\r\n                                    downloadBtn={downloadBtn}\r\n                                />\r\n\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n                {this.state.item ?\r\n                    <Dialogs\r\n                        {...this.state}\r\n                        handleOpen={this.handleDialogsOpen}\r\n                        handleClose={this.handleDialogsClose}\r\n                        handleSetItem={this.handleSetItem}\r\n                        handleSelectSide={this.props.handleSelectSide}\r\n                        selected={selected}\r\n                        user={user}\r\n                        type={type}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { user } = state.auth;\r\n    return {\r\n        user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList);","import React from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass BetterPagination extends React.Component {\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        const { width } = this.refs.pagination.getBoundingClientRect()\r\n        this.refs.pagination.style.marginLeft = `calc(50% - ${width / 2}px)`\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { width } = this.refs.pagination.getBoundingClientRect()\r\n        this.refs.pagination.style.marginLeft = `calc(50% - ${width / 2}px)`\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.defaultPage = this.props.defaultPage\r\n    }\r\n\r\n    render() {\r\n        const { className, color, size, handlePagination, count } = this.props\r\n        return (\r\n            <div className={className} ref='pagination'>\r\n                <Pagination\r\n                    count={count}\r\n                    color={color}\r\n                    size={size}\r\n                    siblingCount={0}\r\n                    onChange={handlePagination}\r\n                    defaultPage={this.defaultPage}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BetterPagination;","import React from 'react';\r\n\r\nclass Sidebar extends React.Component {\r\n\tgetClassName = (name) => {\r\n\t\treturn this.props.selected === name ? \"dashboard-sidebar-selected\" : \"\";\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { showSidebar, handleSelect } = this.props;\r\n\t\tconst width = showSidebar ? 17 : 0;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='dashboard-sidebar' style={{ width: width + \"%\", whiteSpace: \"nowrap\" }}>\r\n\t\t\t\t<div className='sidebar-wrapper'>\r\n\t\t\t\t\t<div className={'sidebar-item sidebar-add'} onClick={this.props.handleProjectDialogOpen}><div className='item-text'>Create New Project</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item ' + this.getClassName(\"all\")} onClick={handleSelect.bind(this, 'all')}><div className='item-text'>All Projects</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item ' + this.getClassName(\"create\")} onClick={handleSelect.bind(this, 'create')}><div className='item-text'>Project Created By Me</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item ' + this.getClassName(\"share\")} onClick={handleSelect.bind(this, 'share')}><div className='item-text'>Project Shared With Me</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item sidebar-add'} onClick={this.props.handleTilesetDialogOpen}><div className='item-text'>Create New Tileset</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item ' + this.getClassName(\"tilesets\")} onClick={handleSelect.bind(this, 'tilesets')}><div className='item-text'>Published Tilesets</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item ' + this.getClassName(\"tilesetsOwned\")} onClick={handleSelect.bind(this, 'tilesetsOwned')}><div className='item-text'>Tilesets Created By Me</div></div>\r\n\t\t\t\t\t<div className={'sidebar-item ' + this.getClassName(\"tilesetsShared\")} onClick={handleSelect.bind(this, 'tilesetsShared')}><div className='item-text'>Tilesets Shared With Me</div></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from '../tools/Dialog'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\nimport QueryList from '../../graphql/Query'\r\n\r\nclass AddDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemName: \"\",\r\n            tileWidth: 0,\r\n            tileHeight: 0,\r\n            width: 0,\r\n            height: 0,\r\n            disableBt: true,\r\n        }\r\n    }\r\n    handleOnChange = (e) => {\r\n        let { name, value } = e.target\r\n        value = (name === 'itemName' ? value : parseInt(value) ? parseInt(value) : 0)\r\n        // eslint-disable-next-line\r\n        this.state[name] = value\r\n        const { itemName, tileWidth, tileHeight, width, height } = this.state\r\n        let disableBt\r\n        if (itemName !== \"\" && tileWidth && tileHeight && width && height && tileWidth !== 0 && tileHeight !== 0 && width !== 0 && height !== 0)\r\n            disableBt = false\r\n        else\r\n            disableBt = true\r\n        this.setState({ [name]: value, disableBt })\r\n    };\r\n\r\n    handleAddProject = (callback) => {\r\n        const { userId } = this.props\r\n        const { itemName, width, height, tileWidth, tileHeight } = this.state\r\n        callback({\r\n            variables: {\r\n                name: itemName,\r\n                owner: userId,\r\n                imageId: '5ec6f35e3e2ef01724dd7c3b',\r\n                width: width,\r\n                height: height,\r\n                tileWidth: tileWidth,\r\n                tileHeight: tileHeight\r\n            }\r\n        })\r\n        this.props.handleClose()\r\n    }\r\n\r\n    render() {\r\n        const { open, handleClose, refetch } = this.props;\r\n        const { itemName, width, height, tileWidth, tileHeight, disableBt } = this.state\r\n        const mutation = MutationList.CREATE_PROJECT_PACK\r\n        const newRefetch = {\r\n            ...refetch,\r\n            query: QueryList.GET_MY_OWNED_PROJECTS\r\n        }\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[newRefetch]} awaitRefetchQueries={false} onCompleted={() => {\r\n                setTimeout(() => {\r\n                    this.props.handleSelectSide('create')\r\n                }, 500);\r\n            }}>\r\n                {(addItem, res) => {\r\n                    return (\r\n                        <Dialog\r\n                            header='Create New Dialog'\r\n                            open={open}\r\n                            fullWidth={true}\r\n                            maxWidth=\"xs\"\r\n                            actions={[\r\n                                <Button variant=\"primary\" size=\"sm\" onClick={this.handleAddProject.bind(this, addItem)} key='1' disabled={disableBt}>Add</Button>,\r\n                                <Button variant=\"primary\" size=\"sm\" key='2' onClick={handleClose.bind(this, 'cancel')}>Cancel</Button>\r\n                            ]}\r\n                            content={\r\n                                <>\r\n                                    <TextField\r\n                                        className=\"add-project-dialog-input\"\r\n                                        label={`Enter New Project Name`}\r\n                                        name=\"itemName\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={itemName}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <div className='br'></div>\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label=\"Enter Tile Width\"\r\n                                        name=\"tileWidth\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={tileWidth.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label=\"Enter Tile Height\"\r\n                                        name=\"tileHeight\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={tileHeight.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <div className='br'></div>\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label={`Enter Map Width (tiles)`}\r\n                                        name=\"width\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={width.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                        helperText={`${width * tileWidth} x ${width * tileWidth} px`}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label={`Enter Map Height (tiles)`}\r\n                                        name=\"height\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={height.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                        helperText={`${height * tileHeight} x ${height * tileHeight} px`}\r\n                                    />\r\n                                    {\r\n                                        res.loading ? 'loading' : res.error ? res.error.message : null\r\n                                    }\r\n                                </>\r\n                            } />\r\n                    )\r\n                }}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddDialog);","import React from 'react'\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from '../tools/Dialog'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\nimport QueryList from '../../graphql/Query'\r\n\r\nclass AddDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemName: \"\",\r\n            tileWidth: 0,\r\n            tileHeight: 0,\r\n            width: 0,\r\n            height: 0,\r\n            disableBt: true,\r\n        }\r\n    }\r\n    handleOnChange = (e) => {\r\n        let { name, value } = e.target\r\n        value = (name === 'itemName' ? value : parseInt(value) ? parseInt(value) : 0)\r\n        // eslint-disable-next-line\r\n        this.state[name] = value\r\n        const { itemName, tileWidth, tileHeight, width, height } = this.state\r\n        let disableBt\r\n        if (itemName !== \"\" && tileWidth && tileHeight && width && height && tileWidth !== 0 && tileHeight !== 0 && width !== 0 && height !== 0)\r\n            disableBt = false\r\n        else\r\n            disableBt = true\r\n        this.setState({ [name]: value, disableBt })\r\n    };\r\n\r\n    handleAddProject = (callback) => {\r\n        const { userId, } = this.props\r\n        const { itemName, width, height, tileWidth, tileHeight } = this.state\r\n\r\n        callback({\r\n            variables: {\r\n                name: itemName,\r\n                owner: userId,\r\n                width: parseInt(width),\r\n                height: parseInt(height),\r\n                tileWidth: parseInt(tileWidth),\r\n                tileHeight: parseInt(tileHeight),\r\n                imageId: '5ec6f35e3e2ef01724dd7c3b'\r\n            }\r\n        })\r\n        this.props.handleClose()\r\n    }\r\n\r\n    render() {\r\n        const { open, handleClose, refetch } = this.props;\r\n        const { itemName, width, height, tileWidth, tileHeight, disableBt } = this.state\r\n        const mutation = MutationList.ADD_TILESET\r\n        const newRefetch = {\r\n            ...refetch,\r\n            query: QueryList.GET_MY_OWNED_TILESETS\r\n        }\r\n        return (\r\n            <Mutation mutation={mutation} refetchQueries={[newRefetch]} onCompleted={() => { this.props.handleSelectSide('tilesetsOwned') }}>\r\n                {(addItem, res) => {\r\n                    return (\r\n                        <Dialog\r\n                            header='Create New Dialog'\r\n                            open={open}\r\n                            fullWidth={true}\r\n                            maxWidth=\"xs\"\r\n                            actions={[\r\n                                <Button variant=\"primary\" size=\"sm\" onClick={this.handleAddProject.bind(this, addItem)} key='1' disabled={disableBt}>Add</Button>,\r\n                                <Button variant=\"primary\" size=\"sm\" key='2' onClick={handleClose.bind(this, 'cancel')}>Cancel</Button>\r\n                            ]}\r\n                            content={\r\n                                <>\r\n                                    <TextField\r\n                                        className=\"add-project-dialog-input\"\r\n                                        label={`Enter New Tileset Name`}\r\n                                        name=\"itemName\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={itemName}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <div className='br'></div>\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label=\"Enter Tile Width\"\r\n                                        name=\"tileWidth\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={tileWidth.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label=\"Enter Tile Height\"\r\n                                        name=\"tileHeight\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={tileHeight.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    <div className='br'></div>\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label={`Enter Image Width`}\r\n                                        name=\"width\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={width.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n\r\n                                    <TextField\r\n                                        className=\"project-property-input\"\r\n                                        label={`Enter Image Height`}\r\n                                        name=\"height\"\r\n                                        type=\"number\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        value={height.toString()}\r\n                                        onChange={this.handleOnChange}\r\n                                    />\r\n                                    {\r\n                                        res.loading ? 'loading' : res.error ? res.error.message : null\r\n                                    }\r\n                                </>\r\n                            } />\r\n                    )\r\n                }}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AddDialog);","import React from 'react';\r\nimport TopNavbar from '../tools/TopNavbar'\r\nimport Searchbar from '../tools/Searchbar'\r\nimport ItemList from './ItemList'\r\nimport './dashboard.css'\r\nimport Pagination from '../tools/Pagination'\r\nimport { connect } from 'react-redux';\r\nimport Sidebar from \"./Sidebar\";\r\nimport AddProjectDialog from \"./AddProjectDialog\";\r\nimport AddTilesetDialog from \"./AddTilesetDialog\";\r\nimport QueryList from '../../graphql/Query'\r\nimport { Query } from 'react-apollo'\r\nimport axios from 'axios'\r\nimport * as handler from '../../store/database/HomeScreenHandler';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    state = {\r\n        showSidebar: true,\r\n        projectDialogOpen: false,\r\n        tilesetDialogOpen: false,\r\n        selected: 'all',\r\n        page: 1,\r\n        search: '',\r\n        sortBy: 'lastUpdate',\r\n        lastUpdate: -1,\r\n        name: -1,\r\n    };\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({ search: e.target.value });\r\n    };\r\n\r\n    handleSortBy = (e, type) => {\r\n        this.setState({ sortBy: type })\r\n    }\r\n\r\n    handleSortOrder = (e, type) => {\r\n        const order = this.state[type]\r\n        this.setState({ [type]: order === 1 ? -1 : 1 })\r\n    }\r\n\r\n    handleSelectSide = (type) => {\r\n        this.setState({ selected: type })\r\n    };\r\n\r\n    handleProjectDialogOpen = () => {\r\n        this.setState({ projectDialogOpen: true })\r\n    }\r\n\r\n    handleProjectDialogClose = () => {\r\n        this.setState({ projectDialogOpen: false })\r\n    }\r\n\r\n    handleTilesetDialogOpen = () => {\r\n        this.setState({ tilesetDialogOpen: true })\r\n    }\r\n\r\n    handleTilesetDialogClose = () => {\r\n        this.setState({ tilesetDialogOpen: false })\r\n    }\r\n\r\n    handleSidebarOpen = () => {\r\n        let { showSidebar } = this.state;\r\n        showSidebar = !showSidebar;\r\n        this.setState({ showSidebar: showSidebar });\r\n    };\r\n\r\n    getQuery = () => {\r\n        const { selected } = this.state;\r\n        if (selected === 'all')\r\n            return QueryList.GET_MY_RELATED_PROJECTS;\r\n        if (selected === 'create')\r\n            return QueryList.GET_MY_OWNED_PROJECTS;\r\n        if (selected === 'share')\r\n            return QueryList.GET_MY_SHARED_PROJECTS;\r\n        if (selected === 'tilesets')\r\n            return QueryList.GET_TILESETS;\r\n        if (selected === 'tilesetsOwned')\r\n            return QueryList.GET_MY_OWNED_TILESETS;\r\n        if (selected === 'tilesetsShared')\r\n            return QueryList.GET_MY_SHARED_TILESETS;\r\n        // if (selected === 'publishedTilesets')\r\n        //     return QueryList.GET_PUBLISHED_TILESETS;\r\n        return QueryList.EMPTY_QUERY;\r\n    };\r\n\r\n    getProjects = (data) => {\r\n        const { selected } = this.state;\r\n        if (selected === 'all') {\r\n            return {\r\n                items: data.user.projectsRelated,\r\n                amount: data.user.projectsRelatedAmount,\r\n                type: \"project\",\r\n            };\r\n        }\r\n        if (selected === 'create') {\r\n            return {\r\n                items: data.user.projectsOwned,\r\n                amount: data.user.projectsOwnedAmount,\r\n                type: \"project\",\r\n            };\r\n        }\r\n        if (selected === 'share') {\r\n            return {\r\n                items: data.user.projectsShared,\r\n                amount: data.user.projectsSharedAmount,\r\n                type: \"project\",\r\n            };\r\n        }\r\n        if (selected === 'tilesets') {\r\n            return {\r\n                items: data.user.tilesets,\r\n                amount: data.user.tilesetsAmount,\r\n                type: \"tileset\",\r\n            };\r\n        }\r\n        if (selected === 'tilesetsOwned') {\r\n            return {\r\n                items: data.user.tilesetsOwned,\r\n                amount: data.user.tilesetsOwnedAmount,\r\n                type: \"tileset\",\r\n            };\r\n        }\r\n        if (selected === 'tilesetsShared') {\r\n            return {\r\n                items: data.user.tilesetsShared,\r\n                amount: data.user.tilesetsSharedAmount,\r\n                type: \"tileset\",\r\n            };\r\n        }\r\n        // if (selected === 'publishedTilesets') {\r\n        //     return {\r\n        //         items: data.user.publishedTilesets,\r\n        //         amount: data.user.publishedTilesetsAmount,\r\n        //         type: \"tileset\",\r\n        //     };\r\n        // }\r\n\r\n\r\n        return null\r\n    };\r\n\r\n\r\n    handlePagination = (e, value) => {\r\n        this.setState({ page: value })\r\n    };\r\n\r\n    getSelected = (type) => {\r\n        const { sortBy } = this.state\r\n        return sortBy === type ? 'dashboard-sort-btn-selected' : ''\r\n    }\r\n\r\n    getSortOrder = (type) => {\r\n        return this.state[type] === -1 ? 'fa-arrow-down' : 'fa-arrow-up'\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/auth/current').then(res => {\r\n            if (!res.data)\r\n                this.props.history.push('/');\r\n            else {\r\n                this.setState({ user: res.data });\r\n                this.props.handleLoginSuccess(res.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { showSidebar, selected, user, page, search, projectDialogOpen, tilesetDialogOpen, sortBy } = this.state;\r\n        const { history } = this.props;\r\n        const left = showSidebar ? 19 : 0;\r\n        const width = showSidebar ? 81 : 100;\r\n        if (!user) return 'loading';\r\n        const query = this.getQuery();\r\n        const displayStyle = {\r\n            marginLeft: left + \"%\",\r\n            width: width + \"%\",\r\n            height: 'calc(100% - 88px)'\r\n        };\r\n\r\n        const pageSkip = (page - 1) * 6;\r\n        const sortOrder = this.state[sortBy]\r\n        return (\r\n\r\n            <div>\r\n                <TopNavbar handleSidebarOpen={this.handleSidebarOpen} site='dashboard' history={history} />\r\n                <Sidebar\r\n                    showSidebar={showSidebar}\r\n                    handleProjectDialogOpen={this.handleProjectDialogOpen}\r\n                    handleTilesetDialogOpen={this.handleTilesetDialogOpen}\r\n                    handleSelect={this.handleSelectSide}\r\n                    selected={selected}\r\n                />\r\n\r\n                <div className=\"dashboard-display\" style={displayStyle}>\r\n                    <Searchbar value={search} onChange={this.handleSearchChange} />\r\n                    <div className=\"dashboard-sort-btn-group\">\r\n                        <button className={\"dashboard-sort-btn \" + this.getSelected('name')} onClick={e => this.handleSortBy(e, 'name')}>Name </button>\r\n                        <i className={\"fa dashboard-sort-icon \" + this.getSortOrder('name')} onClick={e => this.handleSortOrder(e, 'name')} />\r\n                        <button className={\"dashboard-sort-btn \" + this.getSelected('lastUpdate')} onClick={e => this.handleSortBy(e, 'lastUpdate')}>Last Modified </button>\r\n                        <i className={\"fa dashboard-sort-icon \" + this.getSortOrder('lastUpdate')} onClick={e => this.handleSortOrder(e, 'lastUpdate')} />\r\n                    </div>\r\n                    <Query query={query} variables={{ userId: user._id, pageSkip: pageSkip, search: search, sortBy: sortBy, sortOrder: sortOrder }} fetchPolicy={'network-only'}>\r\n                        {({ loading, error, data }) => {\r\n                            if (loading)\r\n                                return <CircularProgress className=\"dashboard-loading\" />;\r\n                            if (error) return 'error';\r\n                            if (query === QueryList.EMPTY_QUERY)\r\n                                return 'Wrong Sidebar Selection or needs to be developed';\r\n                            if (!data) return 'error';\r\n\r\n                            const { items, amount, type } = this.getProjects(data);\r\n                            const pageAmount = amount % 6 === 0 ? amount / 6 : Math.floor(amount / 6) + 1;\r\n                            const refetch = {\r\n                                query: query,\r\n                                variables: { userId: user._id, pageSkip: pageSkip, search: search, sortBy: sortBy, sortOrder: sortOrder }\r\n                            };\r\n                            return (\r\n                                <>\r\n                                    <ItemList\r\n                                        history={history}\r\n                                        items={items}\r\n                                        refetch={refetch}\r\n                                        type={type}\r\n                                        selected={selected}\r\n                                        handleSelectSide={this.handleSelectSide}\r\n                                    />\r\n                                    <Pagination\r\n                                        className=\"dashboard-pagination center\"\r\n                                        size=\"large\"\r\n                                        color=\"secondary\"\r\n                                        count={pageAmount}\r\n                                        handlePagination={this.handlePagination}\r\n                                        defaultPage={page}\r\n                                    />\r\n                                    <AddProjectDialog\r\n                                        open={projectDialogOpen}\r\n                                        handleClose={this.handleProjectDialogClose}\r\n                                        refetch={refetch}\r\n                                        userId={user._id}\r\n                                        handleSelectSide={this.handleSelectSide}\r\n                                    />\r\n                                    <AddTilesetDialog\r\n                                        open={tilesetDialogOpen}\r\n                                        handleClose={this.handleTilesetDialogClose}\r\n                                        refetch={refetch}\r\n                                        userId={user._id}\r\n                                        handleSelectSide={this.handleSelectSide}\r\n                                    />\r\n                                </>\r\n                            )\r\n                        }}\r\n                    </Query>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { history } = ownProps;\r\n    const { user } = state.auth;\r\n    return { history, user };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleLoginSuccess: (user) => dispatch(handler.loginSuccessHandler(user)),\r\n    handleLoginError: (errmsg) => dispatch(handler.loginErrorHandler(errmsg)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n\r\n","import * as actionCreators from '../actions/actionCreators.js'\r\n\r\nexport const tilsetImgInitHandler = (name, value) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_IMG_INIT, name: name, value: value });\r\n};\r\n\r\nexport const unselectTilesetHandler = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_UNSELECT });\r\n};\r\n\r\nexport const selectTilesetHandler = (selected) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_SELECT, value: selected });\r\n};\r\n\r\nexport const moveWindowHandler = (name, value) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.WINDOW_MOVE, name: name, value: value });\r\n};\r\n\r\nexport const selectPropertyHandler = (window, index) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.PROPERTY_SELECT, window: window, index: index });\r\n};\r\n\r\nexport const unselectPropertyHandler = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.PROPERTY_UNSELECT });\r\n};\r\n\r\nexport const changePropertyHandler = (index, type, value) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.PROPERTY_CHANGE, index: index, name: type, value: value });\r\n};\r\n\r\nexport const deletePropertyHandler = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.PROPERTY_DELETE });\r\n};\r\n\r\nexport const scrollXHandler = (window, data) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.SCROLL_X, window: window, data: data });\r\n};\r\n\r\nexport const scrollYHandler = (window, data) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.SCROLL_Y, window: window, data: data });\r\n};\r\n\r\nexport const handleSelectTool = (tool) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.MAP_SELECT_TOOL, tool: tool });\r\n};\r\n\r\nexport const layerSelectHandler = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_SELECT, id });\r\n};\r\n\r\nexport const layerUnselectHandler = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_UNSELECT });\r\n};\r\n\r\nexport const layerRenameHandler = (name, id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_RENAME, name, id });\r\n};\r\n\r\nexport const layerDeleteHandler = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_DELETE, id });\r\n};\r\n\r\nexport const layerMoveUpHandler = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_MOVE_UP, id });\r\n};\r\n\r\nexport const layerMoveDownHandler = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_MOVE_DOWN, id });\r\n};\r\n\r\nexport const toolbarSelectHandler = (name) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TOOLBAR_SELECT, name });\r\n};\r\n\r\nexport const toolbarUnselectHandler = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TOOLBAR_UNSELECT });\r\n};\r\n\r\nexport const formatProjectPack = (project) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.FORMAT_PROJECT, project });\r\n};\r\n\r\nexport const propertySelectDisplay = (window, index) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.SELECT_PROPERTY_WINDOW, window, index });\r\n};\r\n\r\nexport const propertySelectTile = (window, id, index) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.SELECT_PROPERTY_TILE, window, id, index });\r\n};\r\n\r\nexport const handleTilesetLoaded = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_LOADED });\r\n};\r\n\r\nexport const tilesetIdApplier = (id, index) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_ID_APPLIER, id, index });\r\n}\r\n\r\nexport const layerVisibilityClick = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_VISIBILITY_TOGGLE, id });\r\n\r\n};\r\n\r\nexport const layerLockClick = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_LOCK_TOGGLE, id });\r\n};\r\n\r\nexport const passOpacityHandler = (value) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_PASS_OPACITY, value });\r\n};\r\n\r\nexport const layerAddHandler = (layer) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.ADD_LAYER, layer });\r\n};\r\n\r\nexport const tilesetSelectGrids = (selectedGrids) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.SELECT_TILESET_GRIDS, selectedGrids });\r\n};\r\n\r\nexport const mapStampClick = (data) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.MAP_STAMP_CLICK, data });\r\n};\r\n\r\nexport const mapFillClick = (data) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.MAP_FILL_CLICK, data });\r\n};\r\n\r\nexport const restoreLayers = (layerList) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.LAYER_RESTORE, layerList });\r\n};\r\n\r\nexport const updateTilesetsHandler = (tilesets) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESETS_UPDATE, tilesets });\r\n};\r\n\r\nexport const handleAddProperty = () => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.ADD_PROPERTY });\r\n};\r\n\r\nexport const restoreCustomProperty = (custom) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.RESTORE_CUSTOM_PROPERTY, custom });\r\n};\r\n\r\nexport const passSelectedTileset = (selectedItem) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.PASS_SELECTED_TILESET, selectedItem});\r\n};\r\n\r\nexport const deleteTilesetHandler = (id) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_DELETE, id});\r\n};\r\n\r\nexport const restoreTileset = (tilesets) => (dispatch, getState) => {\r\n    dispatch({ type: actionCreators.TILESET_RESTORE, tilesets});\r\n};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as handler from \"../../store/database/WorkScreenHandler\";\r\n\r\nclass Collapsible extends React.Component {\r\n\r\n    state = {\r\n        open: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { data } = this.props;\r\n        let open = []\r\n        for (let i = 0; i < data.length; i++)\r\n            open.push(data[i].open)\r\n        this.setState({ open })\r\n    }\r\n\r\n    handleClick = (index, item, type) => {\r\n        let { open } = this.state;\r\n        open = open.map((e, i) => {\r\n            if (i === index) return e;\r\n            else return false;\r\n        });\r\n        open[index] = !open[index];\r\n        this.setState({ open: open }, () => {\r\n            if (type === \"tileset\") {\r\n                this.props.passSelectedTileset(item)\r\n            }else {\r\n                this.props.passSelectedTileset(null)\r\n            }\r\n        });\r\n    }\r\n\r\n    handleAddProperty = () => {\r\n        let open = this.state.open.map((e, i) => {\r\n            if (i === 1) return true\r\n            else return false\r\n        })\r\n        this.setState({ open })\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        if (this.props.childRef)\r\n            this.props.childRef(this)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, maxHeight, resizing } = this.props;\r\n        const { open } = this.state;\r\n\r\n        return (\r\n            <div className=\"collapsible-wrapper\">\r\n                {\r\n                    data && data.map((d, index) => {\r\n                        const style = {\r\n                            maxHeight: open[index] ? maxHeight : '0px',\r\n                            transition: resizing ? 'none' : !open[index] ? 'ease-in-out 0.3s' : 'ease-in-out 0.4s',\r\n                        }\r\n                        return (\r\n                            <div key={index} tabIndex=\"0\" className=\"collapsible-wrapper\" >\r\n                                <div\r\n                                    className=\"collapsible-title\"\r\n                                    onClick={() => this.handleClick(index, d.item, d.type)}\r\n                                    onMouseDown={e => e.stopPropagation()}\r\n\r\n                                >\r\n                                    <i className={open[index] ? 'collapsible-title-icon fas fa-chevron-right' : 'collapsible-title-icon fas fa-chevron-down'}/>\r\n                                    {d.title}\r\n                                </div>\r\n                                <div className={\"collapsible-content \"} style={style}>\r\n                                    {d.content}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{}\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    passSelectedTileset: (selectedItem) => dispatch(handler.passSelectedTileset(selectedItem))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Collapsible)\r\n\r\n","export default class PropertyTransaction {\r\n    constructor(index, name, value, custom, doCallback, undoCallback) {\r\n        this.index = index\r\n        this.name = name\r\n        this.value = value\r\n        this.custom = [...custom]\r\n        this.doCallback = doCallback\r\n        this.undoCallback = undoCallback\r\n    }\r\n\r\n    doTransaction = () => {\r\n        if (this.index !== undefined) {\r\n            this.doCallback(this.index, this.name, this.value)\r\n        }\r\n        else this.doCallback()\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        if (this.custom !== undefined) this.undoCallback(this.custom)\r\n        else this.undoCallback()\r\n    }\r\n}","import React from 'react';\r\nimport { Table } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport Pagination from '../../tools/Pagination'\r\nimport '../workscreen.css'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport PropertyTransaction from '../../controller/PropertyTransaction'\r\n\r\n\r\nclass PropertyList extends React.Component {\r\n\r\n\r\n    state = {\r\n\r\n    };\r\n\r\n\r\n    handleChange = (index, name, e) => {\r\n        if (this.props.data)\r\n            this.props.transactions.addTransaction(new PropertyTransaction(index, name, e.target.value, this.props.data, this.props.handleChange, this.props.restoreCustomProperty))\r\n    };\r\n\r\n    handleSelect = (index, e) => {\r\n        const { window } = this.props;\r\n        this.setState({ nothing: 'nothing' }, () => {\r\n            this.props.handleSelect(window, index);\r\n        })\r\n    }\r\n\r\n    getClassName = (index) => {\r\n        const { selected, window } = this.props;\r\n        if (!selected)\r\n            return 'table-row'\r\n        else if (selected.window !== window)\r\n            return 'table-row'\r\n        else if (selected.index !== index)\r\n            return 'table-row'\r\n        else\r\n            return 'table-row table-row-selected'\r\n    }\r\n\r\n    getRows = () => {\r\n        const { data, type } = this.props\r\n        if (type === 'custom') return data\r\n        const names = Object.keys(data)\r\n        let toReturn = []\r\n        for (let i = names.length - 1; i >= 0; i--) {\r\n            if (names[i] === '_id')\r\n                continue\r\n            toReturn.push({\r\n                name: names[i] + '',\r\n                value: data[names[i]] + ''\r\n            })\r\n        }\r\n        return toReturn\r\n    }\r\n\r\n    render() {\r\n        let { width, type } = this.props;\r\n        const style = {\r\n            maxWidth: width / 2 - 10,\r\n            width: width / 2 - 10,\r\n            flexShrink: 0,\r\n        }\r\n        const data = this.getRows()\r\n\r\n        return (\r\n            <>\r\n                <Table striped bordered hover size=\"sm\" className=\"property-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {\r\n                            data && data.map((property, index) => {\r\n\r\n                                return (\r\n                                    <tr key={index} onClick={() => this.handleSelect(index)} className={this.getClassName(index)}>\r\n                                        <td style={style}>\r\n                                            {\r\n                                                type !== 'custom' ?\r\n                                                    <div className=\"property-input\" style={style}>{property.name}</div> :\r\n                                                    <ContentEditable\r\n                                                        innerRef={property.nref}\r\n                                                        onChange={this.handleChange.bind(this, index, 'name')}\r\n                                                        onMouseDown={e => e.stopPropagation()}\r\n                                                        html={property.name}\r\n                                                        disabled={false}\r\n                                                        className=\"property-input\"\r\n                                                        style={style}\r\n                                                    />\r\n                                            }\r\n                                        </td>\r\n                                        <td style={style}>\r\n                                            {\r\n                                                type !== 'custom' ?\r\n                                                    <div className=\"property-input\" style={style}>{property.value}</div> :\r\n                                                    <ContentEditable\r\n                                                        innerRef={property.nref}\r\n                                                        onChange={this.handleChange.bind(this, index, 'value')}\r\n                                                        onMouseDown={e => e.stopPropagation()}\r\n                                                        html={property.value}\r\n                                                        disabled={false}\r\n                                                        className=\"property-input\"\r\n                                                        style={style}\r\n                                                    />\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n\r\n                </Table>\r\n                <Pagination className=\"property-list-pagination\" size=\"small\" color=\"secondary\" />\r\n                {/* <div className=\"text-right\">\r\n                    <button className=\"reset-property-btn\">Reset</button>\r\n                </div> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { selected } = state.property\r\n    return {\r\n        selected: selected,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleSelect: (name, value) => dispatch(handler.selectPropertyHandler(name, value)),\r\n    handleChange: (index, type, value) => dispatch(handler.changePropertyHandler(index, type, value)),\r\n    restoreCustomProperty: custom => dispatch(handler.restoreCustomProperty(custom)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PropertyList)","export default class MapGridController {\r\n    constructor(map) {\r\n        this.map = map\r\n    }\r\n\r\n    buildTilesets = () => {\r\n\r\n    }\r\n\r\n    buildLayers = () => {\r\n\r\n    }\r\n\r\n    buildMap = () => {\r\n\r\n    }\r\n\r\n    buildProperties = () => {\r\n\r\n    }\r\n}","export default class MapImageController {\r\n    constructor(canvas, map) {\r\n        this.map = map\r\n        this.canvas = canvas\r\n        this.ctx = canvas.getContext('2d')\r\n        this.numColumn = map.width\r\n        this.numRow = map.height\r\n        this.tileWidth = map.tileWidth\r\n        this.tileHeight = map.tileHeight\r\n        this.gridThickness = 2\r\n        this.canvasWidth = this.gridThickness + this.numColumn * (this.gridThickness + this.tileWidth)\r\n        this.canvasHeight = this.gridThickness + this.numRow * (this.gridThickness + this.tileHeight)\r\n        this.gridColor = '#000000'\r\n        this.backgroundColor = 'rgba(211,211,211,1)'\r\n        this.gridPositions = []\r\n        this.buildGridPositions()\r\n    }\r\n\r\n    setTilesets = (tilesets) => {\r\n        this.tilesets = tilesets\r\n    }\r\n\r\n    getMapNumGrids = () => {\r\n        return this.numColumn * this.numRow\r\n    }\r\n\r\n    getCanvasDimension = () => {\r\n        return {\r\n            canvasWidth: this.canvasWidth,\r\n            canvasHeight: this.canvasHeight\r\n        }\r\n    }\r\n\r\n    drawBackGround = () => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.backgroundColor\r\n        this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n        this.ctx.restore()\r\n        this.drawGridBorder()\r\n    }\r\n\r\n    drawGridBorder = () => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.gridColor\r\n        for (let i = 0; i < this.numRow + 1; i++) {\r\n            const top = i * (this.gridThickness + this.tileHeight)\r\n            this.ctx.fillRect(0, top, this.canvasWidth, this.gridThickness)\r\n        }\r\n        for (let i = 0; i < this.numColumn + 1; i++) {\r\n            const left = i * (this.gridThickness + this.tileWidth)\r\n            this.ctx.fillRect(left, 0, this.gridThickness, this.canvasHeight)\r\n        }\r\n        this.ctx.restore()\r\n    }\r\n\r\n    buildGridPositions = () => {\r\n        let index = 0\r\n        for (let o = 0; o < this.numRow; o++)\r\n            for (let i = 0; i < this.numColumn; i++) {\r\n                this.gridPositions.push({\r\n                    index: index,\r\n                    x: this.gridThickness + i * (this.tileWidth + this.gridThickness),\r\n                    y: this.gridThickness + o * (this.tileHeight + this.gridThickness),\r\n                    col: i,\r\n                    row: o\r\n                })\r\n                index += 1\r\n            }\r\n    }\r\n\r\n    getGridPositions = () => {\r\n        return this.gridPositions\r\n    }\r\n\r\n    setBackgroundColor = color => {\r\n        this.backgroundColor = color\r\n    }\r\n\r\n\r\n    getTilesetByGridId = id => {\r\n        for (let i = 0; i < this.tilesets.length; i++) {\r\n            if (id >= this.tilesets[i].firstgid && id < this.tilesets[i].firstgid + this.tilesets[i].tilecount) {\r\n                return this.tilesets[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    getTilesetIdByGridId = id => {\r\n        for (let i = 0; i < this.tilesets.length; i++) {\r\n            if (id >= this.tilesets[i].firstgid && id < this.tilesets[i].firstgid + this.tilesets[i].tilecount) {\r\n                return this.tilesets[i].canvasId\r\n            }\r\n        }\r\n    }\r\n\r\n    getTilesetIndexByGridId = id => {\r\n        for (let i = 0; i < this.tilesets.length; i++) {\r\n            if (id >= this.tilesets[i].firstgid && id < this.tilesets[i].firstgid + this.tilesets[i].tilecount) {\r\n                return id - this.tilesets[i].firstgid + 1\r\n            }\r\n        }\r\n    }\r\n\r\n    getGridPositionByGridIndex = index => {\r\n        for (let i = 0; i < this.gridPositions.length; i++) {\r\n            if (this.gridPositions[i].index === index) {\r\n                return this.gridPositions[i]\r\n            }\r\n        }\r\n    }\r\n    drawLayerGridByGridIndex = (index, tileData, canvas) => {\r\n        const gridPosition = this.getGridPositionByGridIndex(index)\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.putImageData(tileData.imageData, gridPosition.x, gridPosition.y, 0, 0, tileData.width, tileData.height)\r\n    }\r\n\r\n    clearLayerCanvas = (canvas) => {\r\n        const ctx = canvas.getContext('2d')\r\n        const { width, height } = canvas\r\n        ctx.clearRect(0, 0, width, height)\r\n    }\r\n\r\n    getGridPositionFromMouseXY = (x, y) => {\r\n        for (let i in this.gridPositions) {\r\n            if (x >= this.gridPositions[i].x &&\r\n                x < this.gridPositions[i].x + this.tileWidth + this.gridThickness &&\r\n                y >= this.gridPositions[i].y &&\r\n                y < this.gridPositions[i].y + this.tileHeight + this.gridThickness)\r\n                return this.gridPositions[i]\r\n        }\r\n        return null\r\n    }\r\n\r\n    getMoveSelectedTileData = (selectedGrids, gridPosition) => {\r\n        if (gridPosition === null) return\r\n        //sort selected grids by gid, small infront\r\n        let grids = [...selectedGrids]\r\n        grids.sort((a, b) => { return a.gid - b.gid })\r\n        //convert grids by tileset indexes, to (x y distance to the first element)\r\n        //1.get tileset\r\n        const tileset = this.getTilesetByGridId(grids[0].gid)\r\n        //2.get numRow numColumn\r\n        const { columns } = tileset\r\n        //3.get row column indexes\r\n        const gridIndexes = grids.map(e => {\r\n            return {\r\n                col: e.index % columns,\r\n                row: Math.floor(e.index / columns)\r\n            }\r\n        })\r\n        //4.get diff from first element\r\n        const gridDiff = gridIndexes.map(e => {\r\n            return {\r\n                col: e.col - gridIndexes[0].col + gridPosition.col,\r\n                row: e.row - gridIndexes[0].row + gridPosition.row\r\n            }\r\n        })\r\n\r\n\r\n        // use diff format a new data\r\n        const data = this.gridPositions.map(e => {\r\n            for (let i in gridDiff) {\r\n                if (gridDiff[i].col === e.col && gridDiff[i].row === e.row)\r\n                    return grids[i].gid\r\n            }\r\n            return 0\r\n        })\r\n\r\n        return data\r\n\r\n    }\r\n\r\n    storeLayerState = (layerCanvas) => {\r\n        const ctx = layerCanvas.getContext('2d')\r\n        this.storedImageData = ctx.getImageData(0, 0, this.canvasWidth, this.canvasHeight)\r\n    }\r\n    restoreLayerState = (layerCanvas) => {\r\n        if (!layerCanvas) return\r\n        const ctx = layerCanvas.getContext('2d')\r\n        if (!this.storedImageData) return\r\n        ctx.putImageData(this.storedImageData, 0, 0)\r\n    }\r\n\r\n\r\n    getIndexByColRow = (col, row) => {\r\n        for (let i in this.gridPositions) {\r\n            if (this.gridPositions[i].col === col && this.gridPositions[i].row === row) {\r\n                return this.gridPositions[i].index\r\n            }\r\n        }\r\n    }\r\n\r\n    changeSameAdjacentData = (data, index, old_value) => {\r\n        if (data[index] === old_value) {\r\n            data[index] = 'to be changed'\r\n            if (!this.gridPositions[index]) return\r\n            const { col, row } = this.gridPositions[index]\r\n            this.changeSameAdjacentData(data, this.getIndexByColRow(col - 1, row), old_value)\r\n            this.changeSameAdjacentData(data, this.getIndexByColRow(col - 1, row - 1), old_value)\r\n            this.changeSameAdjacentData(data, this.getIndexByColRow(col + 1, row), old_value)\r\n            this.changeSameAdjacentData(data, this.getIndexByColRow(col + 1, row + 1), old_value)\r\n            return data\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getMoveFillData = (grids, gridPosition, data) => {\r\n        //get grid indexes with same adjacent data\r\n\r\n        //grids: to draw\r\n        //gridposition: mouse position\r\n        //data: the layer data needs to change by fill\r\n        let returnData = [...data]\r\n        const old_value = returnData[gridPosition.index]\r\n        returnData = this.changeSameAdjacentData(returnData, gridPosition.index, old_value)\r\n        for (let i in returnData) {\r\n            if (returnData[i] === 'to be changed')\r\n                returnData[i] = grids[0].gid\r\n        }\r\n        return returnData\r\n    }\r\n\r\n    getMoveEraserData = (gridPosition, data) => {\r\n        let returnData = [...data]\r\n        if (!gridPosition) return\r\n        returnData[gridPosition.index] = 0\r\n        return returnData\r\n    }\r\n}","export default class TilesetImageController {\r\n    constructor(tileset, canvas) {\r\n        this.canvas = canvas\r\n        this.tileset = tileset\r\n        this.ctx = canvas.getContext('2d')\r\n        this.gridThickness = 2\r\n        this.imageWidth = tileset.width\r\n        this.imageHeight = tileset.height\r\n        this.tileWidth = tileset.tileWidth\r\n        this.tileHeight = tileset.tileHeight\r\n        this.numColumn = Math.floor(this.imageWidth / this.tileWidth)\r\n        this.numRow = Math.floor(this.imageHeight / this.tileHeight)\r\n        this.canvasWidth = this.gridThickness + this.numColumn * (this.gridThickness + this.tileWidth)\r\n        this.canvasHeight = this.gridThickness + this.numRow * (this.gridThickness + this.tileHeight)\r\n        this.gridColor = '#000000'\r\n        this.backgroundColor = 'rgba(211,211,211,1)'\r\n        this.gridPositions = []\r\n        this.buildGridPositions()\r\n\r\n        this.helper = document.createElement('CANVAS')\r\n        this.initHelper(this.imageWidth, this.imageHeight)\r\n    }\r\n\r\n    initHelper = (width, height) => {\r\n        this.helper.width = width\r\n        this.helper.height = height\r\n        this.helperctx = this.helper.getContext('2d')\r\n    }\r\n\r\n    drawImage = (src, callback) => {\r\n        this.drawImageHelper(src, () => {\r\n            const imageData = this.getImageDataFromHelper()\r\n            for (let i = 0; i < this.gridPositions.length; i++)\r\n                this.ctx.putImageData(\r\n                    imageData,\r\n                    this.gridPositions[i].dx,\r\n                    this.gridPositions[i].dy,\r\n                    this.gridPositions[i].sx,\r\n                    this.gridPositions[i].sy,\r\n                    this.tileWidth,\r\n                    this.tileHeight\r\n                )\r\n            if (callback) callback()\r\n        })\r\n    }\r\n\r\n    drawImageHelper = (src, callback) => {\r\n        let img = new Image()\r\n        img.src = src\r\n        img.onload = () => {\r\n            this.helperctx.drawImage(img, 0, 0)\r\n            this.helperImageData = this.helperctx.getImageData(0, 0, img.width, img.height)\r\n            if (callback) callback()\r\n        }\r\n    }\r\n    getImageDataFromHelper = () => {\r\n        return this.helperImageData\r\n    }\r\n\r\n    drawBackGround = () => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.backgroundColor\r\n        this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n        this.ctx.restore()\r\n        this.drawGridBorder()\r\n    }\r\n\r\n    drawGridBorder = () => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.gridColor\r\n        for (let i = 0; i < this.numRow + 1; i++) {\r\n            const top = i * (this.gridThickness + this.tileHeight)\r\n            this.ctx.fillRect(0, top, this.canvasWidth, this.gridThickness)\r\n        }\r\n        for (let i = 0; i < this.numColumn + 1; i++) {\r\n            const left = i * (this.gridThickness + this.tileWidth)\r\n            this.ctx.fillRect(left, 0, this.gridThickness, this.canvasHeight)\r\n        }\r\n        this.ctx.restore()\r\n    }\r\n\r\n    getCanvasDimension = () => {\r\n        return {\r\n            canvasWidth: this.canvasWidth,\r\n            canvasHeight: this.canvasHeight\r\n        }\r\n    }\r\n\r\n    buildGridPositions = () => {\r\n        let index = 0\r\n        for (let o = 0; o < this.numRow; o++)\r\n            for (let i = 0; i < this.numColumn; i++) {\r\n                this.gridPositions.push({\r\n                    index,\r\n                    x: this.gridThickness + i * (this.tileWidth + this.gridThickness),\r\n                    y: this.gridThickness + o * (this.tileHeight + this.gridThickness),\r\n                    //dx dy is the position difference between image and tiledImage(with and without grid)\r\n                    dx: this.gridThickness + i * (this.tileWidth + this.gridThickness) - i * this.tileWidth,\r\n                    dy: this.gridThickness + o * (this.tileHeight + this.gridThickness) - o * this.tileHeight,\r\n\r\n                    sx: i * this.tileWidth,\r\n                    sy: o * this.tileHeight\r\n                })\r\n\r\n                index += 1\r\n            }\r\n    }\r\n\r\n    getGridPositionByGridIndex = (index) => {\r\n        for (let i = 0; i < this.gridPositions.length; i++) {\r\n            if (this.gridPositions[i].index === index) {\r\n                return this.gridPositions[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    getGridIndexByGridId = (id) => {\r\n        return id - this.tileset.firstgid\r\n    }\r\n\r\n    getTileDataByGridId = (id) => {\r\n\r\n        //the index of the grid in tileset === index in gridpositions\r\n        const index = this.getGridIndexByGridId(id)\r\n\r\n        //find the grid with this index\r\n        const gridPosition = this.getGridPositionByGridIndex(index)\r\n\r\n        //draw the grid in a tile sized canvas by helper \r\n        this.initHelper(this.tileWidth, this.tileHeight)\r\n        //1, get the whole image data\r\n        const imgData = this.ctx.getImageData(0, 0, this.canvasWidth, this.canvasHeight)\r\n        //2. draw to helper\r\n        this.helperctx.putImageData(imgData, -gridPosition.x, -gridPosition.y, gridPosition.x, gridPosition.y, this.tileWidth, this.tileHeight)\r\n        //3.get helper imageData\r\n        const returnImgData = this.helperctx.getImageData(0, 0, this.tileWidth, this.tileHeight)\r\n\r\n        return {\r\n            imageData: returnImgData,\r\n            width: this.tileWidth,\r\n            height: this.tileHeight\r\n        }\r\n    }\r\n\r\n    getGridPositionFromMouseXY = (x, y) => {\r\n        for (let i in this.gridPositions) {\r\n            if (x >= this.gridPositions[i].x &&\r\n                x < this.gridPositions[i].x + this.tileWidth + this.gridThickness &&\r\n                y >= this.gridPositions[i].y &&\r\n                y < this.gridPositions[i].y + this.tileHeight + this.gridThickness)\r\n                return {\r\n                    x: this.gridPositions[i].x,\r\n                    y: this.gridPositions[i].y,\r\n                    index: this.gridPositions[i].index\r\n                }\r\n        }\r\n        return null\r\n    }\r\n\r\n    getMinMaxGridPositionsFromGridPositions = (grids) => {\r\n\r\n        let minX = Infinity, maxX = -Infinity, minY = Infinity, maxY = -Infinity\r\n        for (let i in grids) {\r\n            minX = Math.min(minX, grids[i].x)\r\n            minY = Math.min(minY, grids[i].y)\r\n            maxX = Math.max(maxX, grids[i].x)\r\n            maxY = Math.max(maxY, grids[i].y)\r\n        }\r\n        return {\r\n            minX, minY, maxX, maxY\r\n        }\r\n    }\r\n\r\n    getBoxedGridPositionsFromGridPositions = (grids, grid) => {\r\n        let { minX, minY, maxX, maxY } = this.getMinMaxGridPositionsFromGridPositions(grids)\r\n        minX = Math.min(minX, grid.x)\r\n        minY = Math.min(minY, grid.y)\r\n        maxX = Math.max(minX, grid.x + this.tileWidth + this.gridThickness)\r\n        maxY = Math.max(minY, grid.y + this.tileHeight + this.gridThickness)\r\n\r\n        let returnGrids = []\r\n        for (let i in this.gridPositions) {\r\n            if (this.gridPositions[i].x >= minX &&\r\n                this.gridPositions[i].x < maxX &&\r\n                this.gridPositions[i].y >= minY &&\r\n                this.gridPositions[i].y < maxY)\r\n                returnGrids.push(this.gridPositions[i])\r\n        }\r\n        return returnGrids\r\n    }\r\n\r\n    handleConvertIndexToGID = grids => {\r\n        return grids.map(e => {\r\n            e.gid = e.index + this.tileset.firstgid\r\n            return e\r\n        })\r\n    }\r\n\r\n}","export default class LayerDeleteTransaction {\r\n    constructor(id, layerList, doCallback, undoCallback) {\r\n        this.id = id\r\n        this.doCallback = doCallback\r\n        this.undoCallback = undoCallback\r\n        this.layerList = [...layerList]\r\n    }\r\n\r\n    doTransaction = () => {\r\n        if (this.id !== undefined) this.doCallback(this.id)\r\n        else this.doCallback()\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        if (this.layerList !== undefined) this.undoCallback(this.layerList)\r\n        else this.undoCallback()\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport MapGridController from '../../controller/MapGridController'\r\nimport MapImageController from '../../controller/MapImageController'\r\nimport TilesetImageController from '../../controller/TilesetImageController'\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport { v1 } from 'uuid';\r\nimport TOOLS from '../../tools/ToolbarTools'\r\nimport MapTransaction from '../../controller/LayerTransaction'\r\n\r\nclass ImageWrapper extends React.Component {\r\n\r\n    state = {\r\n        scale: 1,\r\n        canvasWidth: 0,\r\n        canvasHeight: 0,\r\n    }\r\n\r\n    scrollbar = React.createRef();\r\n    mouseGridPosition = null\r\n    mouseDown = false\r\n    layerRefs = {}\r\n    layerList = {}\r\n\r\n    getToolName = () => {\r\n        const { selectedTool } = this.props\r\n        if (selectedTool === TOOLS.ZOOM_IN)\r\n            return 'display-zoom-in'\r\n        if (selectedTool === TOOLS.ZOOM_OUT)\r\n            return 'display-zoom-out'\r\n        if (selectedTool === TOOLS.PENCIL)\r\n            return 'display-pencil'\r\n        if (selectedTool === TOOLS.ERASER)\r\n            return 'display-eraser'\r\n        if (selectedTool === TOOLS.FILL)\r\n            return 'display-fill'\r\n        if (selectedTool)\r\n            return 'display-cross-cursor'\r\n        return ''\r\n    }\r\n\r\n    handleZoomEffect = (e) => {\r\n        e.stopPropagation();\r\n        const { selectedTool } = this.props;\r\n        if (selectedTool !== TOOLS.ZOOM_IN && selectedTool !== TOOLS.ZOOM_OUT) return\r\n        const { scale } = this.state\r\n        const factor = selectedTool === TOOLS.ZOOM_IN ? 1 / 0.8 : selectedTool === TOOLS.ZOOM_OUT ? 0.8 : 1\r\n        const nscale = scale * factor\r\n        this.setState({ scale: nscale })\r\n\r\n        let target = document.getElementById('map-display')\r\n        const rect = target.getBoundingClientRect()\r\n        const { clientX, clientY } = e\r\n        const { left, top } = rect\r\n        const dx = clientX - left\r\n        const dy = clientY - top\r\n        const ndy = dy * factor\r\n        const ndx = dx * factor\r\n        const ddy = ndy - dy\r\n        const ddx = ndx - dx\r\n        target.style.transform = \"scale(\" + nscale + \")\"\r\n\r\n\r\n        const currX = this.refs.scrollbar.getScrollLeft();\r\n        const currY = this.refs.scrollbar.getScrollTop();\r\n\r\n        if (nscale >= 1) {\r\n            this.refs.scrollbar.scrollLeft(ddx + currX)\r\n            this.refs.scrollbar.scrollTop(ddy + currY)\r\n        }\r\n    }\r\n\r\n    getSelectedTools = () => {\r\n        const { selectedTool } = this.props\r\n        return selectedTool === TOOLS.ZOOM_IN ? \"display-zoom-in\" : selectedTool === TOOLS.ZOOM_OUT ? \"display-zoom-out\" : \"\"\r\n    }\r\n\r\n    handleDrawLayers = () => {\r\n\r\n        const { layerList, tilesets } = this.props\r\n        this.imageController.setTilesets(tilesets)\r\n        let layersRefName = []\r\n\r\n        for (let i = 0; i < layerList.length; i++) {\r\n            const layerRefName = 'layer' + layerList[i]._id\r\n            this.layerRefs[layerRefName] = this.refs[layerRefName]\r\n            this.layerList[layerRefName] = layerList[i]\r\n            layersRefName.push(layerRefName)\r\n            this.imageController.clearLayerCanvas(this.layerRefs[layerRefName])\r\n            this.handleDrawLayerByLayerData(layerList[i].data, this.layerRefs[layerRefName])\r\n        }\r\n    }\r\n\r\n    handleMouseDown = e => {\r\n        e.stopPropagation()\r\n        const { selectedGrids, selectedLayer, selectedTool } = this.props\r\n        if (selectedTool === TOOLS.ERASER) {\r\n            if (selectedLayer === null) return\r\n            const layerRefName = 'layer' + selectedLayer\r\n            const layerRef = this.layerRefs[layerRefName]\r\n            const layer = this.layerList[layerRefName]\r\n            if (layer.locked) return\r\n            this.imageController.storeLayerState(layerRef)\r\n            this.mouseDown = true\r\n        }\r\n        if (selectedLayer === null || selectedGrids.length === 0)\r\n            return\r\n        this.mouseDown = true\r\n    }\r\n\r\n    handleMouseMove = e => {\r\n        const { selectedGrids, selectedLayer, selectedTool } = this.props\r\n        if (selectedLayer === null)\r\n            return\r\n\r\n\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n\r\n\r\n        const newMouseGridPosition = this.imageController.getGridPositionFromMouseXY(x, y)\r\n        if (newMouseGridPosition === null || !this.layerRefs) return\r\n\r\n        const layerRefName = 'layer' + selectedLayer\r\n        const layerRef = this.layerRefs[layerRefName]\r\n        const layer = this.layerList[layerRefName]\r\n        if (layer.locked) return\r\n\r\n\r\n\r\n\r\n\r\n        if (!this.mouseGridPosition) {\r\n            this.imageController.storeLayerState(layerRef)\r\n            this.handleMouseMoveDrawLayer(layerRef, layer, selectedGrids, newMouseGridPosition)\r\n            return\r\n        }\r\n\r\n\r\n        if (this.mouseGridPosition.index === newMouseGridPosition.index) {\r\n            return\r\n        }\r\n\r\n        if (!this.mouseDown && selectedTool !== TOOLS.ERASER) this.imageController.restoreLayerState(layerRef)\r\n        this.handleMouseMoveDrawLayer(layerRef, layer, selectedGrids, newMouseGridPosition)\r\n\r\n    }\r\n\r\n    handleMouseMoveDrawLayer = (layerRef, layer, selectedGrids, gridPosition) => {\r\n\r\n        const { selectedTool } = this.props\r\n        this.mouseGridPosition = gridPosition\r\n\r\n\r\n        if (selectedTool === TOOLS.ERASER && this.mouseDown) {\r\n            const data = this.imageController.getMoveEraserData(gridPosition, layer.data)\r\n            this.imageController.storeLayerState(layerRef)\r\n            if (data) this.props.transactions.addTransaction(\r\n                new MapTransaction(data, this.props.layerList, this.props.mapFillClick, this.props.restoreLayers)\r\n            )\r\n            return\r\n        }\r\n\r\n        if (selectedGrids.length === 0) return\r\n\r\n        if (selectedTool === TOOLS.STAMP) {\r\n            const data = this.imageController.getMoveSelectedTileData(selectedGrids, gridPosition)\r\n            if (this.mouseDown) {\r\n                this.imageController.storeLayerState(layerRef)\r\n                if (data) this.props.transactions.addTransaction(\r\n                    new MapTransaction(data, this.props.layerList, this.props.mapStampClick, this.props.restoreLayers)\r\n                )\r\n                return\r\n            }\r\n            this.handleDrawLayerByLayerData(data, layerRef)\r\n        }\r\n        else if (selectedTool === TOOLS.FILL) {\r\n            const data = this.imageController.getMoveFillData(selectedGrids, gridPosition, layer.data)\r\n            if (this.mouseDown) {\r\n                this.imageController.storeLayerState(layerRef)\r\n                if (data) this.props.transactions.addTransaction(\r\n                    new MapTransaction(data, this.props.layerList, this.props.mapFillClick, this.props.restoreLayers)\r\n                )\r\n                return\r\n            }\r\n            this.handleDrawLayerByLayerData(data, layerRef)\r\n        }\r\n    }\r\n\r\n    handleMouseLeave = () => {\r\n        const { selectedLayer, selectedGrids, selectedTool } = this.props\r\n        this.mouseGridPosition = null\r\n\r\n        this.mouseDown = false\r\n        if (selectedLayer === null || selectedGrids.length === 0 || selectedTool === TOOLS.ERASER)\r\n            return\r\n        const layerRefName = 'layer' + selectedLayer\r\n        const layerRef = this.layerRefs[layerRefName]\r\n        this.imageController.restoreLayerState(layerRef)\r\n    }\r\n\r\n    handleMouseClick = e => {\r\n        this.mouseDown = false\r\n        const { selectedTool, selectedGrids, selectedLayer } = this.props\r\n        if (selectedTool === TOOLS.ZOOM_IN || selectedTool === TOOLS.ZOOM_OUT) {\r\n            this.handleZoomEffect(e)\r\n            return\r\n        }\r\n        if (selectedLayer === null) {\r\n            this.props.propertySelectDisplay('map')\r\n            return\r\n        }\r\n\r\n        if (selectedTool !== TOOLS.STAMP && selectedTool !== TOOLS.ERASER && selectedTool !== TOOLS.FILL) {\r\n            this.props.propertySelectDisplay('map')\r\n            return\r\n        }\r\n        e.stopPropagation()\r\n\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n        const gridPosition = this.imageController.getGridPositionFromMouseXY(x, y)\r\n\r\n\r\n        const layerRefName = 'layer' + selectedLayer\r\n        const layerRef = this.layerRefs[layerRefName]\r\n        const layer = this.layerList[layerRefName]\r\n        if (layer.locked) return\r\n\r\n        this.imageController.storeLayerState(layerRef)\r\n\r\n        if (selectedTool === TOOLS.ERASER) {\r\n            const data = this.imageController.getMoveEraserData(gridPosition, layer.data)\r\n            this.props.transactions.addTransaction(\r\n                new MapTransaction(data, this.props.layerList, this.props.mapFillClick, this.props.restoreLayers)\r\n            )\r\n        }\r\n\r\n        if (selectedGrids.length === 0) return\r\n\r\n        if (selectedTool === TOOLS.STAMP) {\r\n            const data = this.imageController.getMoveSelectedTileData(selectedGrids, gridPosition)\r\n            this.props.transactions.addTransaction(\r\n                new MapTransaction(data, this.props.layerList, this.props.mapStampClick, this.props.restoreLayers)\r\n            )\r\n        } else if (selectedTool === TOOLS.FILL) {\r\n            const data = this.imageController.getMoveFillData(selectedGrids, gridPosition, layer.data)\r\n            this.props.transactions.addTransaction(\r\n                new MapTransaction(data, this.props.layerList, this.props.mapFillClick, this.props.restoreLayers)\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    handleDrawLayerByLayerData = (data, layerCanvas) => {\r\n        //data[i] is the gridid of tilesets, i is the grid index of a layer\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i] === 0)\r\n                continue\r\n            else {\r\n                const tileset = this.imageController.getTilesetByGridId(data[i])\r\n                if (!tileset) return\r\n                const srcCanvas = document.getElementById(tileset.canvasId)\r\n                if (!srcCanvas) return\r\n                const tilesetImageController = new TilesetImageController(tileset, srcCanvas)\r\n                const tileData = tilesetImageController.getTileDataByGridId(data[i])\r\n                this.imageController.drawLayerGridByGridIndex(i, tileData, layerCanvas)\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFixPosition = (clientX, clientY) => {\r\n        const windowScrollX = window.scrollX\r\n        const windowScrollY = window.scrollY\r\n        let x = windowScrollX + clientX\r\n        let y = windowScrollY + clientY\r\n        const canvasX = this.refs.backgroundCanvas.getBoundingClientRect().left\r\n        const canvasY = this.refs.backgroundCanvas.getBoundingClientRect().top\r\n        x -= canvasX\r\n        y -= canvasY\r\n        const { scale } = this.state\r\n        x /= scale\r\n        y /= scale\r\n        return { x, y }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { map, tilesets } = this.props\r\n        const canvas = this.refs.backgroundCanvas\r\n        this.gridController = new MapGridController(map)\r\n        this.imageController = new MapImageController(canvas, map)\r\n        this.imageController.setTilesets(tilesets)\r\n        const { canvasWidth, canvasHeight } = this.imageController.getCanvasDimension()\r\n        this.setState({ canvasWidth, canvasHeight }, () => {\r\n            this.imageController.drawBackGround()\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { tilesetLoaded, resizing } = this.props\r\n        if (tilesetLoaded && !resizing)\r\n            this.handleDrawLayers()\r\n    }\r\n\r\n    render() {\r\n        const { style, width, height, layerList } = this.props;\r\n        const { scale, canvasWidth, canvasHeight } = this.state;\r\n        const totalStyle = {\r\n            ...style,\r\n            marginLeft: canvasWidth ? canvasWidth * scale >= width ? \"auto\" : (width - canvasWidth * scale) / 2 : \"auto\",\r\n            marginTop: canvasHeight ? canvasHeight * scale >= height ? \"auto\" : (height - canvasHeight * scale) / 2 : \"auto\",\r\n        }\r\n        return (\r\n\r\n            <Scrollbars style={{ ...style, width, height }} ref=\"scrollbar\"\r\n                renderThumbHorizontal={props => <div {...props} className=\"thumb\" />}\r\n                renderThumbVertical={props => <div {...props} className=\"thumb\" />}>\r\n\r\n                <div id=\"map-display\" className={\"display-place \" + this.getToolName()} style={totalStyle}\r\n                    onClick={this.handleMouseClick}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onMouseMove={this.handleMouseMove}\r\n                    onMouseLeave={this.handleMouseLeave}\r\n                    onMouseUp={this.handleMouseClick}\r\n                >\r\n                    <canvas ref='backgroundCanvas' width={canvasWidth} height={canvasHeight}></canvas>\r\n                    {layerList.map(e => (\r\n                        <canvas ref={'layer' + e._id} width={canvasWidth} height={canvasHeight}\r\n                            className={\"layer-canvas \" + (e.visible ? '' : 'layer-invisible')}\r\n                            style={{ opacity: e.opacity }} key={v1()}\r\n                        ></canvas>\r\n                    ))}\r\n                </div>\r\n            </Scrollbars>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { selected } = state.toolbar\r\n    const { map } = state.map\r\n    const { tilesets, loaded, selectedGrids } = state.tileset\r\n    const { layerList } = state.layer\r\n    return {\r\n        selectedTool: selected,\r\n        map, tilesets, layerList,\r\n        tilesetLoaded: loaded,\r\n        selectedGrids,\r\n        selectedLayer: state.layer.selected\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    mapStampClick: (data) => dispatch(handler.mapStampClick(data)),\r\n    mapFillClick: (data) => dispatch(handler.mapFillClick(data)),\r\n    propertySelectDisplay: (window) => dispatch(handler.propertySelectDisplay(window)),\r\n    restoreLayers: (layerList) => dispatch(handler.restoreLayers(layerList)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageWrapper)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MapDisplay from '../map/MapDisplay'\r\nclass MiniMap extends React.Component {\r\n\r\n\r\n    state = {\r\n\r\n    };\r\n\r\n\r\n    tileMap = React.createRef()\r\n\r\n    render() {\r\n        const { width, height, style, resizing } = this.props;\r\n        return (\r\n            <MapDisplay style={style} width={width} height={height} window=\"property\" resizing={resizing} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MiniMap)","import React from 'react';\r\nimport { TitleBar } from 'react-desktop/macOs';\r\n\r\nclass Titlebar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <TitleBar\r\n                title={this.props.title}\r\n                controls\r\n                onCloseClick={this.props.handleClose}\r\n                onMinimizeClick={this.props.handleResetWindow}\r\n                onMaximizeClick={this.props.handleMaxWindow}\r\n                onResizeClick={this.props.handleMaxWindow}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Titlebar;\r\n\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport Collapsible from '../../tools/Collapsible'\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport PropertyList from './PropertyList'\r\nimport MiniMap from './MiniMap'\r\nimport { connect } from 'react-redux';\r\nimport Titlebar from '../../tools/Titlebar'\r\n\r\n\r\n\r\n\r\nclass PropertyWindow extends React.Component {\r\n\r\n    state = {\r\n        resizing: false,\r\n        propertyOpen: true,\r\n        customOpen: false,\r\n        mapOpen: false\r\n    }\r\n\r\n    collapsible = React.createRef()\r\n\r\n    handleOnResize = (e, direction, ref, delta, position) => {\r\n        this.setState({ resizing: true }, () => {\r\n            this.props.handleOnResize(ref, position, 'property')\r\n        })\r\n    }\r\n\r\n    handleStopResize = (e, direction, ref, delta, position) => {\r\n        this.setState({ resizing: false }, () => {\r\n            this.props.handleOnResize(ref, position, 'property')\r\n        })\r\n    }\r\n\r\n    handleAddProperty = () => {\r\n        this.collapsible.handleAddProperty()\r\n        this.props.handleAddProperty()\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        e.stopPropagation();\r\n        this.props.handleDelete();\r\n    }\r\n\r\n    onlyNumber = (obj) => {\r\n        obj.value = obj.value.replace(/[^\\d]/gi, \"\");\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { display, selected, open, dimension, custom, transactions } = this.props\r\n        const { width, height } = dimension.size;\r\n        const { propertyOpen, customOpen, mapOpen } = this.state\r\n        const style = {\r\n            maxWidth: width,\r\n            maxHeight: height - 140,\r\n        }\r\n        const { resizing } = this.state;\r\n        return (\r\n\r\n            <>\r\n                {open ? <Rnd\r\n                    className={\"workscreen-window \"}\r\n                    size={dimension.size}\r\n                    position={dimension.position}\r\n                    onMouseDown={() => this.props.handleToTop('property')}\r\n                    onResizeStart={() => this.props.handleToTop('property')}\r\n                    onResize={this.handleOnResize}\r\n                    onResizeStop={this.handleStopResize}\r\n                    onClick={this.props.handleUnselect}\r\n                    minWidth={202}\r\n                    minHeight={391}\r\n                    id='property'\r\n                    onDragStop={(e, d) => this.props.handleOnDragStop(e, d, 'property')}\r\n                    style={{ zIndex: dimension.zIndex }}\r\n                >\r\n                    <Titlebar title=\"Property Window\" handleClose={this.props.handleClose.bind(this, 'propertyOpen')} handleResetWindow={this.props.handleResetWindow} handleMaxWindow={this.props.handleMaxWindow} />\r\n                    <Collapsible data={\r\n                        [\r\n                            { title: 'Property', content: <PropertyList data={display} window='layer' width={width} />, open: propertyOpen },\r\n                            { title: 'Custom Property', content: <PropertyList data={custom} window='custom' width={width} type='custom' transactions={transactions} />, open: customOpen },\r\n                            { title: 'Show Mini Map', content: <MiniMap window='minimap' style={style} width={width} height={height - 140} resizing={resizing} />, open: mapOpen },\r\n                        ]\r\n                    }\r\n                        maxHeight={style.maxHeight}\r\n                        resizing={resizing}\r\n                        childRef={ref => this.collapsible = ref}\r\n                    />\r\n                    <i className={\"fas fa-trash-alt property-clear-btn better-btn \" + (selected ? \"\" : \"btn-disabled\")} onClick={this.handleDelete} onMouseDown={e => e.stopPropagation()} />\r\n                    <i className={\"fas fa-plus property-add-btn better-btn\"} onClick={this.handleAddProperty} onMouseDown={e => e.stopPropagation()} />\r\n\r\n\r\n                </Rnd> : null}\r\n            </>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { display, custom, selected } = state.property\r\n    return {\r\n        display, custom, selected\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleUnselect: () => dispatch(handler.unselectPropertyHandler()),\r\n    handleDelete: () => dispatch(handler.deletePropertyHandler()),\r\n    handleAddProperty: () => dispatch(handler.handleAddProperty()),\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PropertyWindow)\r\n\r\n","export default class LayerRenameTransaction {\r\n    constructor(name, id, layerList, doCallback, undoCallback) {\r\n        this.id = id\r\n        this.name = name\r\n        this.doCallback = doCallback\r\n        this.undoCallback = undoCallback\r\n        this.layerList = layerList.map(e => { return { ...e } })\r\n    }\r\n\r\n    doTransaction = () => {\r\n        if (this.id !== undefined) this.doCallback(this.name, this.id)\r\n        else this.doCallback()\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        if (this.layerList !== undefined) this.undoCallback(this.layerList)\r\n        else this.undoCallback()\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport LayerTransaction from '../../controller/LayerTransaction'\r\nimport LayerRenameTransaction from '../../controller/LayerRenameTransaction'\r\n\r\n\r\nclass LayerWindow extends React.Component {\r\n\r\n    handleRename = (e, id) => {\r\n        this.props.transactions.addTransaction(\r\n            new LayerRenameTransaction(e.target.value, id, this.props.layerList, this.props.handleRename, this.props.restoreLayers)\r\n        )\r\n    };\r\n\r\n    handleSelect = (id, e) => {\r\n        e.stopPropagation()\r\n        this.props.handleSelect(id)\r\n    }\r\n\r\n    handleDelete = (id, e) => {\r\n        e.stopPropagation()\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(id, this.props.layerList, this.props.handleDelete, this.props.restoreLayers)\r\n        )\r\n    }\r\n\r\n    handleVisibilityClick = (id, e) => {\r\n        e.stopPropagation()\r\n\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(id, this.props.layerList, this.props.handleVisibilityClick, this.props.restoreLayers)\r\n        )\r\n    };\r\n\r\n    handleLockClick = (id, e) => {\r\n        e.stopPropagation()\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(id, this.props.layerList, this.props.handleLockClick, this.props.restoreLayers)\r\n        )\r\n    }\r\n\r\n    handleMoveUp = (id, e) => {\r\n        e.stopPropagation()\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(id, this.props.layerList, this.props.handleMoveUp, this.props.restoreLayers)\r\n        )\r\n    }\r\n\r\n    handleMoveDown = (id, e) => {\r\n        e.stopPropagation();\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(id, this.props.layerList, this.props.handleMoveDown, this.props.restoreLayers)\r\n        )\r\n    }\r\n\r\n    handleOnMouseDown = (e, index) => {\r\n        e.stopPropagation()\r\n        this.props.handleSelectProperty('layers', index)\r\n    }\r\n\r\n    handleUnselect = e => {\r\n        this.props.handleUnselect()\r\n    }\r\n\r\n\r\n    getClassName = (id) => {\r\n        const { selected } = this.props;\r\n        if (selected === null)\r\n            return 'layer-list-item'\r\n        else if (selected !== id)\r\n            return 'layer-list-item'\r\n        else\r\n            return 'layer-list-item layer-list-item-selected'\r\n    }\r\n\r\n    render() {\r\n        const { layerList, maxWidth } = this.props\r\n        const style = { maxWidth }\r\n        return (\r\n            <div className=\"layer-list\" onClick={this.handleUnselect}>\r\n                {layerList && layerList.map((layer, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n                            <div className={this.getClassName(layer._id)} onMouseDown={e => this.handleOnMouseDown(e, index)} onClick={this.handleSelect.bind(this, layer._id)}>\r\n                                <ContentEditable\r\n                                    innerRef={layer.ref}\r\n                                    onChange={e => this.handleRename(e, index)}\r\n                                    onMouseDown={e => this.handleOnMouseDown(e, index)}\r\n                                    html={layer.name}\r\n                                    disabled={false}\r\n                                    className=\"layer-input\"\r\n                                    style={style}\r\n                                />\r\n\r\n\r\n                            </div>\r\n                            <div className=\"layer-item-btn-fixedbox\">\r\n                                <i className={\"fas better-btn layer-item-btn-eye \" + (layer.visible ? 'fa-eye' : 'fa-eye-slash')} onClick={this.handleVisibilityClick.bind(this, index)} />\r\n                                <i className={\"fas better-btn layer-item-btn \" + (layer.locked ? 'fa-lock' : 'fa-unlock')} onClick={this.handleLockClick.bind(this, layer._id)} />\r\n                            </div>\r\n                            <div className=\"layer-item-btn-box\">\r\n                                <i className=\"fas fa-edit better-btn layer-item-btn\" />\r\n                                <i className={\"fas fa-trash-alt better-btn layer-item-btn\"} onClick={this.handleDelete.bind(this, index)} />\r\n                                <i className={\"fas fa-arrow-down better-btn layer-item-btn \" + (index === layerList.length - 1 ? 'layer-btn-disabled' : '')} onClick={this.handleMoveDown.bind(this, layer._id)} />\r\n                                <i className={\"fas fa-arrow-up better-btn layer-item-btn \" + (index === 0 ? 'layer-btn-disabled' : '')} onClick={this.handleMoveUp.bind(this, layer._id)} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div >\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { layerList, selected } = state.layer;\r\n    return {\r\n        layerList,\r\n        selected\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleRename: (name, id) => dispatch(handler.layerRenameHandler(name, id)),\r\n    handleSelect: (id) => dispatch(handler.layerSelectHandler(id)),\r\n    handleUnselect: () => dispatch(handler.layerUnselectHandler()),\r\n    handleDelete: (id) => dispatch(handler.layerDeleteHandler(id)),\r\n    handleMoveUp: (id) => dispatch(handler.layerMoveUpHandler(id)),\r\n    handleMoveDown: (id) => dispatch(handler.layerMoveDownHandler(id)),\r\n    handleSelectProperty: (window, index) => dispatch(handler.propertySelectDisplay(window, index)),\r\n    handleVisibilityClick: (id) => dispatch(handler.layerVisibilityClick(id)),\r\n    handleLockClick: (id) => dispatch(handler.layerLockClick(id)),\r\n    restoreLayers: (layerList) => dispatch(handler.restoreLayers(layerList)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayerWindow)\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport { connect } from 'react-redux';\r\nimport Titlebar from '../../tools/Titlebar'\r\nimport LayerList from './LayerList';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport LayerTransaction from '../../controller/LayerTransaction'\r\nimport mongoose from 'mongoose'\r\n\r\nclass LayerWindow extends React.Component {\r\n\r\n    layerList = []\r\n\r\n    handleOnResize = (e, direction, ref, delta, position) => {\r\n        this.props.handleOnResize(ref, position, 'layer')\r\n    };\r\n\r\n    handleChange = (e) => {\r\n\r\n    };\r\n\r\n    handleAddLayer = e => {\r\n        e.stopPropagation()\r\n        let layerToAdd = {}\r\n        const numRow = this.props.map.width\r\n        const numWidth = this.props.map.height\r\n        const data = []\r\n        for (let i = 0; i < numRow * numWidth; i++) {\r\n            data.push(0)\r\n        }\r\n        layerToAdd._id = mongoose.Types.ObjectId()\r\n        layerToAdd.opacity = 1\r\n        layerToAdd.name = 'New Layer Click to Rename'\r\n        layerToAdd.locked = false\r\n        layerToAdd.visible = true\r\n        layerToAdd.data = data\r\n        layerToAdd.x = 0\r\n        layerToAdd.y = 0\r\n        layerToAdd.type = 'tilelayer'\r\n        layerToAdd.width = numRow\r\n        layerToAdd.height = numWidth\r\n        // this.props.handleAddLayer()\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(layerToAdd, this.props.layerList, this.props.handleAddLayer, this.props.restoreLayers)\r\n        )\r\n    }\r\n\r\n    handleMouseDown = e => {\r\n        e.stopPropagation()\r\n\r\n        this.layerList = []\r\n        const { layerList } = this.props\r\n        for (let i in layerList) {\r\n            this.layerList.push({\r\n                ...layerList[i]\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnMouseUp = (e, value) => {\r\n        e.stopPropagation()\r\n        this.props.transactions.addTransaction(\r\n            new LayerTransaction(value, this.layerList, this.props.handlePassOpacity, this.props.restoreLayers)\r\n        )\r\n        this.layerList = []\r\n    }\r\n\r\n    handleOpacityOnChange = (e, value) => {\r\n        this.props.handlePassOpacity(value)\r\n    };\r\n\r\n    render() {\r\n        const { open, dimension, selected, layerList, transactions } = this.props\r\n        const { width } = dimension.size\r\n        const maxWidth = width - 142;\r\n        let opacity = 0\r\n        if (selected) {\r\n            for (let i = 0; i < layerList.length; i++) {\r\n                if (layerList[i]._id === selected)\r\n                    opacity = Math.floor(layerList[i].opacity * 100)\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                {open ? <Rnd\r\n                    className={\"workscreen-window \"}\r\n                    size={dimension.size}\r\n                    position={dimension.position}\r\n                    onMouseDown={() => { this.props.handleToTop('layer') }}\r\n                    onResize={this.handleOnResize}\r\n                    onResizeStop={this.handleOnResize}\r\n                    onResizeStart={() => this.props.handleToTop('layer')}\r\n                    id='layer'\r\n                    onDragStop={(e, d) => this.props.handleOnDragStop(e, d, 'layer')}\r\n                    style={{ zIndex: dimension.zIndex }}\r\n                >\r\n                    <Titlebar title=\"Layer Window\" handleClose={this.props.handleClose.bind(this, 'layerOpen')} handleResetWindow={this.props.handleResetWindow} handleMaxWindow={this.props.handleMaxWindow} />\r\n                    <LayerList maxWidth={maxWidth} transactions={transactions} />\r\n                    <i className=\"fas fa-plus layer-add-btn better-btn\" onMouseDown={e => e.stopPropagation()} onClick={this.handleAddLayer} />\r\n                    <span className=\"opacity-text\">OPACITY:</span>\r\n                    <div className=\"layer-range\">\r\n                        <Slider\r\n                            defaultValue={0}\r\n                            value={opacity}\r\n                            getAriaValueText={value => value + \"%\"}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks\r\n                            min={0}\r\n                            max={100}\r\n                            onMouseDown={this.handleMouseDown}\r\n                            onChange={this.handleOpacityOnChange}\r\n                            onChangeCommitted={this.handleOnMouseUp}\r\n                            disabled={!selected}\r\n                        />\r\n                    </div>\r\n                </Rnd> : null}\r\n            </>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { layerList, selected } = state.layer;\r\n    const { map } = state.map\r\n    return {\r\n        layerList, map,\r\n        selected\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handlePassOpacity: (value) => dispatch(handler.passOpacityHandler(value)),\r\n    handleAddLayer: (layer) => dispatch(handler.layerAddHandler(layer)),\r\n    restoreLayers: (layerList) => dispatch(handler.restoreLayers(layerList)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LayerWindow)\r\n","import React from 'react'\r\nclass selectedBoxes extends React.Component {\r\n\r\n\r\n    handleOnClick = e => {\r\n        const { shiftSelecting } = this.props\r\n        if (!shiftSelecting)\r\n            e.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const { selectedGrids, width, height } = this.props\r\n        return (\r\n            <>\r\n                {\r\n                    selectedGrids && selectedGrids.map((grid, index) => {\r\n                        const style = {\r\n                            left: grid.x - 1,\r\n                            top: grid.y - 1,\r\n                            width: width + 2,\r\n                            height: height + 2,\r\n                        }\r\n                        return (\r\n                            <div\r\n                                onClick={this.handleOnClick}\r\n                                key={index}\r\n                                style={style}\r\n                                className='selected-grids'\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default selectedBoxes\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport TilesetImageController from '../../controller/TilesetImageController'\r\nimport { arrayBufferToBase64 } from '../../controller/ImageController'\r\nimport axios from 'axios'\r\nimport TOOLS from '../../tools/ToolbarTools'\r\nimport SelectedBoxes from './SelectedBoxes'\r\nimport Keyboard from '../../controller/KeyboardController'\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\n\r\n\r\nclass TilesetDisplay extends React.Component {\r\n\r\n    state = {\r\n        scale: 1,\r\n        canvasWidth: 0,\r\n        canvasHeight: 0,\r\n        selectedGrids: [],\r\n        shiftSelecting: false,\r\n        ctrlSelecting: false,\r\n    }\r\n\r\n    scrollbar = React.createRef();\r\n\r\n    handleZoomEffect = (e) => {\r\n        e.stopPropagation();\r\n        const { selectedTool } = this.props;\r\n        if (selectedTool !== TOOLS.ZOOM_IN && selectedTool !== TOOLS.ZOOM_OUT) return\r\n        const { scale } = this.state\r\n        const factor = selectedTool === TOOLS.ZOOM_IN ? 1 / 0.8 : selectedTool === TOOLS.ZOOM_OUT ? 0.8 : 1\r\n        const nscale = scale * factor\r\n        this.setState({ scale: nscale })\r\n\r\n        let target = this.refs.display\r\n        const rect = target.getBoundingClientRect()\r\n        const { clientX, clientY } = e\r\n        const { left, top } = rect\r\n        const dx = clientX - left\r\n        const dy = clientY - top\r\n        const ndy = dy * factor\r\n        const ndx = dx * factor\r\n        const ddy = ndy - dy\r\n        const ddx = ndx - dx\r\n        target.style.transform = \"scale(\" + nscale + \")\"\r\n\r\n\r\n        const currX = this.refs.scrollbar.getScrollLeft();\r\n        const currY = this.refs.scrollbar.getScrollTop();\r\n\r\n        if (nscale >= 1) {\r\n            this.refs.scrollbar.scrollLeft(ddx + currX)\r\n            this.refs.scrollbar.scrollTop(ddy + currY)\r\n        }\r\n    }\r\n\r\n    getSelectedTools = () => {\r\n        const { selectedTool } = this.props\r\n        return selectedTool === TOOLS.ZOOM_IN ? \"display-zoom-in\" : selectedTool === TOOLS.ZOOM_OUT ? \"display-zoom-out\" : \"\"\r\n    }\r\n\r\n    handleDrawImgToGrid = (src, callback) => {\r\n        this.imageController.drawImage(src, callback)\r\n    }\r\n\r\n    handleOnClick = e => {\r\n        const { selectedTool } = this.props\r\n        if (selectedTool === TOOLS.ZOOM_IN || selectedTool === TOOLS.ZOOM_OUT) {\r\n            this.handleZoomEffect(e)\r\n            return\r\n        }\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n        const gridPosition = this.imageController.getGridPositionFromMouseXY(x, y)\r\n        this.handleSelectGrid(gridPosition)\r\n    }\r\n\r\n    handleSelectGrid = gridPosition => {\r\n        const { ctrlSelecting, shiftSelecting } = this.state\r\n        let { selectedGrids } = this.state\r\n        if (!ctrlSelecting && !shiftSelecting) {\r\n            selectedGrids = []\r\n            selectedGrids.push(gridPosition)\r\n            this.handleGridStateChange(selectedGrids)\r\n            return\r\n        }\r\n        else if (ctrlSelecting) {\r\n            selectedGrids.push(gridPosition)\r\n            this.handleGridStateChange(selectedGrids)\r\n            return\r\n        }\r\n        else if (shiftSelecting) {\r\n            selectedGrids = this.imageController.getBoxedGridPositionsFromGridPositions(selectedGrids, gridPosition)\r\n            this.handleGridStateChange(selectedGrids)\r\n            return\r\n        }\r\n        return\r\n    }\r\n\r\n    handleGridStateChange = selectedGrids => {\r\n        this.setState({ selectedGrids }, () => {\r\n            const { index } = this.props\r\n            const returnGrids = this.imageController.handleConvertIndexToGID(selectedGrids)\r\n            this.props.tilesetSelectGrids(returnGrids)\r\n            this.props.propertySelectTile('tilesets', returnGrids[0].index, index)\r\n        })\r\n    }\r\n\r\n    handleClearGrid = () => {\r\n        this.setState({ selectedGrids: [] })\r\n    }\r\n\r\n    handleFixPosition = (clientX, clientY) => {\r\n        const windowScrollX = window.scrollX\r\n        const windowScrollY = window.scrollY\r\n        let x = windowScrollX + clientX\r\n        let y = windowScrollY + clientY\r\n        const canvasX = this.refs.backgroundCanvas.getBoundingClientRect().left\r\n        const canvasY = this.refs.backgroundCanvas.getBoundingClientRect().top\r\n        x -= canvasX\r\n        y -= canvasY\r\n        const { scale } = this.state\r\n        x /= scale\r\n        y /= scale\r\n        return { x, y }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { tileset } = this.props\r\n        const canvas = this.refs.backgroundCanvas\r\n        this.props.tilesetIdApplier(canvas.id)\r\n        this.imageController = new TilesetImageController(tileset, canvas)\r\n        const { canvasWidth, canvasHeight } = this.imageController.getCanvasDimension()\r\n        this.setState({ canvasWidth, canvasHeight }, () => {\r\n            this.imageController.drawBackGround()\r\n            const { imageId } = tileset\r\n            axios.get(`/data/image?imageId=${imageId}`).then(res => {\r\n                const { err, msg, data } = res.data\r\n                if (err)\r\n                    console.log(msg)\r\n                else {\r\n                    const base64Flag = 'data:image/jpeg;base64,';\r\n                    if (!data) {\r\n                        this.props.handleTilesetLoaded()\r\n                        return\r\n                    }\r\n                    const imageStr = arrayBufferToBase64(data.data)\r\n                    this.handleDrawImgToGrid(base64Flag + imageStr, () => {\r\n                        this.props.handleTilesetLoaded()\r\n                    })\r\n                }\r\n            })\r\n        })\r\n\r\n        window.onkeydown = e => {\r\n            if (Keyboard.triggerLeftControll(e))\r\n                this.setState({ ctrlSelecting: true })\r\n            else if (Keyboard.triggerLeftShift(e))\r\n                this.setState({ shiftSelecting: true })\r\n            else if (Keyboard.triggerLeftCtrlZ(e)) {\r\n                this.props.transactions.undoTransaction()\r\n            }\r\n            else if (Keyboard.triggerLeftCtrlY(e)) {\r\n                this.props.transactions.doTransaction()\r\n            }\r\n        }\r\n        window.onkeyup = e => {\r\n            if (Keyboard.triggerLeftControll(e))\r\n                this.setState({ ctrlSelecting: false })\r\n            else if (Keyboard.triggerLeftShift(e))\r\n                this.setState({ shiftSelecting: false })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { style, width, height, index, tileset } = this.props;\r\n        const { tileWidth, tileHeight } = tileset\r\n        const { scale, canvasWidth, canvasHeight, selectedGrids, shiftSelecting } = this.state;\r\n        const totalStyle = {\r\n            ...style,\r\n            marginLeft: canvasWidth ? canvasWidth * scale >= width ? \"auto\" : (width - canvasWidth * scale) / 2 : \"auto\",\r\n            marginTop: canvasHeight ? canvasHeight * scale >= height ? \"auto\" : (height - canvasHeight * scale) / 2 : \"auto\",\r\n        }\r\n        return (\r\n\r\n            <Scrollbars style={{ ...style, width, height }} ref=\"scrollbar\"\r\n                renderThumbHorizontal={props => <div {...props} className=\"thumb\" />}\r\n                renderThumbVertical={props => <div {...props} className=\"thumb\" />}>\r\n\r\n                <div ref='display'\r\n                    className={\"display-place \" + this.getSelectedTools()}\r\n                    style={totalStyle}\r\n                    onClick={this.handleOnClick}\r\n                    onMouseDown={e => e.stopPropagation()}\r\n                >\r\n                    <canvas ref='backgroundCanvas' id={'tileset' + index} width={canvasWidth} height={canvasHeight} />\r\n                    <SelectedBoxes\r\n                        selectedGrids={selectedGrids}\r\n                        width={tileWidth}\r\n                        height={tileHeight}\r\n                        parent={this}\r\n                        shiftSelecting={shiftSelecting}\r\n                    />\r\n\r\n                </div>\r\n            </Scrollbars>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        socket: state.backend.socket,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    tilesetSelectGrids: (selectedGrids) => dispatch(handler.tilesetSelectGrids(selectedGrids)),\r\n    propertySelectTile: (window, id, index) => dispatch(handler.propertySelectTile(window, id, index)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TilesetDisplay)\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Card from \"../../tools/Card\";\r\nimport '../workscreen.css'\r\n\r\nclass TilesetList extends React.Component {\r\n\r\n    handleGoView = (item) => {\r\n        if (!item) return;\r\n        const { _id } = item;\r\n        const type = 'tilesetviewer';\r\n        this.props.history.push(`/${type}/${_id}`);\r\n        this.forceUpdate();\r\n    };\r\n    render() {\r\n        const { items, handleCheckboxClick } = this.props;\r\n        const numItem = items.length;\r\n\r\n        const style = {\r\n            height: numItem > 3 ? 600 : 300\r\n        };\r\n        return (\r\n            <div className=\"workscreen-tilesetList\">\r\n                <div className=\"workscreen-tilesetList-wrapper\" style={style}>\r\n                    {\r\n                        items && items.map((item, index) => {\r\n                            const col = index % 3;\r\n                            const row = Math.floor(index / 3);\r\n                            const left1s = 'calc(25% - 135px)';\r\n                            const left2s = 'calc(50% - 90px)';\r\n                            const left3s = 'calc(75% - 45px)';\r\n                            const top1s1 = 50;\r\n                            const top1s2 = 200 / 3;\r\n                            const top2s2 = top1s2 * 2 + 200;\r\n                            const cardStyle = {\r\n                                top: numItem > 3 ? row === 0 ? top1s2 : top2s2 : top1s1,\r\n                                left: col === 0 ? left1s : col === 1 ? left2s : left3s,\r\n                            };\r\n                            const { _id } = item;\r\n                            return (\r\n\r\n                                <Card\r\n                                    className='item-card'\r\n                                    item={item}\r\n                                    style={cardStyle}\r\n                                    key={_id}\r\n                                    onClick={this.handleGoView}\r\n                                    handleCheckboxClick={handleCheckboxClick}\r\n                                    handleSetItem={this.handleSetItem}\r\n                                    showEditeBts={true}\r\n                                />\r\n\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { user } = state.auth;\r\n    return {\r\n        user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TilesetList);","export default class TilesetTransaction {\r\n    constructor(oldValue, newValue, doCallback, undoCallback) {\r\n        this.oldValue= oldValue\r\n        this.doCallback = doCallback\r\n        this.undoCallback = undoCallback\r\n        this.newValue = newValue\r\n    }\r\n\r\n    doTransaction = () => {\r\n        if (this.oldValue !== undefined) this.doCallback(this.oldValue)\r\n        else this.doCallback()\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        if (this.newValue !== undefined) this.undoCallback(this.newValue)\r\n        else this.undoCallback()\r\n    }\r\n}","import React from 'react'\r\nimport { Button } from \"react-bootstrap\";\r\nimport Dialog from '../../tools/Dialog'\r\nimport { connect } from 'react-redux';\r\nimport { Query } from 'react-apollo';\r\nimport QueryList from '../../../graphql/Query';\r\nimport Searchbar from \"../../tools/Searchbar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Pagination from \"../../tools/Pagination\";\r\nimport TilesetList from \"./TilesetList\";\r\nimport * as handler from \"../../../store/database/WorkScreenHandler\";\r\nimport TilesetTransaction from \"../../controller/TilesetTransaction\";\r\nclass SelectTilesetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n            search: '',\r\n            sortBy: 'lastUpdate',\r\n            lastUpdate: -1,\r\n            name: -1,\r\n        }\r\n        this.selectedTilesets =[];\r\n    }\r\n\r\n    handleSearchChange = (e) => {\r\n        this.setState({ search: e.target.value });\r\n    };\r\n\r\n    handleSortBy = (e, type) => {\r\n        this.setState({ sortBy: type })\r\n    };\r\n\r\n    handleSortOrder = (e, type) => {\r\n        const order = this.state[type];\r\n        this.setState({ [type]: order === 1 ? -1 : 1 })\r\n    };\r\n    handlePagination = (e, value) => {\r\n        this.setState({ page: value })\r\n    };\r\n\r\n    getSelected = (type) => {\r\n        const { sortBy } = this.state;\r\n        return sortBy === type ? 'tileset-sort-btn-selected' : ''\r\n    };\r\n\r\n    getSortOrder = (type) => {\r\n        return this.state[type] === -1 ? 'fa-arrow-down' : 'fa-arrow-up'\r\n    };\r\n\r\n    handleCheckboxClick = (item, e) => {\r\n        const {target} = e;\r\n        const checked = target.checked;\r\n        if (checked)\r\n            this.selectedTilesets.push(item);\r\n        else\r\n            this.selectedTilesets = this.selectedTilesets.filter((i) => i._id !== item._id);\r\n        this.forceUpdate()\r\n    };\r\n\r\n    handleSubmitButton = () => {\r\n        let oldTilesets = JSON.parse(JSON.stringify(this.props.tilesets));\r\n        let newTilesets = oldTilesets.concat(this.selectedTilesets);\r\n        this.selectedTilesets=[];\r\n        this.props.transactions.addTransaction(\r\n            new TilesetTransaction(newTilesets, oldTilesets, this.props.handleUpdateTilesets, this.props.restoreTileset)\r\n        )\r\n        this.props.close();\r\n    };\r\n\r\n    render() {\r\n        const { open, close, user, history } = this.props;\r\n        const { page, search, sortBy } = this.state;\r\n        const query = QueryList.GET_PUBLISHED_TILESETS;\r\n        const pageSkip = (page - 1) * 6;\r\n        const sortOrder = this.state[sortBy];\r\n        const tilesetIds = [...new Set(this.props.tilesets.map((tileset) => tileset._id ))];\r\n        const disabled = this.selectedTilesets.length === 0;\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    header='Select Your Tilesets'\r\n                    open={open}\r\n                    fullWidth={true}\r\n                    maxWidth=\"lg\"\r\n                    actions={[\r\n                        <Button variant=\"primary\" size=\"sm\"  key='1' disabled={disabled} onClick={this.handleSubmitButton}>Confirm</Button>,\r\n                        <Button variant=\"primary\" size=\"sm\" key='2' onClick={close}>Cancel</Button>\r\n                    ]}\r\n                    content={\r\n                        <>\r\n                            <Searchbar value={search} onChange={this.handleSearchChange} />\r\n                            <div className=\"tileset-sort-btn-group\">\r\n                                <button className={\"tileset-sort-btn \" + this.getSelected('name')} onClick={e => this.handleSortBy(e, 'name')}>Name </button>\r\n                                <i className={\"fa tileset-sort-icon \" + this.getSortOrder('name')} onClick={e => this.handleSortOrder(e, 'name')} />\r\n                                <button className={\"tileset-sort-btn \" + this.getSelected('lastUpdate')} onClick={e => this.handleSortBy(e, 'lastUpdate')}>Last Modified </button>\r\n                                <i className={\"fa tileset-sort-icon \" + this.getSortOrder('lastUpdate')} onClick={e => this.handleSortOrder(e, 'lastUpdate')} />\r\n                            </div>\r\n                            <Query query={query} variables={{ userId: user._id, pageSkip: pageSkip, search: search, sortBy: sortBy, sortOrder: sortOrder }} fetchPolicy={\"no-cache\"}>\r\n                                {({ loading, error, data }) => {\r\n                                    if (loading)\r\n                                        return <CircularProgress className=\"tileset-loading\" size={220}/>;\r\n                                    if (error) return 'error';\r\n                                    if (query === QueryList.EMPTY_QUERY)\r\n                                        return;\r\n                                    if (!data) return 'error';\r\n                                    let items = data.user.publishedTilesets;\r\n                                    items = items.filter((item) => {\r\n                                        for(let i = 0; i < tilesetIds.length; i++) {\r\n                                            if (tilesetIds[i] === item._id)\r\n                                                return false;\r\n                                        }\r\n                                        return true;\r\n                                    });\r\n                                    let amount = items.length;\r\n\r\n                                    const pageAmount = amount % 6 === 0 ? amount / 6 : Math.floor(amount / 6) + 1;\r\n                                    return(\r\n                                        <div className=\"tileset-container\">\r\n                                            <TilesetList\r\n                                                items={items}\r\n                                                history={history}\r\n                                                handleCheckboxClick={this.handleCheckboxClick}\r\n                                            />\r\n                                            <Pagination\r\n                                                className=\"tileset-pagination center\"\r\n                                                size=\"large\"\r\n                                                color=\"secondary\"\r\n                                                count={pageAmount}\r\n                                                handlePagination={this.handlePagination}\r\n                                                defaultPage={page}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                }\r\n                            </Query>\r\n                        </>\r\n                    }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { user } = state.auth;\r\n    return { user };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleUpdateTilesets: (tilesets) => dispatch(handler.updateTilesetsHandler(tilesets)),\r\n    restoreTileset: (tilesets) => dispatch(handler.restoreTileset(tilesets)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTilesetDialog);","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport { connect } from 'react-redux';\r\nimport Titlebar from '../../tools/Titlebar'\r\nimport Collapsible from '../../tools/Collapsible'\r\nimport TilesetDisplay from './TilesetDisplay'\r\nimport SelectTilesetDialog from \"./SelectTilesetDialog\";\r\nimport TOOLS from '../../tools/ToolbarTools'\r\nimport TilesetTransaction from '../../controller/TilesetTransaction';\r\n\r\n\r\nclass TilesetWindow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let loaded = []\r\n        for (let i = 0; i < this.props.tilesets.length; i++)\r\n            loaded.push(false)\r\n\r\n        this.state = {\r\n            resizing: false,\r\n            loaded: loaded,\r\n            selectTilesetDialogOpen: false,\r\n            selectedTool: '',\r\n        }\r\n    }\r\n\r\n    handleZoomIn = () => {\r\n        this.setState({ selectedTool: this.state.selectedTool === TOOLS.ZOOM_IN ? '' : TOOLS.ZOOM_IN })\r\n    }\r\n\r\n    handleZoomOut = () => {\r\n        this.setState({ selectedTool: this.state.selectedTool === TOOLS.ZOOM_OUT ? '' : TOOLS.ZOOM_OUT })\r\n    }\r\n\r\n    handleUnselectZoom = () => {\r\n        this.setState({ selectedTool: '' })\r\n    }\r\n\r\n    handleOpenSelectTilesetDialog = () => {\r\n        this.setState({ selectTilesetDialogOpen: true });\r\n    };\r\n\r\n    handleCloseSelectTilesetDialog = () => {\r\n        this.setState({ selectTilesetDialogOpen: false });\r\n    };\r\n\r\n    tileMap = React.createRef()\r\n\r\n    handleTilesetLoaded = (index) => {\r\n        let loaded = [...this.state.loaded]\r\n        loaded[index] = true\r\n        this.setState({ loaded }, () => {\r\n            this.handleCheckAllTilesetLoaded()\r\n        })\r\n    }\r\n\r\n    handleCheckAllTilesetLoaded = () => {\r\n        const { loaded } = this.state\r\n        let allLoaded = true\r\n        loaded.forEach(e => {\r\n            if (!e) {\r\n                allLoaded = false\r\n            }\r\n        })\r\n        if (allLoaded)\r\n            this.props.handleTilesetLoaded()\r\n    }\r\n\r\n    handleSelect = () => {\r\n        this.props.handleUnselect()\r\n        this.props.handleToTop('tileset');\r\n    }\r\n\r\n\r\n    handleOnResize = (e, direction, ref, delta, position) => {\r\n        this.setState({ resizing: true }, () => {\r\n            this.props.handleOnResize(ref, position, 'tileset')\r\n        })\r\n    }\r\n\r\n    handleStopResize = (e, direction, ref, delta, position) => {\r\n        this.setState({ resizing: false }, () => {\r\n            this.props.handleOnResize(ref, 'tileset')\r\n        })\r\n    }\r\n\r\n    handleOnDeleteTileset = () => {\r\n        let { tilesets, selectedItem } = this.props;\r\n        if (selectedItem === null)\r\n            return;\r\n        this.props.transactions.addTransaction(\r\n            new TilesetTransaction(selectedItem._id, tilesets, this.props.handleDeleteTileset, this.props.restoreTileset)\r\n        )\r\n\r\n    };\r\n\r\n    updateFirstgid(tilesets) {\r\n        if (tilesets && tilesets[0]) {\r\n            tilesets[0].firstgid = 1;\r\n            for (let i = 1; i < tilesets.length; i++) {\r\n                const { firstgid, tilecount } = tilesets[i - 1];\r\n                tilesets[i].firstgid = firstgid + tilecount;\r\n            }\r\n        }\r\n        return tilesets;\r\n    }\r\n\r\n    getCollapsibleList = () => {\r\n        let { dimension, tilesets, transactions } = this.props;\r\n        tilesets = this.updateFirstgid(tilesets);\r\n        const { selectedTool } = this.state;\r\n        const { width, height } = dimension.size;\r\n        const CollapsibleHeight = height - 86 - 24 * tilesets.length;\r\n        const style = {\r\n            maxWidth: width,\r\n            maxHeight: CollapsibleHeight,\r\n        }\r\n        let li = []\r\n        for (let i = 0; i < tilesets.length; i++) {\r\n            li.push({\r\n                type: \"tileset\",\r\n                title: tilesets[i].name,\r\n                item: tilesets[i],\r\n                content: <TilesetDisplay\r\n                    handleTilesetLoaded={() => this.handleTilesetLoaded(i)}\r\n                    tilesetIdApplier={(id) => this.props.tilesetIdApplier(id, i)}\r\n                    index={i}\r\n                    style={style}\r\n                    width={width}\r\n                    tileset={tilesets[i]}\r\n                    height={CollapsibleHeight}\r\n                    window=\"tileset\"\r\n                    childRef={ref => this.tileMap = ref}\r\n                    selectedTool={selectedTool}\r\n                    transactions={transactions} />,\r\n                open: i === 0\r\n            })\r\n        }\r\n        return li\r\n    };\r\n\r\n    handleOnClick = e => {\r\n        this.props.passSelectedTileset(null);\r\n        if (e.target !== this.refs.zoom_in_btn && e.target !== this.refs.zoom_out_btn)\r\n            this.handleUnselectZoom()\r\n    }\r\n\r\n\r\n    render() {\r\n        const { resizing, selectTilesetDialogOpen, selectedTool } = this.state;\r\n        const { open, dimension, tilesets, history, selectedItem } = this.props\r\n        const { width, height } = dimension.size;\r\n        const CollapsibleHeight = height - (110 - 24 * tilesets.length);\r\n        const style = {\r\n            maxWidth: width,\r\n            maxHeight: CollapsibleHeight,\r\n        };\r\n        return (\r\n            <>\r\n                <Rnd\r\n                    className={\"workscreen-window \" + (open ? '' : 'invisible')}\r\n                    position={dimension.position}\r\n                    size={dimension.size}\r\n                    onMouseDown={this.handleSelect}\r\n                    onResizeStart={() => this.props.handleToTop('tileset')}\r\n                    onResize={this.handleOnResize}\r\n                    onResizeStop={this.handleStopResize}\r\n                    onClick={this.handleOnClick}\r\n                    id='tileset'\r\n                    onDragStop={(e, d) => this.props.handleOnDragStop(e, d, 'tileset')}\r\n                    style={{ zIndex: dimension.zIndex }}\r\n                >\r\n                    <Titlebar title=\"Tileset Window\" handleClose={this.props.handleClose.bind(this, 'tilesetOpen')} handleResetWindow={this.props.handleResetWindow} handleMaxWindow={this.props.handleMaxWindow} />\r\n\r\n                    <Collapsible data={\r\n                        this.getCollapsibleList()\r\n                    }\r\n                        maxHeight={style.maxHeight}\r\n                        resizing={resizing}\r\n                    />\r\n\r\n                    <i className=\"fas fa-plus tileset-add-btn better-btn \" onMouseDown={e => e.stopPropagation()} onClick={this.handleOpenSelectTilesetDialog} />\r\n                    <i ref='zoom_in_btn' className={\"fas fa-search-plus tileset-zoomin-btn better-btn \" + (selectedTool === TOOLS.ZOOM_IN ? 'tool-selected' : '')} onMouseDown={e => e.stopPropagation()} onClick={this.handleZoomIn} />\r\n                    <i ref='zoom_out_btn' className={\"fas fa-search-minus tileset-zoomout-btn better-btn \" + (selectedTool === TOOLS.ZOOM_OUT ? 'tool-selected' : '')} onMouseDown={e => e.stopPropagation()} onClick={this.handleZoomOut} />\r\n                    <i className={\"fas fa-trash-alt tileset-delete-icon better-btn \" + (selectedItem ? \"\" : \"btn-disabled\")} onClick={this.handleOnDeleteTileset} onMouseDown={e => e.stopPropagation()} />\r\n\r\n                </Rnd>\r\n\r\n                <SelectTilesetDialog\r\n                    open={selectTilesetDialogOpen}\r\n                    close={this.handleCloseSelectTilesetDialog}\r\n                    history={history}\r\n                    tilesets={tilesets}\r\n                    transactions={this.props.transactions}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { tilesets, selectedItem } = state.tileset;\r\n\r\n    return {\r\n        tilesets,\r\n        selectedItem\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleUnselect: () => dispatch(handler.unselectTilesetHandler()),\r\n    handleTilesetLoaded: () => dispatch(handler.handleTilesetLoaded()),\r\n    tilesetIdApplier: (id, index) => dispatch(handler.tilesetIdApplier(id, index)),\r\n    handleUpdateTilesets: (tilesets) => dispatch(handler.updateTilesetsHandler(tilesets)),\r\n    handleDeleteTileset: (id) => dispatch(handler.deleteTilesetHandler(id)),\r\n    restoreTileset: (tilesets) => dispatch(handler.restoreTileset(tilesets)),\r\n    passSelectedTileset: (selectedItem) => dispatch(handler.passSelectedTileset(selectedItem)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TilesetWindow)\r\n","import React from 'react';\r\nimport './tools.css'\r\nimport { connect } from 'react-redux';\r\nimport * as handler from '../../store/database/WorkScreenHandler';\r\n\r\nclass Toolbar extends React.Component {\r\n\r\n    stopPropagation = e => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    handleSelect = (item, e) => {\r\n        e.stopPropagation();\r\n\r\n        if (item.disable === true) return\r\n\r\n        if (this.props.selectCallback) {\r\n            this.props.selectCallback()\r\n        }\r\n\r\n        this.props.handleUnselect();\r\n\r\n        const { selected } = this.props\r\n        if (selected !== item.name)\r\n            this.props.handleSelect(item.name);\r\n    }\r\n\r\n    handleClick = e => {\r\n        let { target } = e\r\n        if (target.childElementCount === 1)\r\n            target.firstChild.click()\r\n        else {\r\n            target = target.parentNode\r\n            setTimeout(() => {\r\n                target.classList.remove('toolbar-cell-clicked')\r\n            }, 150);\r\n        }\r\n    }\r\n\r\n    handleMouseDown = e => {\r\n        e.stopPropagation()\r\n        let { target } = e\r\n        if (target.childElementCount === 0)\r\n            target = target.parentNode\r\n        target.classList.add('toolbar-cell-clicked')\r\n    }\r\n\r\n    getSelected = (item) => {\r\n\r\n        if (item.disable === true)\r\n            return 'toolbar-cell-disable'\r\n        const { selected } = this.props;\r\n        return selected === item.name ? \"map-tool-selected\" : \"\";\r\n    }\r\n\r\n    render() {\r\n        const { content, secondaryContent, rightContent, className } = this.props;\r\n        return (\r\n            <div className={className}>\r\n                {\r\n                    content && content.map((c, i) => {\r\n                        return (\r\n                            <div className={\"toolbar-cell \" + this.getSelected(c)} key={i} onMouseDown={this.handleMouseDown} onClick={this.handleClick}>\r\n                                {c.item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className='toolbar-sec-cellbox'>\r\n                    {\r\n                        secondaryContent && secondaryContent.map((c, i) => {\r\n                            const style = { left: i * 40 }\r\n                            return (\r\n                                <div className={\"toolbar-cell \" + this.getSelected(c)} key={i} onMouseDown={e => e.stopPropagation()} style={style} onClick={this.handleSelect.bind(this, c)}>\r\n                                    {c.item}\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                {\r\n                    rightContent && rightContent.map((c, i) => {\r\n                        return (\r\n                            <div className={\"toolbar-right-cell \" + this.getSelected(c)} key={i} onMouseDown={this.stopPropagation} onClick={this.handleSelect.bind(this, c)}>\r\n                                {c.item}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { selected } = state.toolbar\r\n    return { selected }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleSelect: (name) => dispatch(handler.toolbarSelectHandler(name)),\r\n    handleUnselect: () => dispatch(handler.toolbarUnselectHandler(window))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\r\n\r\n","import React from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport { connect } from 'react-redux';\r\nimport Titlebar from '../../tools/Titlebar'\r\nimport * as handler from '../../../store/database/WorkScreenHandler';\r\nimport Toolbar from '../../tools/Toolbar'\r\nimport MapDisplay from './MapDisplay'\r\nimport TOOLS from '../../tools/ToolbarTools'\r\n\r\n\r\nclass MapWindow extends React.Component {\r\n\r\n    state = {\r\n        resizing: false\r\n    }\r\n\r\n    tileMap = React.createRef()\r\n\r\n    handleOnResize = (e, direction, ref, delta, position) => {\r\n        this.setState({ resizing: true }, () => {\r\n            this.props.handleOnResize(ref, position, 'map')\r\n        })\r\n    }\r\n\r\n    handleOnResizeStop = (e, direction, ref, delta, position) => {\r\n        this.setState({ resizing: false }, () => {\r\n            this.props.handleOnResize(ref, position, 'map')\r\n        })\r\n    }\r\n\r\n    doTransaction = e => {\r\n        this.props.transactions.doTransaction()\r\n    }\r\n\r\n    undoTransaction = e => {\r\n        this.props.transactions.undoTransaction()\r\n    }\r\n\r\n    render() {\r\n        const { resizing } = this.state\r\n        const { dimension, selectedTool, transactions, open } = this.props\r\n        const { width, height } = dimension.size\r\n        const style = {\r\n            maxWidth: width,\r\n            maxHeight: height - 90,\r\n            marginTop: '20px'\r\n        }\r\n        return (\r\n            <>\r\n                {open ? <Rnd\r\n                    className=\"workscreen-window \"\r\n                    id=\"map\"\r\n                    size={dimension.size}\r\n                    position={dimension.position}\r\n                    onMouseDown={() => { this.props.handleToTop('map') }}\r\n                    onClick={this.props.handleUnselect}\r\n                    onResizeStart={() => this.props.handleToTop('map')}\r\n                    onResize={this.handleOnResize}\r\n                    onResizeStop={this.handleOnResizeStop}\r\n                    onDragStop={(e, d) => this.props.handleOnDragStop(e, d, 'map')}\r\n                    style={{ zIndex: dimension.zIndex }}\r\n                >\r\n                    <Titlebar title=\"Map Window\" handleClose={this.props.handleClose.bind(this, 'mapOpen')} handleResetWindow={this.props.handleResetWindow} handleMaxWindow={this.props.handleMaxWindow} />\r\n                    <Toolbar\r\n                        className=\"map-toolbar\"\r\n                        selected={selectedTool}\r\n                        content={[\r\n                            { name: TOOLS.UNDO, item: <i className={\"fas fa-undo\"} style={{ fontSize: '24px' }} onClick={this.undoTransaction} /> },\r\n                            { name: TOOLS.REDO, item: <i className={\"fas fa-redo\"} style={{ fontSize: '24px' }} onClick={this.doTransaction} /> },\r\n                            { name: TOOLS.DOWNLOAD, item: <i className={\"fas fa-download\"} style={{ fontSize: '24px' }} onClick={this.props.handleExport} /> },\r\n                            { name: TOOLS.SAVE, item: <i className={\"fas fa-save\"} style={{ fontSize: '24px' }} onClick={this.props.handleSave} /> },\r\n                            // { name: TOOLS.EXPORT_JSON, item: <i className={\"fas fa-box\"} style={{ fontSize: '24px' }} onClick={this.handleExportJson} /> },\r\n                        ]}\r\n                        secondaryContent={[\r\n                            { name: TOOLS.STAMP, item: <i className={\"fas fa-stamp\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.ERASER, item: <i className={\"fas fa-eraser\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.FILL, item: <i className={\"fas fa-fill\"} style={{ fontSize: '24px' }} onClick={() => this.props.handleTest()} /> },\r\n                        ]}\r\n                        rightContent={[\r\n                            { name: TOOLS.ZOOM_OUT, item: <i className={\"fas fa-search-minus\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.ZOOM_IN, item: <i className={\"fas fa-search-plus\"} style={{ fontSize: '24px' }} /> },\r\n                        ]}\r\n                    />\r\n                    <MapDisplay style={style} width={width} height={height - 70} window=\"map\" resizing={resizing} transactions={transactions} />\r\n                </Rnd> : null\r\n                }\r\n            </>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleTest: () => dispatch({ type: \"test\", test: \"hi\" }),\r\n    handleUnselect: () => dispatch(handler.toolbarUnselectHandler()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapWindow)\r\n","export default class JSTPS {\r\n    constructor() {\r\n        this.transactions = [];\r\n        this.mostRecentTransaction = -1;\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    isPerformingDo = () => {\r\n        return this.performingDo;\r\n    }\r\n\r\n    isPerformingUndo = () => {\r\n        return this.performingUndo;\r\n    }\r\n\r\n    addTransaction = (transaction) => {\r\n        if ((this.mostRecentTransaction < 0) || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n            for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                this.transactions.splice(i, 1);\r\n            }\r\n\r\n        }\r\n        this.transactions.push(transaction);\r\n        this.doTransaction();\r\n    }\r\n\r\n    doTransaction = () => {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction + 1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    peekDo = () => {\r\n        if (this.hasTransactionToUndo()) {\r\n            return this.transactions[this.mostRecentTransaction + 1];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    peekUndo = () => {\r\n        if (this.hasTransactionToUndo()) {\r\n            return this.transactions[this.mostRecentTransaction];\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    clearAllTransactions = () => {\r\n        this.transactions = [];\r\n        this.mostRecentTransaction = -1;\r\n    }\r\n\r\n    getSize = () => {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    getRedoSize = () => {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    getUndoSize = () => {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    hasTransactionToUndo = () => {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    hasTransactionToRedo = () => {\r\n        return this.mostRecentTransaction < (this.transactions.length - 1);\r\n    }\r\n\r\n    toString = () => {\r\n        let text = \"--Number of Transactions: \" + this.transactions.length + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + '\\n';\r\n        }\r\n\r\n        return text;\r\n    }\r\n}","import Dialog from '../tools/Dialog'\r\nimport React from 'react'\r\nimport { Button } from \"react-bootstrap\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass SaveDialog extends React.Component {\r\n\r\n    render() {\r\n        const { open, parent, saving, savemsg, saveConfirmed } = this.props\r\n        return (\r\n            <Dialog\r\n                header=\"Save Project\"\r\n                open={open}\r\n                actions={[\r\n                    <Button key='1' disabled={saving} onClick={parent.handleSave}>Confirm</Button>,\r\n                    <Button key='2' onClick={parent.handleSaveDialogClose}>Cancel</Button>\r\n                ]}\r\n                content={[\r\n                    <h3 key='e'>Are You Sure to Save Project</h3>,\r\n                    (saveConfirmed === false && saving) ? <CircularProgress key='w' className=\"wait-saving\" /> : null,\r\n                    <p key='q'>{savemsg}</p>,\r\n                ]} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default SaveDialog\r\n","import React from 'react';\r\nimport TopNavbar from '../tools/TopNavbar'\r\nimport PropertyWindow from './property/PropertyWindow'\r\nimport LayerWindow from './layer/LayerWindow'\r\nimport TilesetWindow from './tileset/TilesetWindow'\r\nimport MapWindow from './map/MapWindow'\r\nimport './workscreen.css'\r\nimport { connect } from 'react-redux';\r\nimport QueryList from '../../graphql/Query'\r\nimport { Query } from 'react-apollo'\r\nimport * as handler from '../../store/database/WorkScreenHandler'\r\nimport { compose } from 'redux';\r\nimport Transactions from '../controller/JSTPS'\r\nimport SaveDialog from './SaveDialog'\r\nimport html2canvas from 'html2canvas'\r\n\r\nclass WorkScreen extends React.Component {\r\n\r\n    state = {\r\n        propertyOpen: true,\r\n        layerOpen: true,\r\n        tilesetOpen: true,\r\n        mapOpen: true,\r\n        property: { size: { width: 0, height: 0 }, position: { x: 0, y: 0 }, zIndex: 1 },\r\n        map: { size: { width: 0, height: 0 }, position: { x: 0, y: 0 }, zIndex: 2 },\r\n        tileset: { size: { width: 0, height: 0 }, position: { x: 0, y: 0 }, zIndex: 3 },\r\n        layer: { size: { width: 0, height: 0 }, position: { x: 0, y: 0 }, zIndex: 4 },\r\n        saveDialogOpen: false,\r\n        saving: false,\r\n        saveConfirmed: false,\r\n        savemsg: ''\r\n    }\r\n\r\n    transactions = new Transactions()\r\n\r\n    handleToTop = (window) => {\r\n\r\n        const targetZIndex = this.state[window].zIndex\r\n        if (targetZIndex === 4) return\r\n        const { property, map, tileset, layer } = this.state\r\n        const propertyZIndex = property.zIndex === targetZIndex ? 4 : property.zIndex < targetZIndex ? property.zIndex : property.zIndex - 1;\r\n        const mapZIndex = map.zIndex === targetZIndex ? 4 : map.zIndex < targetZIndex ? map.zIndex : map.zIndex - 1;\r\n        const tilesetZIndex = tileset.zIndex === targetZIndex ? 4 : tileset.zIndex < targetZIndex ? tileset.zIndex : tileset.zIndex - 1;\r\n        const layerZIndex = layer.zIndex === targetZIndex ? 4 : layer.zIndex < targetZIndex ? layer.zIndex : layer.zIndex - 1;\r\n\r\n\r\n        this.setState({\r\n            property: {\r\n                ...property,\r\n                zIndex: propertyZIndex,\r\n            },\r\n            map: {\r\n                ...map,\r\n                zIndex: mapZIndex,\r\n            },\r\n            tileset: {\r\n                ...tileset,\r\n                zIndex: tilesetZIndex\r\n            },\r\n            layer: {\r\n                ...layer,\r\n                zIndex: layerZIndex\r\n            }\r\n        })\r\n    }\r\n\r\n    getScreen = () => {\r\n        const { propertyOpen, layerOpen, tilesetOpen, property, map, layer, tileset, mapOpen } = this.state;\r\n        const { history } = this.props\r\n        return (\r\n            <>\r\n                <MapWindow key=\"map\" open={mapOpen} handleToTop={this.handleToTop} dimension={map} handleOnDragStop={this.handleOnDragStop} handleOnResize={this.handleOnResize} transactions={this.transactions} handleSave={this.handleSaveDialogOpen} handleExport={this.handleExport} handleClose={this.handleClose} handleResetWindow={this.handleResetWindow.bind(this, 'map')} handleMaxWindow={this.handleMaxWindow.bind(this, 'map')} />\r\n                <PropertyWindow key=\"property\" open={propertyOpen} handleToTop={this.handleToTop} dimension={property} handleOnDragStop={this.handleOnDragStop} handleOnResize={this.handleOnResize} transactions={this.transactions} handleClose={this.handleClose} handleResetWindow={this.handleResetWindow.bind(this, 'property')} handleMaxWindow={this.handleMaxWindow.bind(this, 'property')} />\r\n                <LayerWindow key=\"layer\" open={layerOpen} handleToTop={this.handleToTop} dimension={layer} handleOnDragStop={this.handleOnDragStop} handleOnResize={this.handleOnResize} transactions={this.transactions} handleClose={this.handleClose} handleResetWindow={this.handleResetWindow.bind(this, 'layer')} handleMaxWindow={this.handleMaxWindow.bind(this, 'layer')} />\r\n                <TilesetWindow key=\"tileset\" open={tilesetOpen} dimension={tileset} history={history} handleToTop={this.handleToTop} handleOnDragStop={this.handleOnDragStop} handleOnResize={this.handleOnResize} transactions={this.transactions} handleClose={this.handleClose} handleResetWindow={this.handleResetWindow.bind(this, 'tileset')} handleMaxWindow={this.handleMaxWindow.bind(this, 'tileset')} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    handleWindowOpen = (e, window) => {\r\n        e.stopPropagation()\r\n        this.setState({ [window]: !this.state[window] })\r\n    }\r\n\r\n    handleOnDragStop = (e, d, type) => {\r\n        this.setState({ [type]: { ...this.state[type], position: { x: d.x, y: d.y } } })\r\n    }\r\n\r\n    doTransaction = () => {\r\n        this.transactions.doTransaction()\r\n    };\r\n\r\n    undoTransaction = () => {\r\n        this.transactions.undoTransaction()\r\n    };\r\n\r\n    handleOnResize = (ref, position, type) => {\r\n        this.setState({\r\n            [type]: {\r\n                ...this.state[type],\r\n                size: {\r\n                    width: parseInt(ref.style.width),\r\n                    height: parseInt(ref.style.height)\r\n                },\r\n                position: {\r\n                    x: parseInt(position.x),\r\n                    y: parseInt(position.y)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleFormatMapJson = () => {\r\n        const { layers, map, tilesets, custom } = this.props\r\n        let toReturn = {\r\n            ...map,\r\n            tiledversion: `1.3.2`,\r\n            compressionlevel: -1\r\n        }\r\n        delete toReturn._id\r\n        const layersToReturn = layers.map((e, index) => {\r\n            delete e.locked\r\n            e.id = index + 1\r\n            delete e._id\r\n            return e\r\n        })\r\n        toReturn.layers = layersToReturn\r\n        const tilesetsToReturn = tilesets.map(e => {\r\n            return {\r\n                name: e.name,\r\n                columns: e.columns,\r\n                tilewidth: e.tileWidth,\r\n                tileheight: e.tileHeight,\r\n                tilecount: e.tilecount,\r\n                margin: e.margin,\r\n                firstgid: e.firstgid,\r\n                image: `${e.name}.jpeg`,\r\n                imagewidth: e.width,\r\n                imageheight: e.height,\r\n                spacing: e.spacing,\r\n            }\r\n        })\r\n        toReturn.tilesets = tilesetsToReturn\r\n        toReturn.properties = custom\r\n        return toReturn\r\n\r\n    }\r\n\r\n    handleExport = () => {\r\n        const { project } = this.props\r\n        const data = this.handleFormatMapJson()\r\n        require(\"downloadjs\")(JSON.stringify(data).toLowerCase(), `${project.name}.json`, \"text/plain\");\r\n    }\r\n\r\n    handleSaveDialogOpen = () => {\r\n        this.setState({ saveDialogOpen: true })\r\n    }\r\n\r\n    handleSave = () => {\r\n        const { layers, map, tilesets, custom, project } = this.props\r\n        html2canvas(document.getElementById('map-display')).then(canvas => {\r\n            const imgData = canvas.toDataURL('image/jpeg', 1)\r\n            this.setState({ saving: true }, () => {\r\n                this.props.socket.emit('project-save', {\r\n                    layers, map, tilesets, custom, project, imgData\r\n                })\r\n            })\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleSaveDialogClose = () => {\r\n        this.setState({ saveDialogOpen: false, saving: false, saveConfirmed: false, savemsg: '' })\r\n    }\r\n\r\n\r\n    handleClose = (type) => {\r\n        this.setState({ [type]: false })\r\n    }\r\n\r\n    handleResetWindow = (window) => {\r\n        const { width, height } = document.body.getBoundingClientRect();\r\n        if (window === 'property') {\r\n            this.setState({\r\n                property: { ...this.state.property, size: { width: width * 0.2, height: height * 0.88 }, position: { x: 0, y: 0 } }\r\n            })\r\n        } else if (window === 'map') {\r\n            this.setState({\r\n                map: { ...this.state.map, size: { width: width * 0.6, height: height * 0.88 }, position: { x: width * 0.2, y: 0 } }\r\n            })\r\n        } else if (window === 'layer') {\r\n            this.setState({\r\n                layer: { ...this.state.layer, size: { width: width * 0.2, height: height * 0.32 }, position: { x: width * 0.8, y: 0 } }\r\n            })\r\n        } else if (window === 'tileset') {\r\n            this.setState({\r\n                tileset: { ...this.state.tileset, size: { width: width * 0.2, height: height * 0.56 }, position: { x: width * 0.8, y: height * 0.32 } }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleMaxWindow = window => {\r\n        const { width, height } = document.body.getBoundingClientRect();\r\n        console.log(window)\r\n        this.setState({\r\n            [window]: {\r\n                ...this.state[window],\r\n                size: { width: width, height: height * 0.88 },\r\n                position: { x: 0, y: 0 }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const { width, height } = document.body.getBoundingClientRect();\r\n\r\n        this.setState({\r\n            property: { size: { width: width * 0.2, height: height * 0.88 }, position: { x: 0, y: 0 }, zIndex: 1 },\r\n            map: { size: { width: width * 0.6, height: height * 0.88 }, position: { x: width * 0.2, y: 0 }, zIndex: 2 },\r\n            layer: { size: { width: width * 0.2, height: height * 0.32 }, position: { x: width * 0.8, y: 0 }, zIndex: 3 },\r\n            tileset: { size: { width: width * 0.2, height: height * 0.56 }, position: { x: width * 0.8, y: height * 0.32 }, zIndex: 4 },\r\n        })\r\n\r\n        window.onresize = () => {\r\n            const { width, height } = document.body.getBoundingClientRect();\r\n\r\n            this.setState({\r\n                property: { ...this.state.property, size: { width: width * 0.2, height: height * 0.88 }, position: { x: 0, y: 0 } },\r\n                map: { ...this.state.map, size: { width: width * 0.6, height: height * 0.88 }, position: { x: width * 0.2, y: 0 } },\r\n                layer: { ...this.state.layer, size: { width: width * 0.2, height: height * 0.32 }, position: { x: width * 0.8, y: 0 } },\r\n                tileset: { ...this.state.tileset, size: { width: width * 0.2, height: height * 0.56 }, position: { x: width * 0.8, y: height * 0.32 } },\r\n            })\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.socket.on('project-save-back', res => {\r\n            const { err, msg } = res\r\n            if (err) {\r\n                this.setState({ savemsg: msg, saving: false })\r\n            } else {\r\n                this.setState({ savemsg: msg, saveConfirmed: true, saving: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const { propertyOpen, layerOpen, tilesetOpen, mapOpen, saveDialogOpen, saving, savemsg, saveConfirmed } = this.state\r\n        const { history, loaded } = this.props\r\n        const { key } = this.props.match.params\r\n        return (\r\n            <>\r\n\r\n                <div onClick={this.handleUnselect}>\r\n                    <TopNavbar site='workspace'\r\n                        handleWindowOpen={this.handleWindowOpen}\r\n                        propertyOpen={propertyOpen}\r\n                        layerOpen={layerOpen}\r\n                        tilesetOpen={tilesetOpen}\r\n                        mapOpen={mapOpen}\r\n                        history={history}\r\n                        handleDoTransaction={this.doTransaction}\r\n                        handleUndoTransaction={this.undoTransaction}\r\n                        handleSave={this.handleSaveDialogOpen}\r\n                        handleExport={this.handleExport}\r\n                    />\r\n                    <div>\r\n                        {\r\n                            <Query query={QueryList.GET_PROJECT} variables={{ id: key }}>\r\n                                {(res) => {\r\n                                    if (res.loading) return 'loading'\r\n                                    if (res.error) return 'error'\r\n                                    if (!loaded) {\r\n                                        res.data.project.tilesetsInfo = res.data.project.tilesetsInfo.filter((e) => e !== null)\r\n                                        this.props.formatProjectPack(res.data.project)\r\n                                    }\r\n                                    return this.getScreen()\r\n                                }}\r\n                            </Query>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <SaveDialog\r\n                    open={saveDialogOpen}\r\n                    parent={this}\r\n                    saving={saving}\r\n                    savemsg={savemsg}\r\n                    saveConfirmed={saveConfirmed}\r\n                />\r\n            </>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { loaded } = state.project\r\n    return {\r\n        loaded,\r\n        layers: state.layer.layerList,\r\n        map: state.map.map,\r\n        tilesets: state.tileset.tilesets,\r\n        project: state.project,\r\n        socket: state.backend.socket,\r\n        custom: state.property.custom\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    formatProjectPack: (project) => dispatch(handler.formatProjectPack(project)),\r\n    handleUnselect: () => dispatch(handler.toolbarUnselectHandler()),\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(WorkScreen);","import reactCSS from 'reactcss'\r\nimport { SketchPicker } from 'react-color';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass ColorPicker extends Component {\r\n\r\n    state = {\r\n        displayColorPicker: false,\r\n        color: \"#c17de8\",\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    handleChange = (color) => {\r\n\r\n        this.setState({ color: color.hex })\r\n    };\r\n\r\n    render() {\r\n\r\n        const { color, onChange } = this.props\r\n\r\n        const styles = reactCSS({\r\n            'default': {\r\n                color: {\r\n                    width: '36px',\r\n                    height: '14px',\r\n                    borderRadius: '100%',\r\n                    background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n                },\r\n                swatch: {\r\n                    padding: '5px',\r\n                    background: '#fff',\r\n                    borderRadius: '100%',\r\n                    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                    display: 'inline-block',\r\n                    cursor: 'pointer',\r\n                },\r\n                popover: {\r\n                    position: 'absolute',\r\n                    zIndex: '2',\r\n                    right: \"1%\",\r\n                },\r\n                cover: {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                },\r\n            },\r\n        });\r\n\r\n        return (\r\n            <div className=\"color-btn\">\r\n                <div style={styles.swatch} onClick={this.handleClick}>\r\n                    <div style={styles.color} />\r\n                </div>\r\n                {this.state.displayColorPicker ? <div style={styles.popover}>\r\n                    <div style={styles.cover} onClick={this.handleClose} />\r\n                    <SketchPicker\r\n                        color={color}\r\n                        onChange={onChange}\r\n                        className=\"left\"\r\n                    />\r\n                </div> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorPicker;\r\n\r\n","import React from 'react'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ColorPicker from './ColorPicker'\r\n\r\nclass PropertyBar extends React.Component {\r\n\r\n    render() {\r\n        const { sliderValue, sliderOnChange, borderColor, borderColorOnChange, fillColor, fillColorOnChange } = this.props\r\n        return (\r\n            <div className=\"propertybar-wrapper\">\r\n                <div className='property-box'>\r\n                    <div className=\"property-title\">Border Thickness:</div>\r\n                    <div className='ranger'>\r\n                        <Slider\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks\r\n                            value={sliderValue}\r\n                            onChange={sliderOnChange}\r\n                            min={1}\r\n                            max={20}\r\n                            onMouseDown={e => e.stopPropagation()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='property-box'>\r\n                    <div className=\"property-title\">Border Color:</div>\r\n                    <ColorPicker color={borderColor} onChange={borderColorOnChange} />\r\n                </div>\r\n                <div className='property-box'>\r\n                    <div className=\"property-title\">Fill Color:</div>\r\n                    <ColorPicker color={fillColor} onChange={fillColorOnChange} />\r\n                </div>\r\n                <div className='property-box'>\r\n                    <div className=\"property-title\">Flip</div>\r\n                    <div className=\"property-flip-btn\" onClick={this.props.handleHorizontalFlip}>Horizontally</div>\r\n                    <div className=\"property-flip-btn\" onClick={this.props.handleVerticalFlip}>Vertically</div>\r\n                </div>\r\n                <div className='property-box'>\r\n                    <div className=\"property-center\" onClick={this.props.handleClear}>Clear</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PropertyBar","class CanvasController {\r\n    constructor(view) {\r\n        this.tool = null\r\n        this.fillStyle = ''\r\n        this.drawing = false\r\n        this.view = view\r\n        this.ctx = view.ctx\r\n    }\r\n\r\n    setDimension = (width, height) => {\r\n        this.width = width\r\n        this.height = height\r\n    }\r\n\r\n\r\n    initDraw = (tool, lineWidth, fillStyle, strokeStyle) => {\r\n        this.tool = tool\r\n        this.ctx.lineWidth = lineWidth\r\n        this.ctx.fillStyle = `rgba(${fillStyle.r}, ${fillStyle.g}, ${fillStyle.b}, ${fillStyle.a})`\r\n        this.ctx.strokeStyle = `rgba(${strokeStyle.r}, ${strokeStyle.g}, ${strokeStyle.b}, ${strokeStyle.a})`\r\n    }\r\n\r\n    startDraw = (x, y) => {\r\n\r\n        if (this[this.tool] === undefined) return\r\n\r\n        this.drawing = true\r\n        this.oldImg = this.view.refs.canvas.toDataURL('image/jpeg', 1)\r\n        this[this.tool].startDraw(x, y)\r\n    }\r\n\r\n    onDraw = (x, y) => {\r\n        if (this[this.tool] === undefined) return\r\n        if (!this.drawing) return\r\n        this[this.tool].onDraw(x, y)\r\n    }\r\n\r\n    endDraw = (x, y) => {\r\n        if (this[this.tool] === undefined) return\r\n        if (!this.drawing && this.tool !== 'FILL') return\r\n        this[this.tool].endDraw(x, y)\r\n        this.drawing = false\r\n        this.startData = null\r\n\r\n        this.view.sendSocketNewOperation()\r\n        const newImg = this.ctx.canvas.toDataURL('image/jpeg', 1)\r\n        this.view.addNewTransaction(this.oldImg, newImg)\r\n        this.oldImg = null\r\n    }\r\n\r\n    PENCIL = {\r\n        startDraw: (x, y) => {\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(x, y)\r\n        },\r\n\r\n        onDraw: (x, y) => {\r\n            this.ctx.lineTo(x, y)\r\n            this.ctx.lineWidth = this.lineWidth\r\n            this.ctx.lineCap = 'round'\r\n            this.ctx.stroke()\r\n        },\r\n\r\n        endDraw: () => {\r\n            return\r\n        },\r\n    }\r\n\r\n    LINE = {\r\n        startDraw: (x, y) => {\r\n            this.startX = x\r\n            this.startY = y\r\n            this.startData = this.ctx.getImageData(0, 0, this.width, this.height);\r\n        },\r\n        onDraw: (x, y) => {\r\n            if (this.startX === null || this.startY === null) return\r\n            this.ctx.putImageData(this.startData, 0, 0);\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(this.startX, this.startY)\r\n            this.ctx.lineTo(x, y)\r\n            this.ctx.lineCap = 'round'\r\n            this.ctx.stroke()\r\n        },\r\n        endDraw: () => {\r\n            this.startX = null\r\n            this.startY = null\r\n        },\r\n    }\r\n\r\n    SQUARE = {\r\n        startDraw: (x, y) => {\r\n            this.startX = x\r\n            this.startY = y\r\n            this.startData = this.ctx.getImageData(0, 0, this.width, this.height);\r\n        },\r\n        onDraw: (x, y) => {\r\n            if (this.startX === null || this.startY === null) return\r\n\r\n            this.ctx.putImageData(this.startData, 0, 0);\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(this.startX, this.startY, x - this.startX, y - this.startY);\r\n            this.ctx.fill()\r\n            this.ctx.stroke();\r\n        },\r\n        endDraw: () => {\r\n            this.startX = null\r\n            this.startY = null\r\n        }\r\n    }\r\n\r\n    CIRCLE = {\r\n        startDraw: (x, y) => {\r\n            this.startX = x\r\n            this.startY = y\r\n            this.startData = this.ctx.getImageData(0, 0, this.width, this.height);\r\n        },\r\n        onDraw: (x, y) => {\r\n            if (this.startX === null || this.startY === null) return\r\n            this.ctx.putImageData(this.startData, 0, 0);\r\n            const centerX = (x + this.startX) / 2\r\n            const centerY = (y + this.startY) / 2\r\n            const radiusX = Math.abs(x - this.startX) / 2\r\n            const radiusY = Math.abs(y - this.startY) / 2\r\n            this.ctx.beginPath();\r\n            this.ctx.ellipse(centerX, centerY, radiusX, radiusY, 0, 0, 2 * Math.PI)\r\n            this.ctx.fill()\r\n            this.ctx.stroke();\r\n        },\r\n        endDraw: () => {\r\n            this.startX = null\r\n            this.startY = null\r\n        }\r\n    }\r\n\r\n    ERASER = {\r\n        startDraw: (x, y) => {\r\n            this.ctx.save()\r\n            this.ctx.strokeStyle = 'rgba(211,211,211,1)'\r\n            this.ctx.beginPath()\r\n        },\r\n\r\n        onDraw: (x, y) => {\r\n            const left = x - (this.ctx.lineWidth / 2)\r\n            const top = y - (this.ctx.lineWidth / 2)\r\n            this.ctx.rect(left, top, this.ctx.lineWidth, this.ctx.lineWidth);\r\n            this.ctx.fill()\r\n            this.ctx.stroke();\r\n        },\r\n\r\n        endDraw: () => {\r\n            this.ctx.restore()\r\n        },\r\n    }\r\n\r\n    FILL = {\r\n        endDraw: (x, y) => {\r\n            this.view.GridController.fillGridFromMouseXY(x, y)\r\n        }\r\n    }\r\n\r\n    CROP = {\r\n        startDraw: (x, y) => {\r\n            this.ctx.save()\r\n            this.ctx.lineWidth = 1\r\n            this.ctx.fillStyle = `rgba(0,0,0,0)`\r\n            this.ctx.strokeStyle = `rgba({0,0,0,1})`\r\n\r\n            this.startX = x\r\n            this.startY = y\r\n            this.startData = this.ctx.getImageData(0, 0, this.width, this.height)\r\n        },\r\n\r\n        onDraw: (x, y) => {\r\n            if (this.startX === null || this.startY === null) return\r\n            this.ctx.putImageData(this.startData, 0, 0)\r\n            this.ctx.beginPath();\r\n            this.ctx.setLineDash([6])\r\n            this.ctx.strokeRect(this.startX, this.startY, x - this.startX, y - this.startY)\r\n        },\r\n\r\n        endDraw: () => {\r\n            this.ctx.putImageData(this.startData, 0, 0)\r\n            this.ctx.restore()\r\n        }\r\n    }\r\n}\r\nexport default CanvasController\r\n","export default class DrawTransaction {\r\n\r\n    constructor(old_value, new_value, callback) {\r\n        this.old_value = old_value\r\n        this.new_value = new_value\r\n        this.callback = callback\r\n    }\r\n\r\n    doTransaction = () => {\r\n        this.callback(this.new_value)\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        this.callback(this.old_value)\r\n    }\r\n}","\r\nexport default class DrawGridController {\r\n    constructor(ctx, visialWidth, visialHeight, tileWidth, tileHeight) {\r\n        this.ctx = ctx\r\n        this.visialWidth = visialWidth\r\n        this.visialHeight = visialHeight\r\n        this.tileWidth = tileWidth\r\n        this.tileHeight = tileHeight\r\n        this.gridPositions = []\r\n        this.numColumn = 0\r\n        this.numRow = 0\r\n        this.gridColor = '#000000'\r\n        this.backgroundColor = 'rgba(211,211,211,1)'\r\n        this.gridThickness = 2\r\n        this.canvasWidth = 0\r\n        this.canvasHeight = 0\r\n        this.buildModel()\r\n        this.setCanvasDimension()\r\n    }\r\n\r\n    getImageData = () => {\r\n        return this.ctx.getImageData(0, 0, this.canvasWidth, this.canvasHeight)\r\n    }\r\n\r\n    drawGrid = () => {\r\n        this.drawGridBackground()\r\n        this.drawGridBorder()\r\n    }\r\n\r\n    drawGridBorder = () => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.gridColor\r\n        for (let i = 0; i < this.numRow + 1; i++) {\r\n            const top = i * (this.gridThickness + this.tileHeight)\r\n            this.ctx.fillRect(0, top, this.canvasWidth, this.gridThickness)\r\n        }\r\n        for (let i = 0; i < this.numColumn + 1; i++) {\r\n            const left = i * (this.gridThickness + this.tileWidth)\r\n            this.ctx.fillRect(left, 0, this.gridThickness, this.canvasHeight)\r\n        }\r\n        this.ctx.restore()\r\n    }\r\n\r\n    drawCopiedGrid = (grids) => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = `rgba({0,0,0,1})`\r\n        this.ctx.strokeStyle = 'white'\r\n        this.ctx.lineWidth = 1\r\n\r\n        for (let i = 0; i < grids.length; i++) {\r\n            this.ctx.beginPath();\r\n            this.ctx.setLineDash([3])\r\n            this.ctx.strokeRect(grids[i].x - 1, grids[i].y - 1, this.tileWidth + 2, this.tileHeight + 2)\r\n        }\r\n        this.ctx.restore()\r\n\r\n    }\r\n\r\n    drawGridBackground = () => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.backgroundColor\r\n        this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight)\r\n        this.ctx.restore()\r\n    }\r\n\r\n    DrawGridsByRegion = (imgData, grids, startGrids) => {\r\n\r\n        for (let i = 0; i < grids.length; i++) {\r\n            this.ctx.putImageData(imgData, grids[i].dx, grids[i].dy, startGrids[i].x, startGrids[i].y, this.tileWidth, this.tileHeight)\r\n        }\r\n    }\r\n\r\n    clearGridsByRegion = (grids) => {\r\n        this.ctx.save()\r\n        this.ctx.fillStyle = this.backgroundColor\r\n        for (let i = 0; i < grids.length; i++) {\r\n            this.ctx.fillRect(grids[i].x, grids[i].y, this.tileWidth, this.tileHeight)\r\n        }\r\n        this.ctx.restore()\r\n        this.drawGridBorder()\r\n    }\r\n\r\n    setGridThickness = (gridThickness) => {\r\n        this.gridThickness = gridThickness\r\n    }\r\n\r\n    getGridThickness = () => {\r\n        return this.gridThickness\r\n    }\r\n\r\n    setGridColor = (gridColor) => {\r\n        this.gridColor = gridColor\r\n    }\r\n\r\n    getGridColor = () => {\r\n        return this.getGridColor\r\n    }\r\n\r\n    setBackgroundColor = (color) => {\r\n        this.backgroundColor = color\r\n    }\r\n\r\n    getBackGroundColor = () => {\r\n        return this.backgroundColor\r\n    }\r\n\r\n    buildModel = () => {\r\n        this.numColumn = Math.floor(this.visialWidth / this.tileWidth)\r\n        this.numRow = Math.floor(this.visialHeight / this.tileHeight)\r\n        for (let o = 0; o < this.numRow; o++)\r\n            for (let i = 0; i < this.numColumn; i++)\r\n                this.gridPositions.push({\r\n                    x: this.gridThickness + i * (this.tileWidth + this.gridThickness),\r\n                    y: this.gridThickness + o * (this.tileHeight + this.gridThickness),\r\n                    dx: this.gridThickness + i * (this.tileWidth + this.gridThickness) - i * this.tileWidth,\r\n                    dy: this.gridThickness + o * (this.tileHeight + this.gridThickness) - o * this.tileHeight,\r\n                    sx: i * this.tileWidth,\r\n                    sy: o * this.tileHeight\r\n                })\r\n    }\r\n\r\n    setCanvasDimension = () => {\r\n        this.canvasWidth = this.visialWidth + (this.numColumn + 1) * this.gridThickness\r\n        this.canvasHeight = this.visialHeight + (this.numRow + 1) * this.gridThickness\r\n    }\r\n\r\n    getCanvasDimension = () => {\r\n        return {\r\n            width: this.canvasWidth,\r\n            height: this.canvasHeight\r\n        }\r\n    }\r\n\r\n    getGridPositions = () => {\r\n        return this.gridPositions\r\n    }\r\n\r\n    mouseXYisInGrid = (mouseX, mouseY, gridLeft, gridTop) => {\r\n        if (\r\n            mouseX > gridLeft &&\r\n            mouseY > gridTop &&\r\n            mouseX < gridLeft + this.tileWidth &&\r\n            mouseY < gridTop + this.tileHeight\r\n        )\r\n            return true\r\n        return false\r\n    }\r\n\r\n    getGridIndexFromMouseXY = (x, y) => {\r\n        for (let o = 0; o < this.numRow; o++)\r\n            for (let i = 0; i < this.numColumn; i++) {\r\n                const gridLeft = this.gridThickness + i * (this.tileWidth + this.gridThickness)\r\n                const gridTop = this.gridThickness + o * (this.tileHeight + this.gridThickness)\r\n                if (this.mouseXYisInGrid(x, y, gridLeft, gridTop))\r\n                    return {\r\n                        x: i,\r\n                        y: o\r\n                    }\r\n            }\r\n\r\n        return null\r\n    }\r\n\r\n    getGridIndexFromPosition = (x, y) => {\r\n        return {\r\n            x: Math.floor((x - this.gridThickness) / (this.gridThickness + this.tileWidth)),\r\n            y: Math.floor((y - this.gridThickness) / (this.gridThickness + this.tileHeight))\r\n        }\r\n    }\r\n\r\n    getGridPositionFromIndex = (x, y) => {\r\n        return {\r\n            x: this.gridThickness + x * (this.tileWidth + this.gridThickness),\r\n            y: this.gridThickness + y * (this.tileHeight + this.gridThickness)\r\n        }\r\n    }\r\n\r\n    getGridPositionFromMouseXY = (x, y) => {\r\n        if (x > this.canvasWidth)\r\n            return this.getGridPositionFromIndex(this.canvasWidth - this.gridThickness - this.tileWidth, y)\r\n        if (y > this.canvasHeight)\r\n            return this.getGridPositionFromIndex(x, this.canvasHeight - this.gridThickness - this.tileHeight)\r\n        const gridIndex = this.getGridIndexFromMouseXY(x, y)\r\n        if (!gridIndex)\r\n            return this.getGridPositionFromMouseXY(x + this.gridThickness, y + this.gridThickness)\r\n        return this.getGridPositionFromIndex(gridIndex.x, gridIndex.y)\r\n    }\r\n\r\n    fillGridFromMouseXY = (x, y) => {\r\n        const gridPosition = this.getGridPositionFromMouseXY(x, y)\r\n        if (!gridPosition) return\r\n        this.ctx.fillRect(gridPosition.x, gridPosition.y, this.tileWidth, this.tileHeight)\r\n    }\r\n\r\n    getGridImageDataFromPosition = (x, y) => {\r\n        return this.ctx.getImageData(x, y, this.tileWidth, this.tileHeight)\r\n    }\r\n\r\n    putGridImageDataToPosition = (data, x, y) => {\r\n        this.ctx.putImageData(data, x, y)\r\n    }\r\n\r\n\r\n    getHorizontalSymetricalPosition = (x, y) => {\r\n        const gridIndex = this.getGridIndexFromPosition(x, y)\r\n        if (!gridIndex) return\r\n        const newGridIndex = {\r\n            x: this.numColumn - 1 - gridIndex.x,\r\n            y: gridIndex.y\r\n        }\r\n\r\n        return this.getGridPositionFromIndex(newGridIndex.x, newGridIndex.y)\r\n    }\r\n\r\n    getVerticalSymetricalPosition = (x, y) => {\r\n        const gridIndex = this.getGridIndexFromPosition(x, y)\r\n        if (!gridIndex) return\r\n        const newGridIndex = {\r\n            x: gridIndex.x,\r\n            y: this.numRow - 1 - gridIndex.y\r\n        }\r\n\r\n        return this.getGridPositionFromIndex(newGridIndex.x, newGridIndex.y)\r\n    }\r\n\r\n    getGridPositionsFromCropMouse = (cropDimension) => {\r\n\r\n        let startPosition = this.getGridPositionFromMouseXY(cropDimension.start.x, cropDimension.start.y)\r\n        let endPosition = this.getGridPositionFromMouseXY(cropDimension.end.x, cropDimension.end.y)\r\n\r\n        return this.getGridPositionsFromCropPositions(startPosition, endPosition)\r\n    }\r\n\r\n    getGridPositionsFromCropPositions = (startPosition, endPosition) => {\r\n        let positions = []\r\n        const minX = Math.min(startPosition.x, endPosition.x)\r\n        const minY = Math.min(startPosition.y, endPosition.y)\r\n        const maxX = Math.max(startPosition.x, endPosition.x)\r\n        const maxY = Math.max(startPosition.y, endPosition.y)\r\n        startPosition = { x: minX, y: minY }\r\n        endPosition = { x: maxX, y: maxY }\r\n\r\n        for (let i = 0; i < this.gridPositions.length; i++) {\r\n            if (\r\n                this.gridPositions[i].x > (startPosition.x - this.gridThickness - this.tileWidth) &&\r\n                this.gridPositions[i].x < (endPosition.x + this.gridThickness + this.tileWidth) &&\r\n                this.gridPositions[i].y > (startPosition.y - this.gridThickness - this.tileHeight) &&\r\n                this.gridPositions[i].y < (endPosition.y + this.gridThickness + this.tileHeight)\r\n            )\r\n                positions.push({\r\n                    x: this.gridPositions[i].x,\r\n                    y: this.gridPositions[i].y\r\n                })\r\n        }\r\n\r\n        return positions\r\n    }\r\n\r\n    getCropPositionFromGridPositions = (grids) => {\r\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity\r\n        for (let i = 0; i < grids.length; i++) {\r\n            if (grids[i].x < minX)\r\n                minX = grids[i].x\r\n            if (grids[i].x > maxX)\r\n                maxX = grids[i].x\r\n            if (grids[i].y < minY)\r\n                minY = grids[i].y\r\n            if (grids[i].y > maxY)\r\n                maxY = grids[i].y\r\n        }\r\n        return {\r\n            left: minX, top: minY,\r\n            leftMax: maxX, topMax: maxY,\r\n            width: maxX + this.tileWidth - minX,\r\n            height: maxY + this.tileHeight - minY\r\n        }\r\n    }\r\n\r\n    mouseXYisInGrids = (x, y, grids) => {\r\n        for (let i = 0; i < grids.length; i++) {\r\n            if (\r\n                x > grids[i].x &&\r\n                y > grids[i].y &&\r\n                x < grids[i].x + this.tileWidth &&\r\n                y < grids[i].y + this.tileHeight\r\n            )\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    handleShiftSelectedGrids = (dx, dy, grids) => {\r\n        for (let i = 0; i < grids.length; i++) {\r\n            grids[i].x += dx\r\n            grids[i].y += dy\r\n        }\r\n    }\r\n\r\n    handleShift2Grids = (x, y, grids, grid) => {\r\n        const gridPosition = this.getGridPositionFromMouseXY(x, y)\r\n        const dx = gridPosition.x - grid.x\r\n        const dy = gridPosition.y - grid.y\r\n        for (let i = 0; i < grids.length; i++) {\r\n            grids[i].x += dx\r\n            grids[i].y += dy\r\n        }\r\n    }\r\n\r\n    getGridsPositionFromMouseGrids = (x, y, grids, startGridPosition) => {\r\n        let returnGrids = []\r\n        const mouseGridPosition = this.getGridPositionFromMouseXY(x, y)\r\n        const dx = mouseGridPosition.x - startGridPosition.x\r\n        const dy = mouseGridPosition.y - startGridPosition.y\r\n        for (let i = 0; i < grids.length; i++) {\r\n            returnGrids.push({\r\n                x: grids[i].x + dx,\r\n                y: grids[i].y + dy,\r\n                dx, dy\r\n            })\r\n        }\r\n\r\n        return returnGrids\r\n    }\r\n\r\n    getPositionsForNoGridsImage = () => {\r\n        let returnGrids = []\r\n        for (let o = 0; o < this.numRow; o++) {\r\n            for (let i = 0; i < this.numColumn; i++) {\r\n                returnGrids.push({\r\n                    x: i * this.tileWidth,\r\n                    y: o * this.tileHeight,\r\n                    dx: i * this.tileWidth - (this.gridThickness + i * (this.tileWidth + this.gridThickness)),\r\n                    dy: o * this.tileHeight - (this.gridThickness + o * (this.tileHeight + this.gridThickness))\r\n                })\r\n            }\r\n        }\r\n\r\n        return returnGrids\r\n    }\r\n\r\n    getMinRegionGridPositionsFromGridsAndGrid = (grids, grid) => {\r\n        const { left, top } = this.getCropPositionFromGridPositions(grids)\r\n        const minX = left, minY = top, maxX = grid.x, maxY = grid.y\r\n        return this.getGridPositionsFromCropPositions({ x: minX, y: minY }, { x: maxX, y: maxY })\r\n    }\r\n\r\n    getGridDiffFrom2Grids = (startGrids, currentGrids) => {\r\n        const startRegion = this.getCropPositionFromGridPositions(startGrids)\r\n        const currentRegion = this.getCropPositionFromGridPositions(currentGrids)\r\n\r\n        const dx = currentRegion.left - startRegion.left;\r\n        const dy = currentRegion.top - startRegion.top\r\n        const returnGrids = []\r\n\r\n        for (let i = 0; i < startGrids.length; i++) {\r\n            returnGrids.push({ dx, dy })\r\n        }\r\n\r\n        return returnGrids\r\n    }\r\n\r\n    drawGridsByGridsDiff = (startGrids, gridsDiff) => {\r\n        const imgData = this.ctx.getImageData(0, 0, this.canvasWidth, this.canvasHeight)\r\n        for (let i = 0; i < startGrids.length; i++) {\r\n\r\n            this.ctx.putImageData(\r\n                imgData,\r\n                gridsDiff[i].dx,\r\n                gridsDiff[i].dy,\r\n                startGrids[i].x,\r\n                startGrids[i].y,\r\n                this.tileWidth + this.gridThickness,\r\n                this.tileHeight + this.gridThickness,\r\n            )\r\n        }\r\n        this.drawGridBorder()\r\n    }\r\n\r\n    getGridsFromGridsDiffandGrids = (startGrids, gridsDiff) => {\r\n        if (startGrids.length !== gridsDiff.length) throw new Error('error')\r\n        const returnGrids = []\r\n        for (let i = 0; i < startGrids.length; i++) {\r\n            returnGrids.push({\r\n                x: startGrids[i].x + gridsDiff[i].dx,\r\n                y: startGrids[i].y + gridsDiff[i].dy\r\n            })\r\n        }\r\n        return returnGrids\r\n    }\r\n}","export default class CopyController {\r\n    constructor(startGrids, startImgData) {\r\n        this.startGrids = JSON.parse(JSON.stringify(startGrids))\r\n        this.startImgData = startImgData\r\n    }\r\n\r\n    pastGrids = (position) => {\r\n        console.log(position)\r\n    }\r\n\r\n    getStartGrids = () => {\r\n        return this.startGrids\r\n    }\r\n\r\n    getStartImageData = () => {\r\n        return this.startImgData\r\n    }\r\n}","import React from 'react'\r\nclass selectedBoxes extends React.Component {\r\n    state = {\r\n        mouseDown: false,\r\n        lastX: null,\r\n        lastY: null,\r\n        selectedGrid: null,\r\n        grid: null,\r\n        lastGrid: null,\r\n        startX: null,\r\n        startY: null,\r\n        startGrids: null,\r\n        startImgData: null,\r\n        startImg: null\r\n    }\r\n\r\n    handleMoveStart = (e, grid) => {\r\n        e.stopPropagation()\r\n\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.props.parent.handleFixPosition(clientX, clientY)\r\n        let { selectedGrid } = this.props\r\n        const startImgData = this.props.parent.GridController.getImageData()\r\n        const startImg = this.props.parent.refs.canvas.toDataURL('image/jpeg', 1)\r\n        const startGrids = JSON.parse(JSON.stringify(selectedGrid))\r\n        const lastGrid = JSON.parse(JSON.stringify(grid))\r\n        this.setState({\r\n            mouseDown: true,\r\n            lastX: x, lastY: y,\r\n            selectedGrid, grid,\r\n            startX: grid.x, startY: grid.y,\r\n            startGrids, startImgData, lastGrid,\r\n            startImg\r\n        }, () => {\r\n            this.props.parent.handleStopCopying()\r\n        })\r\n    }\r\n\r\n    handleMove = (x, y) => {\r\n        let { mouseDown, lastX, lastY, selectedGrid, startX, startY, startGrids, startImgData, lastGrid } = this.state\r\n\r\n        if (!mouseDown || !lastX || !lastY) return\r\n        const dx = x - lastX\r\n        const dy = y - lastY\r\n        this.props.parent.GridController.handleShiftSelectedGrids(dx, dy, selectedGrid)\r\n        let gridsToDraw = this.props.parent.GridController.getGridsPositionFromMouseGrids(x, y, startGrids, {\r\n            x: startX, y: startY\r\n        })\r\n        this.props.parent.GridController.clearGridsByRegion(startGrids)\r\n\r\n        if (!lastGrid || !this.props.parent.GridController.mouseXYisInGrid(x, y, lastGrid.x, lastGrid.y)) {\r\n            this.props.parent.ctx.putImageData(startImgData, 0, 0)\r\n            this.props.parent.GridController.clearGridsByRegion(startGrids)\r\n\r\n        }\r\n        this.props.parent.GridController.DrawGridsByRegion(startImgData, gridsToDraw, startGrids)\r\n\r\n        lastGrid = this.props.parent.GridController.getGridPositionFromMouseXY(x, y)\r\n\r\n        this.setState({ lastX: x, lastY: y, lastGrid })\r\n    }\r\n\r\n    handleMoveEnd = e => {\r\n        const { shiftSelecting } = this.props\r\n        if (!shiftSelecting)\r\n            e.stopPropagation()\r\n        const { clientX, clientY } = e\r\n        const { selectedGrid, grid, startImg } = this.state\r\n        const { x, y } = this.props.parent.handleFixPosition(clientX, clientY)\r\n        this.props.parent.GridController.handleShift2Grids(x, y, selectedGrid, grid)\r\n\r\n        const newImg = this.props.parent.refs.canvas.toDataURL('image/jpeg', 1)\r\n        this.props.parent.addNewTransaction(startImg, newImg)\r\n        this.props.parent.sendSocketNewOperation()\r\n\r\n        this.setState({\r\n            mouseDown: false, lastX: null,\r\n            lastY: null, startGrids: null,\r\n            startX: null, startY: null,\r\n            grid: null, startImgData: null,\r\n            lastGrid: null, startImg: null\r\n        })\r\n    }\r\n\r\n    handleMoveLeave = e => {\r\n        const { mouseDown } = this.state\r\n        if (!mouseDown) return\r\n        this.props.parent.handleToolMove(e)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.childRef(this)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { selectedGrid, width, height } = this.props\r\n        const { mouseDown } = this.state\r\n        const color = mouseDown ? 'rgba(0,0,0,0)' : 'rgba(0,0,205,0.4)'\r\n        return (\r\n            <>\r\n                {\r\n                    selectedGrid && selectedGrid.map((grid, index) => {\r\n                        const style = {\r\n                            left: grid.x - 1,\r\n                            top: grid.y - 1,\r\n                            width: width + 2,\r\n                            height: height + 2,\r\n                            backgroundColor: color,\r\n                        }\r\n                        return (\r\n                            <div\r\n                                onMouseDown={e => this.handleMoveStart(e, grid)}\r\n                                onMouseLeave={this.handleMoveLeave}\r\n                                onClick={e => this.handleMoveEnd(e, grid)}\r\n                                key={index}\r\n                                style={style}\r\n                                className='selected-box'\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default selectedBoxes\r\n","import React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { connect } from 'react-redux';\r\nimport TOOLS from '../tools/ToolbarTools'\r\nimport CanvasController from './CanvasController'\r\nimport DrawTransaction from \"../controller/DrawTransaction\"\r\nimport GridController from '../controller/GridController'\r\nimport ImageController, { arrayBufferToBase64 } from '../controller/ImageController'\r\nimport CopyController from '../controller/CopyController'\r\nimport SelectedBoxes from './SelectedBoxes'\r\nimport axios from 'axios'\r\nimport Keyboard from '../controller/KeyboardController'\r\nimport Dialog from '../tools/Dialog'\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nclass DisplayPlace extends React.Component {\r\n\r\n    state = {\r\n        canvasWidth: 0,\r\n        canvasHeight: 0,\r\n        DisplayBoxWidth: 0,\r\n        DisplayBoxHeight: 0,\r\n        mouseDown: false,\r\n        selectedGrid: [],\r\n        ctrlSelecting: false,\r\n        shiftSelecting: false,\r\n        cropDimension: null,\r\n        copying: false,\r\n        dialogOpen: false,\r\n    }\r\n\r\n    selectedBoxes = React.createRef()\r\n\r\n    getSelectedTools = () => {\r\n        const { selectedTool } = this.props\r\n        if (selectedTool === TOOLS.ZOOM_IN)\r\n            return 'display-zoom-in'\r\n        if (selectedTool === TOOLS.ZOOM_OUT)\r\n            return 'display-zoom-out'\r\n        if (selectedTool === TOOLS.PENCIL)\r\n            return 'display-pencil'\r\n        if (selectedTool === TOOLS.ERASER)\r\n            return 'display-eraser'\r\n        if (selectedTool === TOOLS.FILL)\r\n            return 'display-fill'\r\n        if (selectedTool)\r\n            return 'display-cross-cursor'\r\n        return ''\r\n    }\r\n\r\n    handleToolStart = (e) => {\r\n        const { selectedTool, borderThic, fillColor, borderColor } = this.props\r\n        if (!selectedTool) return\r\n        const { shiftSelecting } = this.state\r\n        if (shiftSelecting) return\r\n\r\n\r\n        this.painter.initDraw(selectedTool, borderThic, fillColor, borderColor)\r\n        if (selectedTool === TOOLS.FILL) return\r\n\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n\r\n        if (selectedTool === TOOLS.CROP) {\r\n            this.setState({\r\n                cropDimension: {\r\n                    start: { x, y }\r\n                }\r\n            })\r\n        }\r\n\r\n        this.painter.startDraw(x, y)\r\n\r\n\r\n        this.setState({\r\n            mouseDown: true,\r\n        })\r\n    }\r\n\r\n    handleToolMove = (e) => {\r\n        const { mouseDown, selectedGrid } = this.state\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n\r\n        if (selectedGrid.length !== 0) {\r\n            if (this.selectedBoxes.state.mouseDown) {\r\n                this.selectedBoxes.handleMove(x, y)\r\n            }\r\n        }\r\n\r\n        if (!mouseDown) return\r\n\r\n\r\n\r\n\r\n        this.painter.onDraw(x, y)\r\n        this.GridController.drawGridBorder()\r\n\r\n    }\r\n\r\n    handleToolEnd = (e, type) => {\r\n\r\n        const { selectedTool } = this.props\r\n        const { shiftSelecting } = this.state\r\n\r\n        if ((!selectedTool || shiftSelecting) && type === 'click') {\r\n            this.handleSelect(e)\r\n            return\r\n        }\r\n\r\n        if ((selectedTool === TOOLS.ZOOM_IN || selectedTool === TOOLS.ZOOM_OUT || selectedTool === TOOLS.FILL) && type === 'out') return\r\n\r\n        if (this.state.mouseDown === false && selectedTool !== TOOLS.FILL) return\r\n        if (selectedTool === TOOLS.ZOOM_IN || selectedTool === TOOLS.ZOOM_OUT) {\r\n            this.props.handleZoomEffect(e)\r\n            return\r\n        }\r\n\r\n        e.stopPropagation()\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n\r\n        if (selectedTool === TOOLS.CROP) {\r\n            let { cropDimension } = this.state\r\n            cropDimension.end = { x, y }\r\n            this.setState(cropDimension, () => {\r\n                this.handleCropSelect()\r\n            })\r\n        }\r\n\r\n        this.painter.endDraw(x, y)\r\n        this.GridController.drawGridBorder()\r\n\r\n        this.setState({\r\n            mouseDown: false,\r\n        })\r\n    }\r\n\r\n    handleCropSelect = () => {\r\n        let { ctrlSelecting, selectedGrid, cropDimension } = this.state\r\n        const posistions = this.GridController.getGridPositionsFromCropMouse(cropDimension)\r\n        if (!ctrlSelecting) {\r\n            this.setState({ selectedGrid: posistions })\r\n            return\r\n        } else {\r\n            for (let o = 0; o < posistions.length; o++) {\r\n                let found = false\r\n                for (let i = 0; i < selectedGrid.length; i++) {\r\n                    if (posistions[o].x === selectedGrid[i].x && posistions[o].x === selectedGrid[i].x) {\r\n                        found = true\r\n                        break\r\n                    }\r\n                }\r\n                if (!found) {\r\n                    selectedGrid.push(posistions[o])\r\n                }\r\n            }\r\n            this.setState(selectedGrid)\r\n        }\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        e.stopPropagation()\r\n        const { clientX, clientY } = e\r\n        const { x, y } = this.handleFixPosition(clientX, clientY)\r\n        const gridIndex = this.GridController.getGridPositionFromMouseXY(x, y)\r\n        if (!gridIndex) return\r\n\r\n        let { ctrlSelecting, selectedGrid, shiftSelecting } = this.state\r\n        if (ctrlSelecting === false && shiftSelecting === false) {\r\n            selectedGrid = []\r\n            selectedGrid.push(gridIndex)\r\n            this.setState({ selectedGrid })\r\n            return\r\n        }\r\n\r\n\r\n        let found = false\r\n        for (let i = 0; i < selectedGrid.length; i++) {\r\n            if (selectedGrid[i].x === gridIndex.x && selectedGrid[i].y === gridIndex.y) {\r\n                found = true\r\n                break\r\n            }\r\n        }\r\n\r\n        if (!found && ctrlSelecting) {\r\n            selectedGrid.push(gridIndex)\r\n            this.setState({ selectedGrid })\r\n            return\r\n        }\r\n\r\n        if (shiftSelecting) {\r\n            if (selectedGrid.length === 0) {\r\n                selectedGrid.push(gridIndex)\r\n                this.setState({ selectedGrid })\r\n            } else {\r\n                selectedGrid = this.GridController.getMinRegionGridPositionsFromGridsAndGrid(selectedGrid, gridIndex)\r\n                this.setState({ selectedGrid })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFixPosition = (clientX, clientY) => {\r\n        const windowScrollX = window.scrollX\r\n        const windowScrollY = window.scrollY\r\n        let x = windowScrollX + clientX\r\n        let y = windowScrollY + clientY\r\n        const canvasX = this.refs.canvas.getBoundingClientRect().left\r\n        const canvasY = this.refs.canvas.getBoundingClientRect().top\r\n        x -= canvasX\r\n        y -= canvasY\r\n        const { scale } = this.props\r\n        x /= scale\r\n        y /= scale\r\n        return { x, y }\r\n    }\r\n\r\n    handleClear = () => {\r\n\r\n        const oldImg = this.refs.canvas.toDataURL('image/jpeg', 1)\r\n\r\n        this.GridController.drawGrid()\r\n\r\n        const newImg = this.refs.canvas.toDataURL('image/jpeg', 1)\r\n        this.addNewTransaction(oldImg, newImg)\r\n        this.sendSocketNewOperation()\r\n    }\r\n\r\n\r\n    getImageDataWithGrid = () => {\r\n        return this.refs.canvas.toDataURL('image/jpeg', 1)\r\n    }\r\n\r\n    handleHorizontalFlip = () => {\r\n        const { selectedGrid } = this.state\r\n        const oldImg = this.getImageDataWithGrid()\r\n        const callback = () => {\r\n            const newImg = this.getImageDataWithGrid()\r\n            this.addNewTransaction(oldImg, newImg)\r\n            this.sendSocketNewOperation()\r\n        }\r\n        if (selectedGrid.length !== 0) {\r\n            const dimension = this.GridController.getCropPositionFromGridPositions(selectedGrid)\r\n            this.ImageController.handleSelectedHorizontalFlip(dimension, callback)\r\n        } else\r\n            this.ImageController.handleHorizontalFlip(callback)\r\n    }\r\n\r\n    handleVerticalFlip = () => {\r\n        const { selectedGrid } = this.state\r\n        const oldImg = this.getImageDataWithGrid()\r\n        const callback = () => {\r\n            const newImg = this.getImageDataWithGrid()\r\n            this.addNewTransaction(oldImg, newImg)\r\n            this.sendSocketNewOperation()\r\n        }\r\n        if (selectedGrid.length !== 0) {\r\n            const dimension = this.GridController.getCropPositionFromGridPositions(selectedGrid)\r\n            this.ImageController.handleSelectedVerticalFlip(dimension, callback)\r\n        } else\r\n            this.ImageController.handleVerticalFlip(callback)\r\n    }\r\n\r\n    handleUnselectGrid = () => {\r\n        this.setState({\r\n            selectedGrid: []\r\n        })\r\n    }\r\n\r\n    handleGetImageNoGrid = () => {\r\n        const { width, height } = this.props.tileset\r\n        const gridPositions = this.GridController.getGridPositions()\r\n        const imageDimension = { width, height }\r\n        return this.ImageController.getImageFromGrid(gridPositions, imageDimension)\r\n    }\r\n\r\n    handleDrawImageNoGrid = () => {\r\n        const { width, height } = this.props.tileset\r\n        const gridPositions = this.GridController.getGridPositions()\r\n        const imageDimension = { width, height }\r\n        this.ImageController.drawImageFromGrid(gridPositions, imageDimension)\r\n    }\r\n\r\n    handleDrawImgToGrid = (src, callback) => {\r\n        const gridPositions = this.GridController.getGridPositions()\r\n        this.ImageController.drawToGrid(src, gridPositions, callback)\r\n\r\n    }\r\n\r\n    handleStopCopying = () => {\r\n        this.GridController.drawGridBorder()\r\n        this.setState({ copying: false })\r\n    }\r\n\r\n    handleCopy = () => {\r\n        const { selectedGrid } = this.state\r\n        if (selectedGrid.length === 0) {\r\n            this.setState({ dialogOpen: true })\r\n            return\r\n        }\r\n        this.setState({ copying: true }, () => {\r\n            this.startCopyGrid()\r\n        })\r\n    }\r\n\r\n    startCopyGrid = () => {\r\n        const { selectedGrid } = this.state\r\n        const imgData = this.getImageDataWithGrid()\r\n        this.CopyController = new CopyController(selectedGrid, imgData)\r\n        const startGrids = this.CopyController.getStartGrids()\r\n        this.GridController.drawCopiedGrid(startGrids)\r\n        this.setState({ selectedGrid: [] })\r\n    }\r\n\r\n    getTileset = () => {\r\n        return this.props.tileset\r\n    }\r\n\r\n    getTilesetId = () => {\r\n        const { tileset } = this.props\r\n        return tileset._id\r\n    }\r\n\r\n    getTilesetJson = () => {\r\n        const { tileset } = this.props\r\n        const dataJson = {}\r\n        dataJson.firstgid = 1\r\n        dataJson.image = \"./tileset@DELIT.jpeg\"\r\n        dataJson.imageheight = tileset.height\r\n        dataJson.imagewidth = tileset.width\r\n        dataJson.margin = tileset.margin\r\n        dataJson.name = tileset.name\r\n        dataJson.properties = {}\r\n        dataJson.spacing = tileset.spacing\r\n        dataJson.tileheight = tileset.tileHeight\r\n        dataJson.tilewidth = tileset.tileWidth\r\n        dataJson.tilecount = tileset.tilecount\r\n        return JSON.stringify(dataJson).toLowerCase()\r\n\r\n    }\r\n\r\n    pasteCopiedGrid = () => {\r\n        const { copying, selectedGrid } = this.state\r\n        if (selectedGrid.length === 0 || !copying) {\r\n            this.setState({ dialogOpen: true })\r\n        } else {\r\n            const startGrids = this.CopyController.getStartGrids()\r\n            const gridsDiff = this.GridController.getGridDiffFrom2Grids(startGrids, selectedGrid)\r\n            this.GridController.drawGridsByGridsDiff(startGrids, gridsDiff)\r\n            const newGrids = this.GridController.getGridsFromGridsDiffandGrids(startGrids, gridsDiff)\r\n\r\n            const oldImg = this.CopyController.getStartImageData()\r\n\r\n            const newImg = this.getImageDataWithGrid()\r\n            this.addNewTransaction(oldImg, newImg)\r\n            this.sendSocketNewOperation()\r\n\r\n            this.setState({ selectedGrid: newGrids, copying: false })\r\n        }\r\n    }\r\n\r\n    handleExport = () => {\r\n        const { name } = this.props.tileset\r\n        const imgData = this.handleGetImageNoGrid();\r\n        require(\"downloadjs\")(imgData, `${name}.jpeg`, \"image/jpeg\");\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.userIsTeammember()) {\r\n            this.room = `draw/${this.props.tileset._id}`\r\n            this.props.socket.emit('join-room', this.room)\r\n            this.props.socket.on('draw-back', res => {\r\n\r\n                const old_img = this.refs.canvas.toDataURL('image/jpeg', 1)\r\n                const { transactions } = this.props\r\n                const { data, type } = res\r\n\r\n                if (type === 'new') {\r\n                    this.addNewTransaction(old_img, data)\r\n                }\r\n                else if (type === 'redo') {\r\n                    transactions.doTransaction()\r\n                } else if (type === 'undo') {\r\n                    transactions.undoTransaction()\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        this.props.childRef(this)\r\n        const { canvas } = this.refs;\r\n        if (!canvas) return\r\n\r\n        const { tileset } = this.props\r\n        const { width, height, tileWidth, tileHeight } = tileset\r\n        this.ctx = this.refs.canvas.getContext('2d')\r\n\r\n        this.GridController = new GridController(this.ctx, width, height, tileWidth, tileHeight)\r\n        const canvasDimension = this.GridController.getCanvasDimension()\r\n        const canvasWidth = canvasDimension.width\r\n        const canvasHeight = canvasDimension.height\r\n\r\n\r\n\r\n        const DisplayBoxDimension = this.refs.painterBox.getBoundingClientRect()\r\n        const DisplayBoxWidth = DisplayBoxDimension.width\r\n        const DisplayBoxHeight = DisplayBoxDimension.height\r\n\r\n        this.ImageController = new ImageController(\r\n            this.ctx, canvasWidth,\r\n            canvasHeight, tileWidth,\r\n            tileHeight, width, height\r\n        )\r\n\r\n        this.setState({\r\n            canvasWidth,\r\n            canvasHeight,\r\n            DisplayBoxWidth,\r\n            DisplayBoxHeight\r\n        }, () => {\r\n            this.GridController.getPositionsForNoGridsImage()\r\n\r\n            this.GridController.drawGrid()\r\n            this.painter.setDimension(canvasWidth, canvasHeight)\r\n            const { imageId } = this.props.tileset\r\n            if (imageId !== '')\r\n                axios.get(`/data/image?imageId=${imageId}`).then(res => {\r\n                    const { err, msg, data } = res.data\r\n                    if (err)\r\n                        console.log(msg)\r\n                    else {\r\n                        const base64Flag = 'data:image/jpeg;base64,';\r\n                        if (!data) return\r\n                        const imageStr = arrayBufferToBase64(data.data)\r\n                        this.handleDrawImgToGrid(base64Flag + imageStr)\r\n                    }\r\n                })\r\n\r\n\r\n        })\r\n\r\n        this.painter = new CanvasController(this)\r\n\r\n        window.onresize = () => {\r\n            const { width, height } = this.refs.painterBox.getBoundingClientRect()\r\n            this.setState({\r\n                DisplayBoxWidth: width,\r\n                DisplayBoxHeight: height,\r\n            })\r\n        }\r\n\r\n        window.onkeydown = e => {\r\n            if (Keyboard.triggerLeftControll(e))\r\n                this.setState({ ctrlSelecting: true })\r\n            else if (Keyboard.triggerLeftShift(e))\r\n                this.setState({ shiftSelecting: true })\r\n            else if (Keyboard.triggerLeftCtrlC(e)) {\r\n                if (this.state.selectedGrid.length === 0) return\r\n                this.handleCopy()\r\n            } else if (Keyboard.triggerLeftCtrlV(e)) {\r\n                if (this.state.copying === false) return\r\n                this.pasteCopiedGrid()\r\n            }\r\n            else if (Keyboard.triggerLeftCtrlZ(e)) {\r\n                this.undoTransaction()\r\n            }\r\n            else if (Keyboard.triggerLeftCtrlY(e)) {\r\n                this.doTransaction()\r\n            }\r\n        }\r\n\r\n        window.onkeyup = e => {\r\n            if (Keyboard.triggerLeftControll(e))\r\n                this.setState({ ctrlSelecting: false })\r\n            else if (Keyboard.triggerLeftShift(e))\r\n                this.setState({ shiftSelecting: false })\r\n\r\n        }\r\n    }\r\n\r\n    userIsTeammember = () => {\r\n        const { username } = this.props\r\n        const { teamInfo } = this.props.tileset\r\n        for (let i in teamInfo) {\r\n            if (teamInfo[i].username === username)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    sendSocketNewOperation = () => {\r\n        const imgData = this.refs.canvas.toDataURL('image/jpeg', 1)\r\n        this.props.socket.emit('draw', {\r\n            data: imgData,\r\n            type: 'new',\r\n            room: this.room\r\n        })\r\n    }\r\n\r\n    addNewTransaction = (oldImg, newImg) => {\r\n        this.props.transactions.addTransaction(\r\n            new DrawTransaction(oldImg, newImg, this.ImageController.drawImage)\r\n        )\r\n    }\r\n\r\n    doTransaction = () => {\r\n        this.props.socket.emit('draw', {\r\n            type: 'redo',\r\n            room: this.room\r\n        })\r\n        this.props.transactions.doTransaction()\r\n        this.handleUnselectGrid()\r\n    }\r\n\r\n    undoTransaction = () => {\r\n        this.props.socket.emit('draw', {\r\n            type: 'undo',\r\n            room: this.room\r\n        })\r\n        this.props.transactions.undoTransaction()\r\n        this.handleUnselectGrid()\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.socket.on('join-back', res => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { canvasWidth, canvasHeight, DisplayBoxWidth, DisplayBoxHeight, selectedGrid, copying, dialogOpen, shiftSelecting } = this.state;\r\n        const { scale, tileset } = this.props\r\n        const { tileWidth, tileHeight } = tileset\r\n        console.log(tileset)\r\n        const scrollStyle = {\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'lightgray',\r\n            paddingBottom: 6,\r\n        }\r\n\r\n        const displayStyle = {\r\n            left: canvasWidth ? canvasWidth * scale >= DisplayBoxWidth ? 6 : (DisplayBoxWidth - canvasWidth * scale) / 2 + 6 : 6,\r\n            top: canvasHeight ? canvasHeight * scale >= DisplayBoxHeight ? 6 : (DisplayBoxHeight - canvasHeight * scale) / 2 + 6 : 6,\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"painter-display\" ref='painterBox' onClick={this.handleUnselectGrid}>\r\n                <Scrollbars ref=\"scrollbar\"\r\n                    style={scrollStyle}\r\n                    renderThumbHorizontal={props => <div {...props} className=\"thumb\" />}\r\n                    renderThumbVertical={props => <div {...props} className=\"thumb\" />}\r\n                >\r\n\r\n                    <div className={\"display \" + this.getSelectedTools()} id='display'\r\n                        onMouseDown={this.handleToolStart}\r\n                        onMouseMove={this.handleToolMove}\r\n                        onMouseLeave={e => this.handleToolEnd(e, 'out')}\r\n                        onClick={e => this.handleToolEnd(e, 'click')}\r\n                        style={displayStyle}>\r\n                        <canvas ref='canvas' width={canvasWidth} height={canvasHeight} className='draw-canvas'>\r\n                            Your Browser Does Not Support Canvas\r\n                        </canvas>\r\n                        <SelectedBoxes\r\n                            selectedGrid={selectedGrid}\r\n                            width={tileWidth}\r\n                            height={tileHeight}\r\n                            parent={this}\r\n                            childRef={ref => this.selectedBoxes = ref}\r\n                            copying={copying}\r\n                            shiftSelecting={shiftSelecting}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </Scrollbars>\r\n                <Dialog\r\n                    header={'Attention'}\r\n                    open={dialogOpen}\r\n                    fullWidth={true}\r\n                    maxWidth=\"xs\"\r\n                    actions={[<Button key='f' onClick={e => this.setState({ dialogOpen: false })}>OK</Button>]}\r\n                    content={\r\n                        <p>You Must Select A Grid To Copy or To Paste</p>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { selected } = state.toolbar\r\n    return {\r\n        selectedTool: selected,\r\n        socket: state.backend.socket,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayPlace)\r\n","import Dialog from '../tools/Dialog'\r\nimport React from 'react'\r\nimport { Button } from \"react-bootstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Mutation } from 'react-apollo';\r\nimport MutationList from '../../graphql/Mutation';\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n    state = {\r\n        name: ''\r\n    }\r\n\r\n    handleOnChange = e => {\r\n        this.setState({ name: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.state\r\n        const { save, start, duplicate, parent, confirmSave, publish, saved, saveErrorMsg } = this.props\r\n        return (\r\n            <>\r\n                {save === undefined ? null : <Dialog\r\n                    header=\"Save Tileset\"\r\n                    open={save}\r\n                    actions={[\r\n                        <Button key='1' onClick={parent.handleSave}>Yes</Button>,\r\n                        <Button key='2' onClick={parent.handleSaveDialogClose}>Cancel</Button>\r\n                    ]}\r\n                    content={[\r\n                        <h3 key='q'>Are You Sure to Save In Delit Database?</h3>,\r\n                        <h3 key='w'>Old Version will be overwriten</h3>\r\n                    ]} />}\r\n\r\n                {start === undefined ? null : <Dialog\r\n                    header=\"Attention!\"\r\n                    open={start}\r\n                    actions={[\r\n                        <Button key='1' onClick={parent.handleGoBack}>Leave(to dashboard)</Button>,\r\n                        <Button key='2' onClick={parent.handleDuplicateDialogOpen}>Make a Copy</Button>,\r\n                        <Button key='3' onClick={parent.handleStartDialogClose}>Continue</Button>\r\n                    ]}\r\n                    content={[\r\n                        <h4 key='q'>You are not in team of this tileset</h4>,\r\n                        <h4 key='w'>You operation will not be saved</h4>,\r\n                        <strong key='e'>But you can still own and change it by making a copy of this tileset</strong>\r\n                    ]} />}\r\n\r\n                {duplicate === undefined ? null : <Dialog\r\n                    header=\"Make a Copy of This Tileset\"\r\n                    open={duplicate}\r\n                    actions={[\r\n                        <Button key='1' onClick={parent.handleDuplicate.bind(this, name)}>Yes</Button>,\r\n                        <Button key='2' onClick={parent.handleDuplicateDialogClose}>Cancel</Button>\r\n                    ]}\r\n                    content={[\r\n                        <h4 key='q'>Are You Sure to duplicate this tileset?</h4>,\r\n                        <h4 key='w'>You will be the owner of the new tileset</h4>,\r\n                        <h4 key='e'>Current Change Will be saved to Your new tilest</h4>,\r\n                        <TextField\r\n                            key='r'\r\n                            className='duplicate-input'\r\n                            label=\"Enter Name for your new tileset\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            value={name}\r\n                            onChange={this.handleOnChange}\r\n                        />\r\n                    ]} />\r\n                }\r\n                {confirmSave === undefined ? null : <Dialog\r\n                    header=\"Saving Tileset\"\r\n                    open={confirmSave}\r\n                    actions={[\r\n                        <Button key='1' onClick={parent.handleGoBack} disabled={!saved}>Leave(to dashboard)</Button>,\r\n                        <Button key='2' onClick={parent.handleConfirmSaveDialogClose}>Cancel</Button>\r\n                    ]}\r\n                    content={[\r\n                        saved ? <h3 key='q'>Your Tileset is save successfully</h3> : <h3 key='q'>Your Tileset is being saved</h3>,\r\n                        saveErrorMsg === '' ? null : <h3 key='w'>saveErrorMsg</h3>,\r\n                        saveErrorMsg === '' ? saved ? <i key='e' className=\"fas fa-check-circle dialog-saved-icon\"></i> : <CircularProgress key='e' className=\"wait-saving\" /> : <i key='e' class=\"fas fa-times-circle dialog-saved-error\"></i>,\r\n                    ]} />\r\n                }\r\n\r\n                {publish === undefined ? null :\r\n\r\n                    <Mutation mutation={MutationList.PUBLISH_TILESET} onCompleted={() => { parent.handleRefreshAfterPublished() }}>\r\n                        {(updateTileset, res) => {\r\n                            return (\r\n                                <Dialog\r\n                                    header=\"Saving Tileset\"\r\n                                    open={publish}\r\n                                    actions={[\r\n                                        <Button key='1' onClick={() => { updateTileset({ variables: { id: parent.display.getTilesetId() } }) }}>Confirm</Button>,\r\n                                        <Button key='2' onClick={parent.handlePublishDialogClose}>Cancel</Button>\r\n                                    ]}\r\n                                    content={[\r\n                                        <h3 key='1'>Are You Sure to Publish This Tileset</h3>,\r\n                                        <h3 key='2'>By Publishing it, you will be able to use it in your map</h3>,\r\n                                        <h3 key='3'>But You wont be able to edit this one again</h3>,\r\n                                    ]} />\r\n                            )\r\n                        }}\r\n\r\n                    </Mutation>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport { Rnd } from 'react-rnd';\r\nimport Titlebar from '../tools/Titlebar'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\nclass ChatBox extends React.Component {\r\n\r\n    state = {\r\n        inputText: '',\r\n        chatHistory: [],\r\n        position: { x: 100, y: 100 },\r\n        size: { width: 320, height: 480 }\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.inputText !== '') {\r\n            this.props.socket.emit('chat', {\r\n                username: this.props.username,\r\n                userPicture: this.props.userPicture,\r\n                msg: this.state.inputText,\r\n                room: this.props.room\r\n            })\r\n            this.setState({ inputText: '' })\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({ inputText: e.target.value })\r\n    }\r\n\r\n    handleStopResize = (e, direction, ref, delta, position) => {\r\n        this.setState({\r\n            size: {\r\n                width: parseInt(ref.style.width),\r\n                height: parseInt(ref.style.height)\r\n            },\r\n            position: {\r\n                x: parseInt(position.x),\r\n                y: parseInt(position.y)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleOnDragStop = (e, d) => {\r\n        this.setState({ position: { x: d.x, y: d.y } })\r\n    }\r\n\r\n    handleResetWindow = () => {\r\n        this.setState({\r\n            position: { x: 100, y: 100 },\r\n            size: { width: 320, height: 480 }\r\n        })\r\n    }\r\n\r\n    handleMaxWindow = () => {\r\n        const { width, height } = document.body.getBoundingClientRect();\r\n        this.setState({\r\n            position: { x: 0, y: 0 },\r\n            size: { width: width, height: height }\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.socket.on('chat-back', res => {\r\n            let chatHistory = this.state.chatHistory.map(e => ({ ...e }))\r\n            chatHistory.push(res)\r\n            this.setState({ chatHistory })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { open } = this.props\r\n        const { inputText, chatHistory, size, position } = this.state\r\n        const currentUser = this.props.username\r\n        return (\r\n            <>\r\n                {open ? <Rnd\r\n                    size={size}\r\n                    position={position}\r\n                    className={'chat-box '}\r\n                    onResizeStop={this.handleStopResize}\r\n                    onDragStop={this.handleOnDragStop}\r\n                >\r\n                    <Titlebar title=\"Property Window\" handleClose={this.props.handleClose} handleResetWindow={this.handleResetWindow} handleMaxWindow={this.handleMaxWindow} />\r\n                    <h3 style={{ textAlign: 'center' }}>chat</h3>\r\n                    <div className='chat-history'>\r\n                        {\r\n                            chatHistory.map((e, index) => {\r\n                                const { username, userPicture, msg } = e\r\n                                return (\r\n                                    <div key={index} className='chat-history-item-box'>\r\n                                        <img src={userPicture} alt='' className={currentUser === username ? 'chat-history-item-picture-right' : 'chat-history-item-picture'}></img>\r\n                                        <div className={currentUser === username ? 'chat-history-item-username-right' : 'chat-history-item-username'}>{username}</div>\r\n                                        <div className={currentUser === username ? 'chat-history-item-msg-right' : 'chat-history-item-msg'}>{msg}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        className=\"chat-input\"\r\n                        label=\"Enter Message\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={inputText}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onChange={this.handleChange} />\r\n                    <Button className='chat-input-btn' size=\"sm\" onClick={this.handleSubmit}>&#10148;</Button>\r\n\r\n                </Rnd> : null}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatBox","import React from \"react\";\r\nimport './draw.css'\r\nimport TopNavbar from '../tools/TopNavbar'\r\nimport Toolbar from '../tools/Toolbar.js'\r\nimport PropertyBar from './PropertyBar'\r\nimport DisplayPlace from \"./DisplayPlace\";\r\nimport * as handler from '../../store/database/WorkScreenHandler';\r\nimport { connect } from 'react-redux';\r\nimport TOOLS from '../tools/ToolbarTools'\r\nimport Transactions from '../controller/JSTPS'\r\nimport ReactFileReader from 'react-file-reader';\r\nimport Dialogs from './Dialogs'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Query } from 'react-apollo'\r\nimport axios from 'axios';\r\nimport { Button } from \"react-bootstrap\";\r\nimport ChatBox from './ChatBox'\r\n\r\nclass Draw extends React.Component {\r\n\r\n    state = {\r\n        sliderValue: 1,\r\n        borderColor: { r: 0, g: 0, b: 0, a: 1 },\r\n        fillColor: { r: 255, g: 255, b: 255, a: 1 },\r\n        scale: 1,\r\n        saveOpen: false,\r\n        duplicaOpen: false,\r\n        startAuthOpen: false,\r\n        confirmSaveOpen: false,\r\n        publishOpen: false,\r\n        saved: false,\r\n        username: null,\r\n        userPicture: '',\r\n        saveErrorMsg: '',\r\n        showChatBox: false,\r\n    };\r\n\r\n    transactions = new Transactions();\r\n    display = React.createRef();\r\n\r\n    handleChat = () => {\r\n        const { showChatBox } = this.state\r\n        this.setState({ showChatBox: !showChatBox })\r\n    }\r\n\r\n    handleChatClose = () => {\r\n        this.setState({ showChatBox: false })\r\n    }\r\n\r\n    handleExportJson = () => {\r\n        const imgData = this.display.getTilesetJson()\r\n        require(\"downloadjs\")(imgData, \"tilesetJson@DELIT.json\", \"json\");\r\n    }\r\n\r\n    handleSaveDialogOpen = () => {\r\n        if (this.display.userIsTeammember())\r\n            this.setState({ saveOpen: true })\r\n        else\r\n            this.setState({ startAuthOpen: true })\r\n    }\r\n\r\n    handleSaveDialogClose = () => {\r\n        this.setState({ saveOpen: false })\r\n    }\r\n\r\n    handleConfirmSaveDialogOpen = () => {\r\n        this.setState({ saved: false, confirmSaveOpen: true, saveOpen: false, saveErrorMsg: '' })\r\n    }\r\n\r\n    handleConfirmSaveDialogClose = () => {\r\n        this.setState({ saved: false, confirmSaveOpen: false, saveErrorMsg: '' })\r\n    }\r\n\r\n    handleStartDialogOpen = () => {\r\n        this.setState({ startAuthOpen: true })\r\n    }\r\n\r\n    handleStartDialogClose = () => {\r\n        this.setState({ startAuthOpen: false })\r\n    }\r\n\r\n    handlePublishDialogOpen = () => {\r\n        this.setState({ publishOpen: true })\r\n    }\r\n\r\n    handlePublishDialogClose = () => {\r\n        this.setState({ publishOpen: false })\r\n    }\r\n\r\n    handleDuplicateDialogOpen = () => {\r\n        this.setState({ duplicaOpen: true })\r\n    }\r\n\r\n    handleDuplicateDialogClose = () => {\r\n        this.setState({ duplicaOpen: false })\r\n    }\r\n\r\n    handleRefreshAfterPublished = () => {\r\n        const { key } = this.props.match.params\r\n        this.props.socket.emit('leave-room', `draw/${key}`)\r\n        this.props.history.push(`/tilesetviewer/${key}`)\r\n    }\r\n\r\n    handleDuplicate = (name) => {\r\n        const imgData = this.display.handleGetImageNoGrid()\r\n        const tileset = this.display.getTileset()\r\n        const { userId } = this.state\r\n        this.props.socket.emit('duplicate-image', {\r\n            name: name,\r\n            data: imgData,\r\n            tileset, userId\r\n        })\r\n        this.handleDuplicateDialogClose()\r\n    }\r\n\r\n    handleZoomEffect = (e) => {\r\n\r\n        e.stopPropagation()\r\n        const { selectedTool } = this.props;\r\n        if (selectedTool !== TOOLS.ZOOM_IN && selectedTool !== TOOLS.ZOOM_OUT) return\r\n        const { scale } = this.state\r\n        const factor = selectedTool === TOOLS.ZOOM_IN ? 1 / 0.8 : selectedTool === TOOLS.ZOOM_OUT ? 0.8 : 1\r\n        const nscale = scale * factor\r\n        this.setState({ scale: nscale })\r\n\r\n        let target = document.getElementById('display')\r\n        const rect = target.getBoundingClientRect()\r\n        const { clientX, clientY } = e\r\n        const { left, top } = rect\r\n        const dx = clientX - left\r\n        const dy = clientY - top\r\n        const ndy = dy * factor\r\n        const ndx = dx * factor\r\n        const ddy = ndy - dy\r\n        const ddx = ndx - dx\r\n        target.style.transform = \"scale(\" + nscale + \")\"\r\n\r\n\r\n        const currX = this.display.refs.scrollbar.getScrollLeft();\r\n        const currY = this.display.refs.scrollbar.getScrollTop();\r\n\r\n        if (nscale >= 1) {\r\n            this.display.refs.scrollbar.scrollLeft(ddx + currX)\r\n            this.display.refs.scrollbar.scrollTop(ddy + currY)\r\n        }\r\n    }\r\n\r\n    sliderOnChange = (e, newValue) => {\r\n        this.setState({\r\n            sliderValue: newValue\r\n        });\r\n    };\r\n\r\n    borderColorOnChange = (color) => {\r\n        this.setState({ borderColor: color.rgb });\r\n    };\r\n\r\n    fillColorOnChange = (color) => {\r\n        this.setState({ fillColor: color.rgb });\r\n    };\r\n\r\n    doTransaction = () => {\r\n        this.display.doTransaction()\r\n    };\r\n\r\n    undoTransaction = () => {\r\n        this.display.undoTransaction()\r\n    };\r\n\r\n    handleUnselect = () => {\r\n        this.props.handleUnselect();\r\n    };\r\n\r\n    handleClearNoneToolOperation = () => {\r\n        this.display.handleUnselectGrid()\r\n        this.display.handleStopCopying()\r\n    }\r\n\r\n\r\n    handleHorizontalFlip = (e) => {\r\n        e.stopPropagation();\r\n        this.display.handleHorizontalFlip();\r\n        this.props.handleUnselect();\r\n    };\r\n\r\n    handleVerticalFlip = (e) => {\r\n        e.stopPropagation();\r\n        this.display.handleVerticalFlip();\r\n        this.props.handleUnselect();\r\n    };\r\n\r\n    handleClear = () => {\r\n        this.display.handleClear();\r\n    };\r\n\r\n    handleImport = (file) => {\r\n        const oldImg = this.display.getImageDataWithGrid();\r\n\r\n        this.display.handleDrawImgToGrid(file.base64, () => {\r\n            const newImg = this.display.getImageDataWithGrid()\r\n            this.display.addNewTransaction(oldImg, newImg)\r\n            this.display.sendSocketNewOperation()\r\n        })\r\n    };\r\n\r\n    handleExport = () => {\r\n        this.display.handleExport();\r\n    };\r\n\r\n    handleSave = () => {\r\n        const imgData = this.display.handleGetImageNoGrid()\r\n        this.props.socket.emit('draw-save', {\r\n            tilesetId: this.props.match.params.key,\r\n            data: imgData\r\n        });\r\n        this.handleConfirmSaveDialogOpen()\r\n        this.handleClearNoneToolOperation()\r\n    }\r\n\r\n    handleCopy = () => {\r\n        this.display.handleCopy()\r\n    }\r\n\r\n    handlePaste = () => {\r\n        this.display.pasteCopiedGrid()\r\n    }\r\n\r\n    handleGoBack = () => {\r\n        const { key } = this.props.match.params\r\n        this.props.socket.emit('leave-room', `draw/${key}`)\r\n        this.props.history.push('/dashboard')\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { key } = this.props.match.params\r\n        axios.get('/auth/current').then(res => {\r\n            const { username, _id, picture } = res.data;\r\n            if (!username || !_id || !picture) {\r\n                this.props.socket.emit('leave-room', `draw/${key}`)\r\n                this.props.history.push('/');\r\n            }\r\n            else {\r\n                this.setState({ username, userId: _id, userPicture: picture });\r\n            }\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.socket.on('duplicate-image-back', res => {\r\n            const { key } = this.props.match.params\r\n            this.props.socket.emit('leave-room', `draw/${key}`)\r\n            this.props.history.push(`/tileseteditor/${res}`)\r\n        })\r\n\r\n        this.props.socket.on('draw-save-back', res => {\r\n            const { err, msg } = res\r\n            if (err) {\r\n                this.setState({ saveErrorMsg: msg })\r\n            } else {\r\n                this.setState({ saved: true })\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { key } = this.props.match.params\r\n        const { history, socket } = this.props;\r\n        const { sliderValue, saved, borderColor, fillColor, scale, saveOpen, startAuthOpen, duplicaOpen, username, userPicture, confirmSaveOpen, saveErrorMsg, publishOpen, showChatBox } = this.state;\r\n        return (\r\n\r\n            <div onClick={this.handleUnselect}>\r\n                <TopNavbar site='tileset' history={history}\r\n                    handleSave={this.handleSaveDialogOpen}\r\n                    handleExportJson={this.handleExportJson}\r\n                    handleImport={this.handleImport}\r\n                    handleExport={this.handleExport}\r\n                    handleDuplicate={this.handleDuplicateDialogOpen}\r\n                    handleDoTransaction={this.doTransaction}\r\n                    handleUndoTransaction={this.undoTransaction}\r\n                    handleCopy={this.handleCopy}\r\n                    handlePaste={this.handlePaste}\r\n                />\r\n                <Button className='publish-btn' size=\"sm\" onClick={this.handlePublishDialogOpen}>Publish</Button>\r\n                <Button className='chat-btn' size=\"sm\" onClick={this.handleChat}>Chat</Button>\r\n                <ChatBox open={showChatBox} socket={socket} username={username} userPicture={userPicture}\r\n                    room={`draw/${key}`} handleClose={this.handleChatClose} />\r\n                <div className=\"painter-wrapper\">\r\n                    <Toolbar\r\n                        selectCallback={this.handleClearNoneToolOperation}\r\n                        className=\"map-toolbar\"\r\n                        content={[\r\n                            { name: TOOLS.UNDO, item: <i className={\"fas fa-undo\"} style={{ fontSize: '24px' }} onClick={this.undoTransaction} /> },\r\n                            { name: TOOLS.REDO, item: <i className={\"fas fa-redo\"} style={{ fontSize: '24px' }} onClick={this.doTransaction} /> },\r\n                            {\r\n                                name: TOOLS.UPLOAD, item:\r\n                                    <ReactFileReader fileTypes={[\".jpeg\"]} ref='fileUploader' handleFiles={this.handleImport} base64={true}>\r\n                                        <i className={\"fas fa-upload\"} style={{ fontSize: '24px' }} />\r\n                                    </ReactFileReader>\r\n                            },\r\n                            { name: TOOLS.DOWNLOAD, item: <i className={\"fas fa-download\"} style={{ fontSize: '24px' }} onClick={this.handleExport} /> },\r\n                            { name: TOOLS.SAVE, item: <i className={\"fas fa-save\"} style={{ fontSize: '24px' }} onClick={this.handleSaveDialogOpen} /> },\r\n                            { name: TOOLS.EXPORT_JSON, item: <i className={\"fas fa-box\"} style={{ fontSize: '24px' }} onClick={this.handleExportJson} /> },\r\n                            { name: TOOLS.COPY, item: <i className={\"fas fa-copy\"} style={{ fontSize: '24px' }} onClick={this.handleCopy} /> },\r\n                            { name: TOOLS.PASTE, item: <i className={\"fas fa-paste\"} style={{ fontSize: '24px' }} onClick={this.handlePaste} /> },\r\n                        ]}\r\n                        secondaryContent={[\r\n                            { name: TOOLS.PENCIL, item: <i className={\"fas fa-pencil-alt\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.LINE, item: <i className=\"fas fa-slash\" style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.SQUARE, item: <i className={\"far fa-square\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.CIRCLE, item: <i className={\"far fa-circle\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.ERASER, item: <i className={\"fas fa-eraser\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.FILL, item: <i className={\"fas fa-fill\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.CROP, item: <i className={\"fas fa-crop-alt\"} style={{ fontSize: '24px' }} /> },\r\n                        ]}\r\n                        rightContent={[\r\n                            { name: TOOLS.ZOOM_OUT, item: <i className={\"fas fa-search-minus\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.ZOOM_IN, item: <i className={\"fas fa-search-plus\"} style={{ fontSize: '24px' }} /> },\r\n                        ]}\r\n                    />\r\n                    <PropertyBar\r\n                        sliderValue={sliderValue}\r\n                        sliderOnChange={this.sliderOnChange}\r\n                        borderColor={borderColor}\r\n                        borderColorOnChange={this.borderColorOnChange}\r\n                        fillColor={fillColor}\r\n                        fillColorOnChange={this.fillColorOnChange}\r\n                        handleHorizontalFlip={this.handleHorizontalFlip}\r\n                        handleVerticalFlip={this.handleVerticalFlip}\r\n                        handleClear={this.handleClear}\r\n                    />\r\n                    <Query query={QueryList.GET_TILESET} variables={{ id: key }} fetchPolicy={'network-only'}>\r\n                        {({ loading, error, data }) => {\r\n                            if (loading) return 'loading'\r\n                            if (error) return 'error'\r\n                            if (!data) return 'error'\r\n                            const { tileset } = data\r\n                            return (\r\n                                <DisplayPlace\r\n                                    tileset={tileset}\r\n                                    childRef={ref => this.display = ref}\r\n                                    borderThic={sliderValue}\r\n                                    fillColor={fillColor}\r\n                                    borderColor={borderColor}\r\n                                    transactions={this.transactions}\r\n                                    handleZoomEffect={this.handleZoomEffect}\r\n                                    scale={scale}\r\n                                    username={username}\r\n                                    handleStartDialogOpen={this.handleStartDialogOpen}\r\n                                />\r\n                            )\r\n                        }}\r\n                    </Query>\r\n                </div>\r\n                <Dialogs\r\n                    parent={this}\r\n                    save={saveOpen}\r\n                    start={startAuthOpen}\r\n                    duplicate={duplicaOpen}\r\n                    confirmSave={confirmSaveOpen}\r\n                    publish={publishOpen}\r\n                    saved={saved}\r\n                    saveErrorMsg={saveErrorMsg}\r\n                />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { selected } = state.toolbar;\r\n    return {\r\n        selectedTool: selected,\r\n        socket: state.backend.socket\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleUnselect: () => dispatch(handler.toolbarUnselectHandler()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Draw);","import React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport GridController from '../controller/GridController'\r\nimport ImageController, { arrayBufferToBase64 } from '../controller/ImageController'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport TOOLS from '../tools/ToolbarTools'\r\n\r\n\r\n\r\nclass ViewerDisplay extends React.Component {\r\n\r\n\r\n    state = {\r\n        canvasWidth: 0,\r\n        canvasHeight: 0,\r\n        DisplayBoxWidth: 0,\r\n        DisplayBoxHeight: 0,\r\n    }\r\n\r\n    handleDrawImgToGrid = (src, callback) => {\r\n        const gridPositions = this.GridController.getGridPositions()\r\n        this.ImageController.drawToGrid(src, gridPositions, callback)\r\n\r\n    }\r\n\r\n    handleGetImageNoGrid = () => {\r\n        const { width, height } = this.props.tileset\r\n        const gridPositions = this.GridController.getGridPositions()\r\n        const imageDimension = { width, height }\r\n        return this.ImageController.getImageFromGrid(gridPositions, imageDimension)\r\n    }\r\n\r\n    getTileset = () => {\r\n        return this.props.tileset\r\n    }\r\n\r\n    getSelectedTools = () => {\r\n        const { selectedTool } = this.props\r\n        if (selectedTool === TOOLS.ZOOM_IN)\r\n            return 'display-zoom-in'\r\n        if (selectedTool === TOOLS.ZOOM_OUT)\r\n            return 'display-zoom-out'\r\n        if (selectedTool === TOOLS.PENCIL)\r\n            return 'display-pencil'\r\n        if (selectedTool === TOOLS.ERASER)\r\n            return 'display-eraser'\r\n        if (selectedTool === TOOLS.FILL)\r\n            return 'display-fill'\r\n        if (selectedTool)\r\n            return 'display-cross-cursor'\r\n        return ''\r\n    }\r\n\r\n    handleExport = () => {\r\n        const { name } = this.props.tileset\r\n        const imgData = this.handleGetImageNoGrid();\r\n        require(\"downloadjs\")(imgData, `${name}.jpeg`, \"image/jpeg\");\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { canvas } = this.refs;\r\n        if (!canvas) return\r\n\r\n        const { tileset } = this.props\r\n        const { width, height, tileWidth, tileHeight } = tileset\r\n        this.ctx = this.refs.canvas.getContext('2d')\r\n\r\n        this.GridController = new GridController(this.ctx, width, height, tileWidth, tileHeight)\r\n        const canvasDimension = this.GridController.getCanvasDimension()\r\n        const canvasWidth = canvasDimension.width\r\n        const canvasHeight = canvasDimension.height\r\n\r\n        const DisplayBoxDimension = this.refs.painterBox.getBoundingClientRect()\r\n        const DisplayBoxWidth = DisplayBoxDimension.width\r\n        const DisplayBoxHeight = DisplayBoxDimension.height\r\n\r\n        this.ImageController = new ImageController(\r\n            this.ctx, canvasWidth,\r\n            canvasHeight, tileWidth,\r\n            tileHeight, width, height\r\n        )\r\n\r\n        this.props.childRef(this)\r\n        this.setState({\r\n            canvasWidth,\r\n            canvasHeight,\r\n            DisplayBoxWidth,\r\n            DisplayBoxHeight\r\n        }, () => {\r\n            this.GridController.getPositionsForNoGridsImage()\r\n\r\n            this.GridController.drawGrid()\r\n            const { imageId } = this.props.tileset\r\n            if (imageId !== '')\r\n                axios.get(`/data/image?imageId=${imageId}`).then(res => {\r\n                    const { err, msg, data } = res.data\r\n                    if (err)\r\n                        console.log(msg)\r\n                    else {\r\n                        const base64Flag = 'data:image/jpeg;base64,';\r\n                        if (!data) return\r\n                        const imageStr = arrayBufferToBase64(data.data)\r\n                        this.handleDrawImgToGrid(base64Flag + imageStr)\r\n                    }\r\n                })\r\n\r\n\r\n        })\r\n        window.onresize = () => {\r\n            const { width, height } = this.refs.painterBox.getBoundingClientRect()\r\n            this.setState({\r\n                DisplayBoxWidth: width,\r\n                DisplayBoxHeight: height,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { canvasHeight, canvasWidth, DisplayBoxWidth, DisplayBoxHeight } = this.state\r\n        const { scale } = this.props\r\n        const scrollStyle = {\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'lightgray',\r\n            paddingBottom: 6,\r\n        }\r\n\r\n        const displayStyle = {\r\n            left: canvasWidth ? canvasWidth * scale >= DisplayBoxWidth ? 6 : (DisplayBoxWidth - canvasWidth * scale) / 2 + 6 : 6,\r\n            top: canvasHeight ? canvasHeight * scale >= DisplayBoxHeight ? 6 : (DisplayBoxHeight - canvasHeight * scale) / 2 + 6 : 6,\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"viewer-display\" ref='painterBox'>\r\n                <Scrollbars ref=\"scrollbar\"\r\n                    style={scrollStyle}\r\n                    renderThumbHorizontal={props => <div {...props} className=\"thumb\" />}\r\n                    renderThumbVertical={props => <div {...props} className=\"thumb\" />}\r\n                >\r\n\r\n                    <div className={\"display \" + this.getSelectedTools()} id='display'\r\n                        onClick={this.props.handleZoomEffect}\r\n                        style={displayStyle}>\r\n                        <canvas ref='canvas' width={canvasWidth} height={canvasHeight} className='draw-canvas'>\r\n                            Your Browser Does Not Support Canvas\r\n                        </canvas>\r\n\r\n                    </div>\r\n\r\n                </ Scrollbars>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { selected } = state.toolbar\r\n    return {\r\n        selectedTool: selected,\r\n        socket: state.backend.socket,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewerDisplay)\r\n","import React from 'react'\r\nimport TOOLS from '../tools/ToolbarTools'\r\nimport TopNavbar from '../tools/TopNavbar'\r\nimport { connect } from 'react-redux';\r\nimport * as handler from '../../store/database/WorkScreenHandler';\r\nimport Toolbar from '../tools/Toolbar.js'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Query } from 'react-apollo'\r\nimport ViewerDisplay from './ViewerDisplay'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from '../tools/Dialog'\r\nimport { Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\n\r\nclass TilesetViewer extends React.Component {\r\n\r\n\r\n    state = {\r\n        scale: 1,\r\n        open: false,\r\n        name: ''\r\n    }\r\n\r\n    display = React.createRef()\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ open: true })\r\n    }\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    handleOnChange = e => {\r\n        this.setState({ name: e.target.value })\r\n    }\r\n\r\n    handleDuplicate = () => {\r\n        const imgData = this.display.handleGetImageNoGrid()\r\n\r\n        const tileset = this.display.getTileset()\r\n        const { userId, name } = this.state\r\n        const data = {\r\n            name: name,\r\n            data: imgData,\r\n            tileset: tileset, userId: userId\r\n        }\r\n        this.props.socket.emit('duplicate-image', data)\r\n        this.handleDialogClose()\r\n    }\r\n\r\n\r\n\r\n    handleZoomEffect = (e) => {\r\n\r\n        e.stopPropagation()\r\n        const { selectedTool } = this.props;\r\n        if (selectedTool !== TOOLS.ZOOM_IN && selectedTool !== TOOLS.ZOOM_OUT) return\r\n        const { scale } = this.state\r\n        const factor = selectedTool === TOOLS.ZOOM_IN ? 1 / 0.8 : selectedTool === TOOLS.ZOOM_OUT ? 0.8 : 1\r\n        const nscale = scale * factor\r\n        this.setState({ scale: nscale })\r\n\r\n        let target = document.getElementById('display')\r\n        const rect = target.getBoundingClientRect()\r\n        const { clientX, clientY } = e\r\n        const { left, top } = rect\r\n        const dx = clientX - left\r\n        const dy = clientY - top\r\n        const ndy = dy * factor\r\n        const ndx = dx * factor\r\n        const ddy = ndy - dy\r\n        const ddx = ndx - dx\r\n        target.style.transform = \"scale(\" + nscale + \")\"\r\n\r\n\r\n        const currX = this.display.refs.scrollbar.getScrollLeft();\r\n        const currY = this.display.refs.scrollbar.getScrollTop();\r\n\r\n        if (nscale >= 1) {\r\n            this.display.refs.scrollbar.scrollLeft(ddx + currX)\r\n            this.display.refs.scrollbar.scrollTop(ddy + currY)\r\n        }\r\n    }\r\n\r\n    handleUnselect = () => {\r\n        this.props.handleUnselect();\r\n    };\r\n\r\n    handleExport = () => {\r\n        this.display.handleExport();\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.socket.on('duplicate-image-back', res => {\r\n            this.props.history.push(`/tileseteditor/${res}`)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/auth/current').then(res => {\r\n            const { username, _id } = res.data;\r\n            if (!username || !_id)\r\n                this.props.history.push('/');\r\n            else {\r\n                this.setState({ username, userId: _id });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { key } = this.props.match.params\r\n        const { history, } = this.props;\r\n        const { scale, open, name } = this.state\r\n        return (\r\n            <div onClick={this.handleUnselect}>\r\n                <TopNavbar site='test' history={history} />\r\n                <div className=\"painter-wrapper\">\r\n                    <Toolbar\r\n                        className=\"map-toolbar\"\r\n                        content={[\r\n                            { name: TOOLS.DOWNLOAD, item: <i className={\"fas fa-download\"} style={{ fontSize: '24px' }} onClick={this.handleExport} /> },\r\n                            { name: TOOLS.SAVE, item: <i className={\"fas fa-save\"} style={{ fontSize: '24px' }} onClick={this.handleDialogOpen} /> },\r\n                        ]}\r\n                        rightContent={[\r\n                            { name: TOOLS.ZOOM_OUT, item: <i className={\"fas fa-search-minus\"} style={{ fontSize: '24px' }} /> },\r\n                            { name: TOOLS.ZOOM_IN, item: <i className={\"fas fa-search-plus\"} style={{ fontSize: '24px' }} /> },\r\n                        ]}\r\n                />\r\n                <Query query={QueryList.GET_TILESET} variables={{ id: key }} fetchPolicy={'network-only'}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading) return 'loading'\r\n                        if (error) return 'error'\r\n                        if (!data) return 'error'\r\n                        const { tileset } = data\r\n\r\n                        return (\r\n                            <ViewerDisplay\r\n                                tileset={tileset}\r\n                                handleZoomEffect={this.handleZoomEffect}\r\n                                scale={scale}\r\n                                childRef={ref => this.display = ref}\r\n                            />\r\n                        )\r\n                    }}\r\n                </Query>\r\n            </div>\r\n                <Dialog\r\n                    header=\"Saving Tileset\"\r\n                    open={open}\r\n                    actions={[\r\n                        <Button key='1' onClick={this.handleDuplicate}>Confirm</Button>,\r\n                        <Button key='2' onClick={this.handleDialogClose}>Cancel</Button>\r\n                    ]}\r\n                    content={[\r\n                        <h3 key='1'>This is a published Tileset, You cannot change it</h3>,\r\n                        <h3 key='2'>But you can own it By making a duplicate of it</h3>,\r\n                        <h3 key='3'>After Duplication You will have to publish it to use it</h3>,\r\n                        <TextField\r\n                            key='r'\r\n                            className='duplicate-input'\r\n                            label=\"Enter Name for your new tileset\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            value={name}\r\n                            onChange={this.handleOnChange}\r\n                        />\r\n                    ]} />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { selected } = state.toolbar;\r\n    return {\r\n        selectedTool: selected,\r\n        socket: state.backend.socket\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleUnselect: () => dispatch(handler.toolbarUnselectHandler()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TilesetViewer);","import React from 'react'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { v1 } from 'uuid'\r\nimport MutationList from '../../graphql/Mutation'\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\nclass ProjectManager extends React.Component {\r\n\r\n    handleAddProject = (callback) => {\r\n        const { dataToAdd } = this.props\r\n        dataToAdd.forEach(p => {\r\n            callback({\r\n                variables: {\r\n                    name: p.name,\r\n                    owner: p.owner,\r\n                    editors: p.editors,\r\n                    imageId: p.imageId,\r\n                    mapId: p.mapId,\r\n                    tilesetId: p.tilesetId,\r\n                    tilesetFirstgid: p.tilesetFirstgid,\r\n                    layerId: p.layerId,\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClear = (callback) => {\r\n        callback()\r\n    }\r\n\r\n\r\n    render() {\r\n        const refetch = {\r\n            query: QueryList.GET_PROJECTS\r\n        }\r\n\r\n        return (\r\n            <Query query={QueryList.GET_PROJECTS}>\r\n                {(projectsRes) => {\r\n                    if (projectsRes.loading) return 'loading'\r\n                    if (projectsRes.error) return 'error'\r\n                    const { projects } = projectsRes.data\r\n                    return (\r\n                        <Mutation mutation={MutationList.ADD_PROJECT} refetchQueries={[refetch]}>\r\n                            {(addProjects, addProjectRes) => (\r\n                                <Mutation mutation={MutationList.CLEAR_PROJECTS} refetchQueries={[refetch]}>\r\n                                    {(clearProjects, clearProjectsRes) => (\r\n                                        <div className='test-manager-wrapper'>\r\n                                            projects\r\n                                            <div className=\"test-btn-box\">\r\n                                                <Button className='test-btn' onClick={() => this.handleAddProject(addProjects)}>ADD</Button>\r\n                                                <Button className='test-btn' onClick={() => this.handleClear(clearProjects)}>CLEAR</Button>\r\n                                            </div>\r\n\r\n                                            {projects.map(p => <div key={v1()} className=\"test-context\">{JSON.stringify(p)}</div>)}\r\n                                        </div>\r\n                                    )}\r\n                                </Mutation>\r\n                            )}\r\n                        </Mutation>\r\n                    )\r\n                }\r\n                }\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProjectManager","import React from 'react'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { v1 } from 'uuid'\r\nimport MutationList from '../../graphql/Mutation'\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass TilesetManager extends React.Component {\r\n\r\n    handleAddProject = (callback) => {\r\n        const { dataToAdd } = this.props\r\n        dataToAdd.forEach(t => {\r\n            callback({\r\n                variables: {\r\n                    id: t._id,\r\n                    name: t.name,\r\n                    owner: t.owner,\r\n                    editors: t.editors,\r\n                    imageId: t.imageId,\r\n                    tileWidth: t.tileWidth,\r\n                    tileHeight: t.tileHeight,\r\n                    width: t.width,\r\n                    height: t.height,\r\n\r\n                    columns: t.columns,\r\n                    margin: t.margin,\r\n                    spacing: t.spacing,\r\n                    tilecount: t.tilecount,\r\n                    published: t.published\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClear = (callback) => {\r\n        callback()\r\n    }\r\n\r\n\r\n    render() {\r\n        const refetch = {\r\n            query: QueryList.GET_ALL_TILESETS\r\n        }\r\n\r\n        return (\r\n            <Query query={QueryList.GET_ALL_TILESETS}>\r\n                {(tilesetsRes) => {\r\n                    if (tilesetsRes.loading) return 'loading'\r\n                    if (tilesetsRes.error) return 'error'\r\n                    const { tilesets } = tilesetsRes.data\r\n                    const btn_disable = tilesets.length === 0 ? false : true\r\n                    return (\r\n                        <Mutation mutation={MutationList.ADD_TILESET} refetchQueries={[refetch]}>\r\n                            {(addTilesets, addProjectRes) => (\r\n                                <Mutation mutation={MutationList.CLEAR_TILESETS} refetchQueries={[refetch]}>\r\n                                    {(clearTilesets, clearProjectsRes) => (\r\n                                        <div className='test-manager-wrapper'>\r\n                                            tilesets\r\n                                            <div className=\"test-btn-box\">\r\n                                                <Button className='test-btn' disabled={btn_disable} onClick={() => this.handleAddProject(addTilesets)}>Add</Button>\r\n                                                <Button className='test-btn' onClick={() => this.handleClear(clearTilesets)}>CLEAR</Button>\r\n                                            </div>\r\n                                            {tilesets.map(p => <div key={v1()} className=\"test-context\">{JSON.stringify(p)}</div>)}\r\n                                        </div>\r\n                                    )}\r\n                                </Mutation>\r\n                            )}\r\n                        </Mutation>\r\n                    )\r\n                }\r\n                }\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TilesetManager","import React from 'react'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { v1 } from 'uuid'\r\nimport MutationList from '../../graphql/Mutation'\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass MapManager extends React.Component {\r\n\r\n    handleAddMap = (callback) => {\r\n        const { dataToAdd } = this.props\r\n        dataToAdd.forEach(m => {\r\n            callback({\r\n                variables: {\r\n                    id: m._id,\r\n                    width: m.width,\r\n                    height: m.height,\r\n                    infinite: m.infinite,\r\n                    nextlayerid: m.nextlayerid,\r\n                    nextobjectid: m.nextobjectid,\r\n                    orientation: m.orientation,\r\n                    renderorder: m.renderorder,\r\n                    tiledversion: m.tiledversion,\r\n                    tileHeight: m.tileHeight,\r\n                    tileWidth: m.tileWidth,\r\n                    type: m.type,\r\n                    version: m.version\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClear = (callback) => {\r\n        callback()\r\n    }\r\n\r\n\r\n    render() {\r\n        const refetch = {\r\n            query: QueryList.GET_ALL_MAPS\r\n        }\r\n\r\n        return (\r\n            <Query query={QueryList.GET_ALL_MAPS}>\r\n                {(mapsRes) => {\r\n                    if (mapsRes.loading) return 'loading'\r\n                    if (mapsRes.error) return 'error'\r\n                    const { maps } = mapsRes.data\r\n                    const btn_disable = maps.length === 0 ? false : true\r\n                    return (\r\n                        <Mutation mutation={MutationList.ADD_MAP} refetchQueries={[refetch]}>\r\n                            {(addMaps, addProjectRes) => (\r\n                                <Mutation mutation={MutationList.CLEAR_MAPS} refetchQueries={[refetch]}>\r\n                                    {(clearMaps, clearProjectsRes) => (\r\n                                        <div className='test-manager-wrapper'>\r\n                                            maps\r\n                                            <div className=\"test-btn-box\">\r\n                                                <Button className='test-btn' disabled={btn_disable} onClick={() => this.handleAddMap(addMaps)}>ADD</Button>\r\n                                                <Button className='test-btn' onClick={() => this.handleClear(clearMaps)}>CLEAR</Button>\r\n                                            </div>\r\n                                            {maps.map(p => <div key={v1()} className=\"test-context\">{JSON.stringify(p)}</div>)}\r\n                                        </div>\r\n                                    )}\r\n                                </Mutation>\r\n                            )}\r\n                        </Mutation>\r\n                    )\r\n                }\r\n                }\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapManager","import React from 'react'\r\nimport QueryList from '../../graphql/Query'\r\nimport { Mutation, Query } from 'react-apollo'\r\nimport { v1 } from 'uuid'\r\nimport MutationList from '../../graphql/Mutation'\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass MapManager extends React.Component {\r\n\r\n    handleAddMap = (callback) => {\r\n        const { dataToAdd } = this.props\r\n        dataToAdd.forEach(m => {\r\n            callback({\r\n                variables: {\r\n                    _id: m._id,\r\n                    data: m.data,\r\n                    height: m.height,\r\n                    width: m.width,\r\n                    name: m.name,\r\n                    opacity: m.opacity,\r\n                    type: m.type,\r\n                    visible: m.visible,\r\n                    x: m.x,\r\n                    y: m.y\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClear = (callback) => {\r\n        callback()\r\n    }\r\n\r\n\r\n    render() {\r\n        const refetch = {\r\n            query: QueryList.GET_ALL_LAYERS\r\n        }\r\n\r\n        return (\r\n            <Query query={QueryList.GET_ALL_LAYERS}>\r\n                {(layersRes) => {\r\n                    if (layersRes.loading) return 'loading'\r\n                    if (layersRes.error) return 'error'\r\n                    const { layers } = layersRes.data\r\n                    const btn_disable = layers.length === 0 ? false : true\r\n                    return (\r\n                        <Mutation mutation={MutationList.ADD_LAYER} refetchQueries={[refetch]}>\r\n                            {(addLayers, addProjectRes) => (\r\n                                <Mutation mutation={MutationList.CLEAR_LAYERS} refetchQueries={[refetch]}>\r\n                                    {(clearLayers, clearProjectsRes) => (\r\n                                        <div className='test-manager-wrapper'>\r\n                                            layers\r\n                                            <div className=\"test-btn-box\">\r\n                                                <Button className='test-btn' disabled={btn_disable} onClick={() => this.handleAddMap(addLayers)}>ADD</Button>\r\n                                                <Button className='test-btn' onClick={() => this.handleClear(clearLayers)}>CLEAR</Button>\r\n                                            </div>\r\n                                            {layers.map(p => <div key={v1()} className=\"test-context\">{JSON.stringify(p)}</div>)}\r\n                                        </div>\r\n                                    )}\r\n                                </Mutation>\r\n                            )}\r\n                        </Mutation>\r\n                    )\r\n                }\r\n                }\r\n            </Query>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MapManager","import React from 'react'\r\nimport './test.css'\r\nimport TopNavbar from '../tools/TopNavbar'\r\nimport ProjectManager from './ProjectManager'\r\nimport TilesetManager from './TilesetManager'\r\nimport MapManager from './MapManager'\r\nimport projectJson from './data.json'\r\nimport LayerManager from './LayerManager'\r\n\r\nclass TestScreen extends React.Component {\r\n\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const { projects, maps, tilesets, layers } = projectJson\r\n\r\n        this.projectToDisplay = {\r\n            projectsInJson: projects,\r\n            mapsInJson: maps,\r\n            tilesetsInJson: tilesets,\r\n            layersInJson: layers,\r\n        }\r\n        this.projectToReduer = { projects, maps, tilesets, layers }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { history } = this.props\r\n        return (\r\n            <>\r\n                <TopNavbar side='test' history={history} />\r\n                <div className=\"test-wrapper\">\r\n                    <div className=\"test-title\">Controll of mongoDB</div>\r\n                    <ProjectManager dataToAdd={this.projectToReduer.projects} />\r\n                    <TilesetManager dataToAdd={this.projectToReduer.tilesets} />\r\n                    <MapManager dataToAdd={this.projectToReduer.maps} />\r\n                    <LayerManager dataToAdd={this.projectToReduer.layers} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TestScreen","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport LoginScreen from './components/home/LoginScreen';\r\nimport RegisterScreen from './components/home/RegisterScreen';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport WorkScreen from './components/work/WorkScreen';\r\nimport DrawScreen from './components/draw/Draw'\r\nimport TilesetViewer from './components/draw/TilesetViewer'\r\nimport TestScreen from './components/test/TestScreen'\r\nimport { createSocketHandler } from './store/database/HomeScreenHandler'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.createSocket();\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LoginScreen} />\r\n            <Route path=\"/register\" component={RegisterScreen} />\r\n            <Route path='/dashboard' component={Dashboard} />\r\n            <Route path='/project/:key' component={WorkScreen} />\r\n            <Route path='/tileseteditor/:key' component={DrawScreen} />\r\n            <Route path='/tilesetviewer/:key' component={TilesetViewer} />\r\n            <Route path='/test' component={TestScreen} />\r\n            <Route path=\"/:any\" component={LoginScreen} />\r\n          </Switch>\r\n        </div>\r\n\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createSocket: () => dispatch(createSocketHandler()),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst initState = {\r\n    user: null,\r\n    errmsg: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    if (action.type === actionCreators.LOGIN_ERROR) {\r\n        return {\r\n            user: null,\r\n            errmsg: action.errmsg\r\n        }\r\n    } else if (action.type === actionCreators.LOGIN_SUCCESS) {\r\n        return {\r\n            user: action.user,\r\n            errmsg: null\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default authReducer;\r\n","import { API_URL } from '../../config'\r\nimport io from 'socket.io-client'\r\n\r\n\r\nconst initState = {};\r\n\r\nconst backendReducer = (state = initState, action) => {\r\n    if (action.type === 'CREATE_SOCKET') {\r\n        const socket = io(API_URL)\r\n        socket.on('connect', () => {\r\n            // console.log(socket.id)\r\n        })\r\n        return {\r\n            socket\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default backendReducer;","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst initState = {\r\n    imgs: {},\r\n    loaded: false,\r\n    selectedGrids: [],\r\n    selectedItem: null,\r\n};\r\n\r\nconst tilesetReducer = (state = initState, action) => {\r\n    if (action.type === actionCreators.FORMAT_PROJECT) {\r\n        let { tilesetsInfo, tilesetFirstgid } = action.project\r\n        for (let i = 0; i < tilesetsInfo.length; i++) {\r\n            tilesetsInfo[i].firstgid = tilesetFirstgid[i]\r\n        }\r\n        return {\r\n            ...state,\r\n            tilesets: tilesetsInfo\r\n        }\r\n    }\r\n    else if (action.type === actionCreators.TILESET_UNSELECT) {\r\n        return {\r\n            ...state,\r\n            selected: null,\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.TILESET_LOADED) {\r\n        return {\r\n            ...state,\r\n            loaded: true\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.TILESET_ID_APPLIER) {\r\n        const { id, index } = action\r\n        let tilesets = []\r\n        for (let i = 0; i < state.tilesets.length; i++) {\r\n            if (i === index) {\r\n                tilesets.push({\r\n                    ...state.tilesets[i],\r\n                    canvasId: id\r\n                })\r\n            } else {\r\n                tilesets.push(state.tilesets[i])\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            tilesets\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.SELECT_TILESET_GRIDS) {\r\n        return {\r\n            ...state,\r\n            selectedGrids: action.selectedGrids\r\n        }\r\n    }\r\n\r\n\r\n\r\n    else if (action.type === actionCreators.TILESET_SELECT) {\r\n        return {\r\n            ...state,\r\n            selected: action.value,\r\n        }\r\n    } else if (action.type === actionCreators.TILESET_IMG_INIT) {\r\n        let { imgs } = state\r\n        imgs[action.name] = action.value\r\n        return {\r\n            ...state,\r\n            imgs,\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.TILESETS_UPDATE) {\r\n        let newTilesets = [];\r\n        for (let i = 0; i < action.tilesets.length; i++) {\r\n            newTilesets.push(action.tilesets[i])\r\n        }\r\n        return{\r\n            ...state,\r\n            tilesets: newTilesets\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.PASS_SELECTED_TILESET) {\r\n        return{\r\n            ...state,\r\n            selectedItem: action.selectedItem\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.TILESET_DELETE) {\r\n        let newTilesets = state.tilesets.filter((tileset) => {\r\n            return tileset._id !== action.id\r\n        });\r\n        return{\r\n            ...state,\r\n            selectedItem: null,\r\n            tilesets:newTilesets\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.TILESET_RESTORE) {\r\n        const tilesets = action.tilesets.map(e => e);\r\n        if (!tilesets) return { ...state };\r\n        return {\r\n            ...state,\r\n            tilesets\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default tilesetReducer;","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst propertyReducer = (state = initState, action) => {\r\n\r\n    if (action.type === actionCreators.FORMAT_PROJECT) {\r\n        const { mapInfo, tilesetsInfo, layersInfo, customPropertyName, customPropertyValue } = action.project\r\n        const map = formateMap(mapInfo)\r\n        const tilesets = formateTilesets(tilesetsInfo)\r\n        const layers = formateLayers(layersInfo)\r\n        const custom = formateProperty(customPropertyName, customPropertyValue);\r\n        return {\r\n            ...state,\r\n            map, tilesets, layers, custom,\r\n            display: map,\r\n        }\r\n    }\r\n    else if (action.type === actionCreators.ADD_LAYER) {\r\n        let layerList = []\r\n        for (let i in state.layers) {\r\n            layerList.push({ ...state.layers[i] })\r\n        }\r\n        layerList.push({\r\n            name: action.layer.name,\r\n            visible: action.layer.visible + '',\r\n            opacity: action.layer.opacity\r\n        })\r\n\r\n        return {\r\n            ...state,\r\n            layers: layerList,\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.LAYER_RENAME) {\r\n        let layers = []\r\n        for (let i = 0; i < state.layers.length; i++) {\r\n            if (i === action.id)\r\n                layers.push({\r\n                    ...state.layers[i],\r\n                    name: action.name\r\n                })\r\n            else {\r\n                layers.push({ ...state.layers[i] })\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            layers,\r\n            display: layers[action.id]\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.LAYER_VISIBILITY_TOGGLE) {\r\n        let layers = []\r\n        for (let i = 0; i < state.layers.length; i++) {\r\n            layers.push({\r\n                ...state.layers[i],\r\n                visible: i === action.id ? !state.layers[i].visible : state.layers[i].visible\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            layers,\r\n            display: layers[action.id]\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.LAYER_RESTORE) {\r\n        const layers = action.layerList.map(e => e)\r\n        if (!layers) return { ...state }\r\n        return {\r\n            ...state,\r\n            layers\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.LAYER_SELECT) {\r\n        return {\r\n            ...state,\r\n            selectedLayer: action.id,\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.LAYER_DELETE) {\r\n        let layers = state.layers.map(e => e)\r\n        for (let i = 0; i < layers.length; i++)\r\n            if (i === action.id) {\r\n                layers.splice(i, 1)\r\n                break;\r\n            }\r\n        return {\r\n            ...state,\r\n            layers,\r\n            selected: null\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.SELECT_PROPERTY_WINDOW) {\r\n        let display = state.map\r\n        if (action.window === 'layers' || action.window === 'map  ') {\r\n            display = state[action.window][action.index]\r\n        }\r\n        return {\r\n            ...state,\r\n            display\r\n        }\r\n    }\r\n    else if (action.type === actionCreators.SELECT_PROPERTY_TILE) {\r\n        let display = { ...state[action.window][action.index] }\r\n        display.id = action.id\r\n        return {\r\n            ...state,\r\n            display\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.PROPERTY_SELECT) {\r\n        return {\r\n            ...state,\r\n            selected: {\r\n                window: action.window,\r\n                index: action.index,\r\n            }\r\n        }\r\n    } else if (action.type === actionCreators.PROPERTY_UNSELECT) {\r\n        return {\r\n            ...state,\r\n            selected: null,\r\n        }\r\n    } else if (action.type === actionCreators.PROPERTY_CHANGE) {\r\n        let custom = []\r\n        for (let i = 0; i < state.custom.length; i++) {\r\n            custom.push({\r\n                ...state.custom[i],\r\n                [action.name]: i === action.index ? action.value : state.custom[i][action.name]\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            custom\r\n        }\r\n    } else if (action.type === actionCreators.PROPERTY_DELETE) {\r\n        if (!state.selected) return { ...state }\r\n        const { window, index } = state.selected\r\n        let properties = state[window]\r\n        properties.splice(index, 1)\r\n        return {\r\n            ...state,\r\n            [window]: properties,\r\n            selected: null\r\n        }\r\n    } else if (action.type === actionCreators.ADD_PROPERTY) {\r\n        let custom = []\r\n        for (let i in state.custom) {\r\n            custom.push({\r\n                ...state.custom[i]\r\n            })\r\n        }\r\n        custom.push({\r\n            name: 'Click To Enter',\r\n            type: 'String',\r\n            value: 'Click To Enter'\r\n        })\r\n        return {\r\n            ...state,\r\n            custom\r\n        }\r\n    }\r\n    else if (action.type === actionCreators.RESTORE_CUSTOM_PROPERTY) {\r\n        let custom = []\r\n        for (let i in action.custom) {\r\n            custom.push({\r\n                ...action.custom[i]\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            custom\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default propertyReducer;\r\n\r\n\r\nconst initState = {\r\n    map: [],\r\n    layer: [],\r\n    tilesets: [],\r\n    custom: []\r\n};\r\n\r\n\r\nconst formateMap = (mapInfo) => {\r\n    const { width, height, tileWidth, tileHeight } = mapInfo\r\n    return { width, height, tileWidth, tileHeight }\r\n}\r\n\r\nconst formateTilesets = (tilesetsInfo) => {\r\n    let tilesets = []\r\n    for (let i = 0; i < tilesetsInfo.length; i++) {\r\n        const { width, height, tileWidth, tileHeight } = tilesetsInfo[i]\r\n        tilesets.push({\r\n            width, height, tileWidth, tileHeight\r\n        })\r\n    }\r\n\r\n    return tilesets\r\n}\r\n\r\nconst formateLayers = (layersInfo) => {\r\n    let layers = []\r\n    for (let i = 0; i < layersInfo.length; i++) {\r\n        const { opacity, visible, name } = layersInfo[i]\r\n        layers.push({\r\n            opacity, visible: visible + '', name,\r\n        })\r\n    }\r\n    return layers\r\n}\r\n\r\nconst formateProperty = (customPropertyName, customPropertyValue) => {\r\n    let custom = [];\r\n    for (let i = 0; i < customPropertyName.length; i++) {\r\n        custom.push({\r\n            name:customPropertyName[i], type:\"String\", value:customPropertyValue[i],\r\n        })\r\n    }\r\n    return custom;\r\n}","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst mapReducer = (state = initState, action) => {\r\n    if (action.type === actionCreators.FORMAT_PROJECT) {\r\n        let { mapInfo } = action.project\r\n        return {\r\n            ...state,\r\n            map: mapInfo\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.MAP_SELECT_TOOL) {\r\n        return {\r\n            ...state,\r\n            selectedTool: action.tool,\r\n\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.ADD_LAYER) {\r\n        const map = {\r\n            ...state.map,\r\n            nextlayerid: state.map.nextlayerid + 1\r\n        }\r\n        return {\r\n            ...state, map\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default mapReducer;\r\n\r\nconst initState = {\r\n};","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst layerReducer = (state = initState, action) => {\r\n\r\n    if (action.type === actionCreators.FORMAT_PROJECT) {\r\n        let layerList = action.project.layersInfo.map(e => {\r\n            e.locked = false\r\n            return e\r\n        })\r\n\r\n        let layerFormat = { ...action.project.mapInfo }\r\n\r\n        return {\r\n            ...state,\r\n            layerList,\r\n            layerFormat\r\n        }\r\n    }\r\n\r\n\r\n    else if (action.type === actionCreators.LAYER_SELECT) {\r\n        return {\r\n            ...state,\r\n            selected: action.id,\r\n\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_UNSELECT) {\r\n        return {\r\n            ...state,\r\n            selected: null,\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_RENAME) {\r\n        let { layerList } = state\r\n        for (let i = 0; i < layerList.length; i++) {\r\n            if (i === action.id) {\r\n                layerList[i].name = action.name\r\n                break;\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            layerList\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_DELETE) {\r\n        let layerList = state.layerList.map(e => e)\r\n        for (let i = 0; i < layerList.length; i++)\r\n            if (i === action.id) {\r\n                layerList.splice(i, 1)\r\n                break;\r\n            }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n            selected: null\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_MOVE_UP) {\r\n        let layerList = state.layerList.map(e => e)\r\n        for (let i = 0; i < layerList.length; i++)\r\n            if (layerList[i]._id === action.id) {\r\n                if (i === 0) {\r\n                    break;\r\n                }\r\n                let layer = layerList[i];\r\n                layerList[i] = layerList[i - 1];\r\n                layerList[i - 1] = layer;\r\n                break;\r\n            }\r\n        return {\r\n            ...state,\r\n            layerList: layerList,\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_MOVE_DOWN) {\r\n        let layerList = state.layerList.map(e => e);\r\n        for (let i = 0; i < layerList.length - 1; i++)\r\n            if (layerList[i]._id === action.id) {\r\n                let layer = layerList[i];\r\n                layerList[i] = layerList[i + 1];\r\n                layerList[i + 1] = layer;\r\n                break;\r\n            }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_VISIBILITY_TOGGLE) {\r\n        let layerList = []\r\n        for (let i = 0; i < state.layerList.length; i++) {\r\n            layerList.push({\r\n                ...state.layerList[i],\r\n                visible: i === action.id ? !state.layerList[i].visible : state.layerList[i].visible\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_LOCK_TOGGLE) {\r\n        let layerList = []\r\n        for (let i in state.layerList) {\r\n            layerList.push({\r\n                ...state.layerList[i],\r\n                locked: state.layerList[i]._id === action.id ? !state.layerList[i].locked : state.layerList[i].locked\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n    } else if (action.type === actionCreators.LAYER_PASS_OPACITY) {\r\n        let layerList = []\r\n        for (let i in state.layerList) {\r\n            layerList.push({\r\n                ...state.layerList[i],\r\n                opacity: state.layerList[i]._id === state.selected ? (action.value / 100) : state.layerList[i].opacity\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n    } else if (action.type === actionCreators.ADD_LAYER) {\r\n        let layerList = []\r\n        for (let i in state.layerList) {\r\n            layerList.push({ ...state.layerList[i] })\r\n        }\r\n        layerList.push({ ...action.layer })\r\n\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.MAP_STAMP_CLICK) {\r\n        if (!action.data) return { ...state }\r\n        let layerList = []\r\n        for (let i in state.layerList) {\r\n            layerList.push({\r\n                ...state.layerList[i],\r\n                data: state.layerList[i]._id === state.selected ? getFormatData(state.layerList[i].data, action.data) : state.layerList[i].data\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n\r\n    }\r\n\r\n    else if (action.type === actionCreators.MAP_FILL_CLICK) {\r\n        if (!action.data) return { ...state }\r\n        let layerList = []\r\n        for (let i in state.layerList) {\r\n            layerList.push({\r\n                ...state.layerList[i],\r\n                data: state.layerList[i]._id === state.selected ? action.data : state.layerList[i].locked\r\n            })\r\n        }\r\n        return {\r\n            ...state,\r\n            layerList,\r\n        }\r\n    }\r\n\r\n    else if (action.type === actionCreators.LAYER_RESTORE) {\r\n        const layerList = action.layerList.map(e => e)\r\n        if (!layerList) return { ...state }\r\n        return {\r\n            ...state,\r\n            layerList\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default layerReducer;\r\n\r\nconst layers = [\r\n]\r\n\r\n\r\nconst initState = {\r\n    layerList: layers,\r\n    selected: null\r\n};\r\n\r\nconst getFormatData = (data1, data2) => {\r\n    let returnData = []\r\n    for (let i in data1) {\r\n        if (data2[i] !== 0) returnData.push(data2[i])\r\n        else returnData.push(data1[i])\r\n    }\r\n    return returnData\r\n}","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst initState = {\r\n    selected: null\r\n};\r\n\r\nconst toolbarReducer = (state = initState, action) => {\r\n    if (action.type === actionCreators.TOOLBAR_SELECT) {\r\n        return {\r\n            ...state,\r\n            selected: action.name,\r\n        }\r\n    } else if (action.type === actionCreators.TOOLBAR_UNSELECT) {\r\n        return {\r\n            ...state,\r\n            selected: null,\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default toolbarReducer;","import * as actionCreators from '../actions/actionCreators'\r\n\r\nconst initState = {\r\n    loaded: false\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    if (action.type === actionCreators.FORMAT_PROJECT) {\r\n        let { project } = action\r\n        return {\r\n            ...state,\r\n            ...project,\r\n            loaded: true\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport backendReducer from './backendReducer'\r\nimport tilesetReducer from './tilesetReducer'\r\nimport propertyReducer from './propertyReducer'\r\nimport mapReducer from './mapReducer'\r\nimport layerReducer from './layerReducer'\r\nimport toolbarReducer from './toolbarReducer'\r\nimport projectReducer from './projectReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  backend: backendReducer,\r\n  tileset: tilesetReducer,\r\n  property: propertyReducer,\r\n  map: mapReducer,\r\n  layer: layerReducer,\r\n  toolbar: toolbarReducer,\r\n  project: projectReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './css/todo_layout.css'\r\nimport './css/todo_style.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\n\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { API_URL } from './config'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nconst client = new ApolloClient({ uri: `${API_URL}/graphql` });\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ApolloProvider client={client}>\r\n            <App />\r\n        </ApolloProvider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}